2014-02-22 13:11:36,695 INFO  [mondrian.olap.MondrianProperties] Mondrian: properties loaded from 'file:/C:/_D/_code/GitHub/BI/mondrian/mondrian-srv/target/test-classes/mondrian.properties'
2014-02-22 13:11:36,697 INFO  [mondrian.olap.MondrianProperties] Mondrian: loaded 0 system properties
2014-02-22 13:11:37,444 INFO  [mondrian.rolap.RolapUtil] Mondrian: JDBC driver com.mysql.jdbc.Driver loaded successfully
2014-02-22 13:11:37,539 INFO  [org.apache.commons.vfs.impl.StandardFileSystemManager] Using "C:\Users\PeterPan\AppData\Local\Temp\vfs_cache" as temporary files store.
2014-02-22 13:11:39,713 DEBUG [mondrian.sql] 0: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:39,730 DEBUG [mondrian.sql] 0: , exec 10 ms
2014-02-22 13:11:39,738 DEBUG [mondrian.sql] 0: , exec+fetch 23 ms, 2 rows
2014-02-22 13:11:39,779 DEBUG [mondrian.sql] 1: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:39,780 DEBUG [mondrian.sql] 1: , exec 0 ms
2014-02-22 13:11:39,781 DEBUG [mondrian.sql] 1: , exec+fetch 2 ms, 2 rows
2014-02-22 13:11:39,883 DEBUG [mondrian.sql] 2: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:39,884 DEBUG [mondrian.sql] 2: , exec 0 ms
2014-02-22 13:11:39,885 DEBUG [mondrian.sql] 2: , exec+fetch 1 ms, 2 rows
2014-02-22 13:11:39,886 DEBUG [mondrian.sql] 3: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:39,887 DEBUG [mondrian.sql] 3: , exec 0 ms
2014-02-22 13:11:39,887 DEBUG [mondrian.sql] 3: , exec+fetch 1 ms, 2 rows
2014-02-22 13:11:39,952 DEBUG [mondrian.sql] 4: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:39,953 DEBUG [mondrian.sql] 4: , exec 0 ms
2014-02-22 13:11:39,955 DEBUG [mondrian.sql] 4: , exec+fetch 2 ms, 2 rows
2014-02-22 13:11:39,956 DEBUG [mondrian.sql] 5: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:39,956 DEBUG [mondrian.sql] 5: , exec 0 ms
2014-02-22 13:11:39,957 DEBUG [mondrian.sql] 5: , exec+fetch 1 ms, 2 rows
2014-02-22 13:11:39,997 DEBUG [mondrian.sql] 6: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:11:40,008 DEBUG [mondrian.sql] 6: , exec 8 ms
2014-02-22 13:11:40,009 DEBUG [mondrian.sql] 6: , exec+fetch 11 ms, 1 rows
2014-02-22 13:11:40,018 DEBUG [mondrian.sql] 7: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:11:40,021 DEBUG [mondrian.sql] 7: , exec 2 ms
2014-02-22 13:11:40,022 DEBUG [mondrian.sql] 7: , exec+fetch 3 ms, 1 rows
2014-02-22 13:11:40,026 DEBUG [mondrian.sql] 8: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:11:40,028 DEBUG [mondrian.sql] 8: , exec 1 ms
2014-02-22 13:11:40,029 DEBUG [mondrian.sql] 8: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:40,031 DEBUG [mondrian.sql] 9: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:11:40,065 DEBUG [mondrian.sql] 9: , exec 34 ms
2014-02-22 13:11:40,066 DEBUG [mondrian.sql] 9: , exec+fetch 35 ms, 1 rows
2014-02-22 13:11:40,067 DEBUG [mondrian.sql] 10: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:11:40,096 DEBUG [mondrian.sql] 10: , exec 28 ms
2014-02-22 13:11:40,096 DEBUG [mondrian.sql] 10: , exec+fetch 29 ms, 1 rows
2014-02-22 13:11:40,098 DEBUG [mondrian.sql] 11: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:11:40,113 DEBUG [mondrian.sql] 11: , exec 14 ms
2014-02-22 13:11:40,115 DEBUG [mondrian.sql] 11: , exec+fetch 17 ms, 1 rows
2014-02-22 13:11:40,157 DEBUG [mondrian.mdx] 179: select {[Measures].[Unit Sales]} ON COLUMNS
from [Sales]

2014-02-22 13:11:40,192 DEBUG [mondrian.sql] 12: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `the_year`) from `time_by_day`]
2014-02-22 13:11:40,195 DEBUG [mondrian.sql] 12: , exec 1 ms
2014-02-22 13:11:40,196 DEBUG [mondrian.sql] 12: , exec+fetch 4 ms, 1 rows
2014-02-22 13:11:40,263 DEBUG [mondrian.sql] 13: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year`]
2014-02-22 13:11:40,857 DEBUG [mondrian.sql] 13: , exec 593 ms
2014-02-22 13:11:40,889 DEBUG [mondrian.sql] 13: , exec+fetch 625 ms, 1 rows
2014-02-22 13:11:40,916 DEBUG [mondrian.mdx] 179: exec: 758 ms
2014-02-22 13:11:40,971 DEBUG [mondrian.sql] 14: SqlTupleReader.readTuples [[Promotion Media].[Media Type]]: executing sql [select `promotion`.`media_type` as `c0` from `promotion` as `promotion` group by `promotion`.`media_type` order by ISNULL(`promotion`.`media_type`) ASC, `promotion`.`media_type` ASC]
2014-02-22 13:11:40,980 DEBUG [mondrian.sql] 14: , exec 9 ms
2014-02-22 13:11:40,984 DEBUG [mondrian.sql] 14: , exec+fetch 13 ms, 14 rows
2014-02-22 13:11:41,002 DEBUG [mondrian.mdx] 192: select {[Measures].[Unit Sales]} ON COLUMNS,
  Order(Except([Promotion Media].[Media Type].Members, {[Promotion Media].[No Media]}), [Measures].[Unit Sales], DESC) ON ROWS
from [Sales]

2014-02-22 13:11:41,016 DEBUG [mondrian.sql] 15: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `media_type`) from `promotion`]
2014-02-22 13:11:41,018 DEBUG [mondrian.sql] 15: , exec 2 ms
2014-02-22 13:11:41,019 DEBUG [mondrian.sql] 15: , exec+fetch 3 ms, 1 rows
2014-02-22 13:11:41,023 DEBUG [mondrian.sql] 16: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `promotion`.`media_type` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` group by `time_by_day`.`the_year`, `promotion`.`media_type`]
2014-02-22 13:11:41,290 DEBUG [mondrian.sql] 16: , exec 266 ms
2014-02-22 13:11:41,292 DEBUG [mondrian.sql] 16: , exec+fetch 269 ms, 14 rows
2014-02-22 13:11:41,299 DEBUG [mondrian.mdx] 192: exec: 296 ms
2014-02-22 13:11:41,304 DEBUG [mondrian.mdx] 203: select {[Measures].[Units Shipped], [Measures].[Units Ordered]} ON COLUMNS,
  NON EMPTY [Store].[Store Name].Members ON ROWS
from [Warehouse]

2014-02-22 13:11:41,321 DEBUG [mondrian.sql] 17: SqlTupleReader.readTuples [[Store].[Store Name]]: executing sql [select `store`.`store_country` as `c0`, `store`.`store_state` as `c1`, `store`.`store_city` as `c2`, `store`.`store_name` as `c3`, `store`.`store_type` as `c4`, `store`.`store_manager` as `c5`, `store`.`store_sqft` as `c6`, `store`.`grocery_sqft` as `c7`, `store`.`frozen_sqft` as `c8`, `store`.`meat_sqft` as `c9`, `store`.`coffee_bar` as `c10`, `store`.`store_street_address` as `c11` from `store` as `store`, `inventory_fact_1997` as `inventory_fact_1997` where `inventory_fact_1997`.`store_id` = `store`.`store_id` group by `store`.`store_country`, `store`.`store_state`, `store`.`store_city`, `store`.`store_name`, `store`.`store_type`, `store`.`store_manager`, `store`.`store_sqft`, `store`.`grocery_sqft`, `store`.`frozen_sqft`, `store`.`meat_sqft`, `store`.`coffee_bar`, `store`.`store_street_address` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC, ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC, ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC, ISNULL(`store`.`store_name`) ASC, `store`.`store_name` ASC]
2014-02-22 13:11:41,358 DEBUG [mondrian.sql] 17: , exec 35 ms
2014-02-22 13:11:41,365 DEBUG [mondrian.sql] 17: , exec+fetch 43 ms, 13 rows
2014-02-22 13:11:41,371 DEBUG [mondrian.sql] 18: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_name`) from `store`]
2014-02-22 13:11:41,372 DEBUG [mondrian.sql] 18: , exec 0 ms
2014-02-22 13:11:41,373 DEBUG [mondrian.sql] 18: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:41,373 DEBUG [mondrian.sql] 19: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `the_year`) from `time_by_day`]
2014-02-22 13:11:41,374 DEBUG [mondrian.sql] 19: , exec 0 ms
2014-02-22 13:11:41,375 DEBUG [mondrian.sql] 19: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:41,378 DEBUG [mondrian.sql] 20: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, sum(`inventory_fact_1997`.`units_shipped`) as `m0`, sum(`inventory_fact_1997`.`units_ordered`) as `m1` from `store` as `store`, `inventory_fact_1997` as `inventory_fact_1997`, `time_by_day` as `time_by_day` where `inventory_fact_1997`.`store_id` = `store`.`store_id` and `inventory_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_name`, `time_by_day`.`the_year`]
2014-02-22 13:11:41,398 DEBUG [mondrian.sql] 20: , exec 19 ms
2014-02-22 13:11:41,400 DEBUG [mondrian.sql] 20: , exec+fetch 22 ms, 13 rows
2014-02-22 13:11:41,407 DEBUG [mondrian.mdx] 203: exec: 103 ms
2014-02-22 13:11:41,428 DEBUG [mondrian.mdx] 221: with member [Measures].[Store Sales Last Period] as '([Measures].[Store Sales], [Time].PrevMember)', format = "#,###.00"
select {[Measures].[Store Sales Last Period]} ON COLUMNS,
  {TopCount([Product].[Product Department].Members, 5, [Measures].[Store Sales Last Period])} ON ROWS
from [Sales]
where [Time].[1998]

2014-02-22 13:11:41,454 DEBUG [mondrian.sql] 21: SqlTupleReader.readTuples [[Product].[Product Department]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family`, `product_class`.`product_department` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC]
2014-02-22 13:11:41,470 DEBUG [mondrian.sql] 21: , exec 15 ms
2014-02-22 13:11:41,474 DEBUG [mondrian.sql] 21: , exec+fetch 19 ms, 23 rows
2014-02-22 13:11:41,498 DEBUG [mondrian.sql] 22: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_family`) from `product_class`]
2014-02-22 13:11:41,500 DEBUG [mondrian.sql] 22: , exec 0 ms
2014-02-22 13:11:41,500 DEBUG [mondrian.sql] 22: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:41,501 DEBUG [mondrian.sql] 23: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_department`) from `product_class`]
2014-02-22 13:11:41,502 DEBUG [mondrian.sql] 23: , exec 0 ms
2014-02-22 13:11:41,503 DEBUG [mondrian.sql] 23: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:41,506 DEBUG [mondrian.sql] 24: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:11:43,670 DEBUG [mondrian.sql] 24: , exec 2162 ms
2014-02-22 13:11:43,674 DEBUG [mondrian.sql] 24: , exec+fetch 2168 ms, 23 rows
2014-02-22 13:11:43,686 DEBUG [mondrian.mdx] 221: exec: 2257 ms
2014-02-22 13:11:43,697 DEBUG [mondrian.sql] 25: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`quarter` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and UPPER(`time_by_day`.`quarter`) = UPPER('Q2') group by `time_by_day`.`quarter` order by ISNULL(`time_by_day`.`quarter`) ASC, `time_by_day`.`quarter` ASC]
2014-02-22 13:11:43,705 DEBUG [mondrian.sql] 25: , exec 7 ms
2014-02-22 13:11:43,705 DEBUG [mondrian.sql] 25: , exec+fetch 8 ms, 1 rows
2014-02-22 13:11:43,707 DEBUG [mondrian.sql] 26: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`month_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`quarter` = 'Q2' and `time_by_day`.`the_year` = 1997) and `time_by_day`.`month_of_year` = 4 group by `time_by_day`.`month_of_year` order by ISNULL(`time_by_day`.`month_of_year`) ASC, `time_by_day`.`month_of_year` ASC]
2014-02-22 13:11:43,711 DEBUG [mondrian.sql] 26: , exec 3 ms
2014-02-22 13:11:43,712 DEBUG [mondrian.sql] 26: , exec+fetch 5 ms, 1 rows
2014-02-22 13:11:43,714 DEBUG [mondrian.mdx] 237: with member [Measures].[Total Store Sales] as 'Sum(Ytd(), [Measures].[Store Sales])', format_string = "#.00"
select {[Measures].[Total Store Sales]} ON COLUMNS,
  {TopCount([Product].[Product Department].Members, 5, [Measures].[Total Store Sales])} ON ROWS
from [Sales]
where [Time].[1997].[Q2].[4]

2014-02-22 13:11:43,729 DEBUG [mondrian.sql] 27: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`quarter` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) group by `time_by_day`.`quarter` order by ISNULL(`time_by_day`.`quarter`) ASC, `time_by_day`.`quarter` ASC]
2014-02-22 13:11:43,736 DEBUG [mondrian.sql] 27: , exec 5 ms
2014-02-22 13:11:43,737 DEBUG [mondrian.sql] 27: , exec+fetch 7 ms, 4 rows
2014-02-22 13:11:43,738 DEBUG [mondrian.sql] 28: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`month_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`quarter` = 'Q1' and `time_by_day`.`the_year` = 1997) group by `time_by_day`.`month_of_year` order by ISNULL(`time_by_day`.`month_of_year`) ASC, `time_by_day`.`month_of_year` ASC]
2014-02-22 13:11:43,742 DEBUG [mondrian.sql] 28: , exec 3 ms
2014-02-22 13:11:43,743 DEBUG [mondrian.sql] 28: , exec+fetch 5 ms, 3 rows
2014-02-22 13:11:43,744 DEBUG [mondrian.sql] 29: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`month_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`quarter` = 'Q2' and `time_by_day`.`the_year` = 1997) group by `time_by_day`.`month_of_year` order by ISNULL(`time_by_day`.`month_of_year`) ASC, `time_by_day`.`month_of_year` ASC]
2014-02-22 13:11:43,747 DEBUG [mondrian.sql] 29: , exec 3 ms
2014-02-22 13:11:43,748 DEBUG [mondrian.sql] 29: , exec+fetch 4 ms, 3 rows
2014-02-22 13:11:43,758 DEBUG [mondrian.sql] 30: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `quarter`) from `time_by_day`]
2014-02-22 13:11:43,760 DEBUG [mondrian.sql] 30: , exec 1 ms
2014-02-22 13:11:43,761 DEBUG [mondrian.sql] 30: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:43,762 DEBUG [mondrian.sql] 31: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `month_of_year`) from `time_by_day`]
2014-02-22 13:11:43,764 DEBUG [mondrian.sql] 31: , exec 1 ms
2014-02-22 13:11:43,764 DEBUG [mondrian.sql] 31: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:43,777 DEBUG [mondrian.sql] 32: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`month_of_year` as `c2`, `product_class`.`product_family` as `c3`, `product_class`.`product_department` as `c4`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `time_by_day`.`month_of_year` in (1, 2, 3, 4) and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:11:45,737 DEBUG [mondrian.sql] 32: , exec 1959 ms
2014-02-22 13:11:45,762 DEBUG [mondrian.sql] 32: , exec+fetch 1984 ms, 92 rows
2014-02-22 13:11:45,795 DEBUG [mondrian.mdx] 237: exec: 2081 ms
2014-02-22 13:11:45,804 DEBUG [mondrian.mdx] 261: with member [Measures].[Store Profit Rate] as '(([Measures].[Store Sales] - [Measures].[Store Cost]) / [Measures].[Store Cost])', format = "#.00%"
select {[Measures].[Store Cost], [Measures].[Store Sales], [Measures].[Store Profit Rate]} ON COLUMNS,
  Order([Product].[Product Department].Members, [Measures].[Store Profit Rate], BDESC) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:11:45,819 DEBUG [mondrian.sql] 33: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, sum(`sales_fact_1997`.`store_cost`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:11:47,855 DEBUG [mondrian.sql] 33: , exec 2035 ms
2014-02-22 13:11:47,861 DEBUG [mondrian.sql] 33: , exec+fetch 2040 ms, 23 rows
2014-02-22 13:11:47,895 DEBUG [mondrian.mdx] 261: exec: 2091 ms
2014-02-22 13:11:48,165 DEBUG [mondrian.sql] 34: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:48,167 DEBUG [mondrian.sql] 34: , exec 0 ms
2014-02-22 13:11:48,169 DEBUG [mondrian.sql] 34: , exec+fetch 3 ms, 2 rows
2014-02-22 13:11:48,175 DEBUG [mondrian.sql] 35: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:48,176 DEBUG [mondrian.sql] 35: , exec 1 ms
2014-02-22 13:11:48,179 DEBUG [mondrian.sql] 35: , exec+fetch 4 ms, 2 rows
2014-02-22 13:11:48,228 DEBUG [mondrian.sql] 36: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:48,229 DEBUG [mondrian.sql] 36: , exec 0 ms
2014-02-22 13:11:48,230 DEBUG [mondrian.sql] 36: , exec+fetch 2 ms, 2 rows
2014-02-22 13:11:48,231 DEBUG [mondrian.sql] 37: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:48,231 DEBUG [mondrian.sql] 37: , exec 0 ms
2014-02-22 13:11:48,232 DEBUG [mondrian.sql] 37: , exec+fetch 1 ms, 2 rows
2014-02-22 13:11:48,297 DEBUG [mondrian.sql] 38: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:48,298 DEBUG [mondrian.sql] 38: , exec 0 ms
2014-02-22 13:11:48,298 DEBUG [mondrian.sql] 38: , exec+fetch 1 ms, 2 rows
2014-02-22 13:11:48,299 DEBUG [mondrian.sql] 39: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:48,300 DEBUG [mondrian.sql] 39: , exec 0 ms
2014-02-22 13:11:48,301 DEBUG [mondrian.sql] 39: , exec+fetch 1 ms, 2 rows
2014-02-22 13:11:48,328 DEBUG [mondrian.sql] 40: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:11:48,329 DEBUG [mondrian.sql] 40: , exec 0 ms
2014-02-22 13:11:48,329 DEBUG [mondrian.sql] 40: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:48,330 DEBUG [mondrian.sql] 41: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:11:48,331 DEBUG [mondrian.sql] 41: , exec 0 ms
2014-02-22 13:11:48,331 DEBUG [mondrian.sql] 41: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:48,333 DEBUG [mondrian.sql] 42: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:11:48,334 DEBUG [mondrian.sql] 42: , exec 0 ms
2014-02-22 13:11:48,335 DEBUG [mondrian.sql] 42: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:48,337 DEBUG [mondrian.sql] 43: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:11:48,337 DEBUG [mondrian.sql] 43: , exec 0 ms
2014-02-22 13:11:48,338 DEBUG [mondrian.sql] 43: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:48,339 DEBUG [mondrian.sql] 44: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:11:48,340 DEBUG [mondrian.sql] 44: , exec 0 ms
2014-02-22 13:11:48,340 DEBUG [mondrian.sql] 44: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:48,342 DEBUG [mondrian.sql] 45: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:11:48,343 DEBUG [mondrian.sql] 45: , exec 0 ms
2014-02-22 13:11:48,344 DEBUG [mondrian.sql] 45: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:48,354 DEBUG [mondrian.mdx] 456: with member [Measures].[Store Profit Rate] as '(([Measures].[Store Sales] - [Measures].[Store Cost]) / [Measures].[Store Cost])', format = "#.00%"
select {[Measures].[Store Cost], [Measures].[Store Sales], [Measures].[Store Profit Rate]} ON COLUMNS,
  Order([Product].[Product Department].Members, [Measures].[Store Profit Rate], BDESC) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:11:48,361 DEBUG [mondrian.sql] 46: SqlTupleReader.readTuples [[Product].[Product Department]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1` from `product_class` as `product_class` group by `product_class`.`product_family`, `product_class`.`product_department` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC]
2014-02-22 13:11:48,363 DEBUG [mondrian.sql] 46: , exec 2 ms
2014-02-22 13:11:48,369 DEBUG [mondrian.sql] 46: , exec+fetch 8 ms, 25 rows
2014-02-22 13:11:48,377 DEBUG [mondrian.sql] 47: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `the_year`) from `time_by_day`]
2014-02-22 13:11:48,377 DEBUG [mondrian.sql] 47: , exec 0 ms
2014-02-22 13:11:48,378 DEBUG [mondrian.sql] 47: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:48,378 DEBUG [mondrian.sql] 48: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_family`) from `product_class`]
2014-02-22 13:11:48,379 DEBUG [mondrian.sql] 48: , exec 0 ms
2014-02-22 13:11:48,379 DEBUG [mondrian.sql] 48: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:48,380 DEBUG [mondrian.sql] 49: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_department`) from `product_class`]
2014-02-22 13:11:48,381 DEBUG [mondrian.sql] 49: , exec 0 ms
2014-02-22 13:11:48,381 DEBUG [mondrian.sql] 49: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:48,393 DEBUG [mondrian.sql] 50: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:11:50,587 DEBUG [mondrian.sql] 50: , exec 2193 ms
2014-02-22 13:11:50,593 DEBUG [mondrian.sql] 50: , exec+fetch 2199 ms, 23 rows
2014-02-22 13:11:50,621 DEBUG [mondrian.mdx] 456: exec: 2267 ms
2014-02-22 13:11:50,630 DEBUG [mondrian.sql] 51: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and UPPER(`product_class`.`product_family`) = UPPER('Drink') group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:11:50,632 DEBUG [mondrian.sql] 51: , exec 1 ms
2014-02-22 13:11:50,633 DEBUG [mondrian.sql] 51: , exec+fetch 3 ms, 1 rows
2014-02-22 13:11:50,634 DEBUG [mondrian.sql] 52: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_department` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_family` = 'Drink') and UPPER(`product_class`.`product_department`) = UPPER('Alcoholic Beverages') group by `product_class`.`product_department` order by ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC]
2014-02-22 13:11:50,636 DEBUG [mondrian.sql] 52: , exec 1 ms
2014-02-22 13:11:50,637 DEBUG [mondrian.sql] 52: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:50,640 DEBUG [mondrian.sql] 53: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('WA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:11:50,654 DEBUG [mondrian.sql] 53: , exec 14 ms
2014-02-22 13:11:50,655 DEBUG [mondrian.sql] 53: , exec+fetch 15 ms, 1 rows
2014-02-22 13:11:50,660 DEBUG [mondrian.mdx] 475: with member [Product].[Drink].[Percent of Alcoholic Drinks] as '([Product].[Drink].[Alcoholic Beverages] / [Product].[Drink])', format_string = "#.00%"
select {[Product].[Drink].[Percent of Alcoholic Drinks]} ON COLUMNS,
  Order([Customers].[USA].[WA].Children, [Product].[Drink].[Percent of Alcoholic Drinks], BDESC) ON ROWS
from [Sales]
where [Measures].[Unit Sales]

2014-02-22 13:11:50,664 DEBUG [mondrian.sql] 54: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'WA') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:11:50,679 DEBUG [mondrian.sql] 54: , exec 14 ms
2014-02-22 13:11:50,681 DEBUG [mondrian.sql] 54: , exec+fetch 17 ms, 22 rows
2014-02-22 13:11:50,686 DEBUG [mondrian.sql] 55: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `state_province`) from `customer`]
2014-02-22 13:11:50,701 DEBUG [mondrian.sql] 55: , exec 14 ms
2014-02-22 13:11:50,702 DEBUG [mondrian.sql] 55: , exec+fetch 16 ms, 1 rows
2014-02-22 13:11:50,702 DEBUG [mondrian.sql] 56: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `city`) from `customer`]
2014-02-22 13:11:50,717 DEBUG [mondrian.sql] 56: , exec 14 ms
2014-02-22 13:11:50,718 DEBUG [mondrian.sql] 56: , exec+fetch 16 ms, 1 rows
2014-02-22 13:11:50,725 DEBUG [mondrian.sql] 57: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `customer`.`state_province` as `c2`, `customer`.`city` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`state_province` = 'WA' and `customer`.`city` in ('Anacortes', 'Ballard', 'Bellingham', 'Bremerton', 'Burien', 'Edmonds', 'Everett', 'Issaquah', 'Kirkland', 'Lynnwood', 'Marysville', 'Olympia', 'Port Orchard', 'Puyallup', 'Redmond', 'Renton', 'Seattle', 'Sedro Woolley', 'Spokane', 'Tacoma', 'Walla Walla', 'Yakima') group by `time_by_day`.`the_year`, `product_class`.`product_family`, `customer`.`state_province`, `customer`.`city`]
2014-02-22 13:11:50,751 DEBUG [mondrian.sql] 58: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `customer`.`state_province` as `c3`, `customer`.`city` as `c4`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Alcoholic Beverages' and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`state_province` = 'WA' and `customer`.`city` in ('Anacortes', 'Ballard', 'Bellingham', 'Bremerton', 'Burien', 'Edmonds', 'Everett', 'Issaquah', 'Kirkland', 'Lynnwood', 'Marysville', 'Olympia', 'Port Orchard', 'Puyallup', 'Redmond', 'Renton', 'Seattle', 'Sedro Woolley', 'Spokane', 'Tacoma', 'Walla Walla', 'Yakima') group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `customer`.`state_province`, `customer`.`city`]
2014-02-22 13:11:50,848 DEBUG [mondrian.sql] 58: , exec 96 ms
2014-02-22 13:11:50,855 DEBUG [mondrian.sql] 58: , exec+fetch 104 ms, 22 rows
2014-02-22 13:11:50,981 DEBUG [mondrian.sql] 57: , exec 255 ms
2014-02-22 13:11:50,985 DEBUG [mondrian.sql] 57: , exec+fetch 259 ms, 22 rows
2014-02-22 13:11:51,004 DEBUG [mondrian.mdx] 475: exec: 344 ms
2014-02-22 13:11:51,014 DEBUG [mondrian.mdx] 491: with member [Measures].[Accumulated Sales] as 'Sum(Ytd(), [Measures].[Store Sales])'
select {[Measures].[Store Sales], [Measures].[Accumulated Sales]} ON COLUMNS,
  {Descendants([Time].[1997], [Time].[Month])} ON ROWS
from [Sales]

2014-02-22 13:11:51,017 DEBUG [mondrian.sql] 59: SqlTupleReader.readTuples [[Time].[Month]]: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`month_of_year` as `c2` from `time_by_day` as `time_by_day` where (`time_by_day`.`quarter` in ('Q3', 'Q4') and `time_by_day`.`the_year` = 1997) group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC, ISNULL(`time_by_day`.`quarter`) ASC, `time_by_day`.`quarter` ASC, ISNULL(`time_by_day`.`month_of_year`) ASC, `time_by_day`.`month_of_year` ASC]
2014-02-22 13:11:51,022 DEBUG [mondrian.sql] 59: , exec 4 ms
2014-02-22 13:11:51,024 DEBUG [mondrian.sql] 59: , exec+fetch 7 ms, 6 rows
2014-02-22 13:11:51,077 DEBUG [mondrian.sql] 60: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`month_of_year` as `c2`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`month_of_year` in (5, 6, 7, 8, 9, 10, 11, 12) group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`]
2014-02-22 13:11:51,553 DEBUG [mondrian.sql] 60: , exec 475 ms
2014-02-22 13:11:51,555 DEBUG [mondrian.sql] 60: , exec+fetch 478 ms, 8 rows
2014-02-22 13:11:51,566 DEBUG [mondrian.mdx] 491: exec: 552 ms
2014-02-22 13:11:51,572 DEBUG [mondrian.mdx] 497: select {[Measures].[Promotion Sales]} ON COLUMNS
from [Sales]

2014-02-22 13:11:51,580 DEBUG [mondrian.sql] 61: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, sum((case when `sales_fact_1997`.`promotion_id` = 0 then 0 else `sales_fact_1997`.`store_sales` end)) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year`]
2014-02-22 13:11:51,989 DEBUG [mondrian.sql] 61: , exec 408 ms
2014-02-22 13:11:51,990 DEBUG [mondrian.sql] 61: , exec+fetch 409 ms, 1 rows
2014-02-22 13:11:51,990 DEBUG [mondrian.mdx] 497: exec: 417 ms
2014-02-22 13:11:51,996 DEBUG [mondrian.mdx] 501: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:51,997 DEBUG [mondrian.mdx] 501: exec: 1 ms
2014-02-22 13:11:52,001 DEBUG [mondrian.mdx] 505: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,003 DEBUG [mondrian.mdx] 505: exec: 2 ms
2014-02-22 13:11:52,006 DEBUG [mondrian.mdx] 509: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,008 DEBUG [mondrian.mdx] 509: exec: 2 ms
2014-02-22 13:11:52,010 DEBUG [mondrian.mdx] 513: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,011 DEBUG [mondrian.mdx] 513: exec: 1 ms
2014-02-22 13:11:52,013 DEBUG [mondrian.mdx] 517: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,014 DEBUG [mondrian.mdx] 517: exec: 1 ms
2014-02-22 13:11:52,016 DEBUG [mondrian.mdx] 521: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,018 DEBUG [mondrian.mdx] 521: exec: 2 ms
2014-02-22 13:11:52,020 DEBUG [mondrian.mdx] 525: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,022 DEBUG [mondrian.mdx] 525: exec: 1 ms
2014-02-22 13:11:52,024 DEBUG [mondrian.mdx] 529: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,026 DEBUG [mondrian.mdx] 529: exec: 1 ms
2014-02-22 13:11:52,029 DEBUG [mondrian.mdx] 533: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,032 DEBUG [mondrian.mdx] 533: exec: 3 ms
2014-02-22 13:11:52,035 DEBUG [mondrian.mdx] 537: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,037 DEBUG [mondrian.mdx] 537: exec: 2 ms
2014-02-22 13:11:52,040 DEBUG [mondrian.mdx] 541: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,042 DEBUG [mondrian.mdx] 541: exec: 2 ms
2014-02-22 13:11:52,044 DEBUG [mondrian.mdx] 545: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,045 DEBUG [mondrian.mdx] 545: exec: 1 ms
2014-02-22 13:11:52,047 DEBUG [mondrian.mdx] 549: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,048 DEBUG [mondrian.mdx] 549: exec: 1 ms
2014-02-22 13:11:52,050 DEBUG [mondrian.mdx] 553: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,052 DEBUG [mondrian.mdx] 553: exec: 2 ms
2014-02-22 13:11:52,054 DEBUG [mondrian.mdx] 557: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,055 DEBUG [mondrian.mdx] 557: exec: 1 ms
2014-02-22 13:11:52,057 DEBUG [mondrian.mdx] 561: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,058 DEBUG [mondrian.mdx] 561: exec: 1 ms
2014-02-22 13:11:52,061 DEBUG [mondrian.mdx] 565: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,062 DEBUG [mondrian.mdx] 565: exec: 1 ms
2014-02-22 13:11:52,064 DEBUG [mondrian.mdx] 569: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,066 DEBUG [mondrian.mdx] 569: exec: 2 ms
2014-02-22 13:11:52,067 DEBUG [mondrian.mdx] 573: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,069 DEBUG [mondrian.mdx] 573: exec: 1 ms
2014-02-22 13:11:52,071 DEBUG [mondrian.mdx] 577: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,073 DEBUG [mondrian.mdx] 577: exec: 2 ms
2014-02-22 13:11:52,075 DEBUG [mondrian.mdx] 581: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,076 DEBUG [mondrian.mdx] 581: exec: 1 ms
2014-02-22 13:11:52,078 DEBUG [mondrian.mdx] 585: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,079 DEBUG [mondrian.mdx] 585: exec: 1 ms
2014-02-22 13:11:52,081 DEBUG [mondrian.mdx] 589: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,082 DEBUG [mondrian.mdx] 589: exec: 1 ms
2014-02-22 13:11:52,084 DEBUG [mondrian.mdx] 593: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,086 DEBUG [mondrian.mdx] 593: exec: 2 ms
2014-02-22 13:11:52,088 DEBUG [mondrian.mdx] 597: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,089 DEBUG [mondrian.mdx] 597: exec: 1 ms
2014-02-22 13:11:52,091 DEBUG [mondrian.mdx] 601: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,094 DEBUG [mondrian.mdx] 601: exec: 3 ms
2014-02-22 13:11:52,096 DEBUG [mondrian.mdx] 605: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,098 DEBUG [mondrian.mdx] 605: exec: 2 ms
2014-02-22 13:11:52,100 DEBUG [mondrian.mdx] 609: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,102 DEBUG [mondrian.mdx] 609: exec: 2 ms
2014-02-22 13:11:52,104 DEBUG [mondrian.mdx] 613: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,106 DEBUG [mondrian.mdx] 613: exec: 2 ms
2014-02-22 13:11:52,107 DEBUG [mondrian.mdx] 617: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,109 DEBUG [mondrian.mdx] 617: exec: 2 ms
2014-02-22 13:11:52,111 DEBUG [mondrian.mdx] 621: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,112 DEBUG [mondrian.mdx] 621: exec: 1 ms
2014-02-22 13:11:52,114 DEBUG [mondrian.mdx] 625: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,115 DEBUG [mondrian.mdx] 625: exec: 1 ms
2014-02-22 13:11:52,117 DEBUG [mondrian.mdx] 629: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,119 DEBUG [mondrian.mdx] 629: exec: 2 ms
2014-02-22 13:11:52,120 DEBUG [mondrian.mdx] 633: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,122 DEBUG [mondrian.mdx] 633: exec: 1 ms
2014-02-22 13:11:52,124 DEBUG [mondrian.mdx] 637: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,126 DEBUG [mondrian.mdx] 637: exec: 2 ms
2014-02-22 13:11:52,128 DEBUG [mondrian.mdx] 641: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,129 DEBUG [mondrian.mdx] 641: exec: 1 ms
2014-02-22 13:11:52,131 DEBUG [mondrian.mdx] 645: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,133 DEBUG [mondrian.mdx] 645: exec: 2 ms
2014-02-22 13:11:52,136 DEBUG [mondrian.mdx] 649: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,137 DEBUG [mondrian.mdx] 649: exec: 1 ms
2014-02-22 13:11:52,140 DEBUG [mondrian.mdx] 653: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,141 DEBUG [mondrian.mdx] 653: exec: 1 ms
2014-02-22 13:11:52,143 DEBUG [mondrian.mdx] 657: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,145 DEBUG [mondrian.mdx] 657: exec: 1 ms
2014-02-22 13:11:52,147 DEBUG [mondrian.mdx] 661: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,148 DEBUG [mondrian.mdx] 661: exec: 1 ms
2014-02-22 13:11:52,151 DEBUG [mondrian.mdx] 665: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,152 DEBUG [mondrian.mdx] 665: exec: 1 ms
2014-02-22 13:11:52,154 DEBUG [mondrian.mdx] 669: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,156 DEBUG [mondrian.mdx] 669: exec: 2 ms
2014-02-22 13:11:52,158 DEBUG [mondrian.mdx] 673: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,160 DEBUG [mondrian.mdx] 673: exec: 1 ms
2014-02-22 13:11:52,162 DEBUG [mondrian.mdx] 677: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,164 DEBUG [mondrian.mdx] 677: exec: 2 ms
2014-02-22 13:11:52,166 DEBUG [mondrian.mdx] 681: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,168 DEBUG [mondrian.mdx] 681: exec: 2 ms
2014-02-22 13:11:52,170 DEBUG [mondrian.mdx] 685: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,171 DEBUG [mondrian.mdx] 685: exec: 1 ms
2014-02-22 13:11:52,174 DEBUG [mondrian.mdx] 689: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,176 DEBUG [mondrian.mdx] 689: exec: 1 ms
2014-02-22 13:11:52,180 DEBUG [mondrian.mdx] 693: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,181 DEBUG [mondrian.mdx] 693: exec: 1 ms
2014-02-22 13:11:52,183 DEBUG [mondrian.mdx] 697: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,184 DEBUG [mondrian.mdx] 697: exec: 1 ms
2014-02-22 13:11:52,186 DEBUG [mondrian.mdx] 701: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,187 DEBUG [mondrian.mdx] 701: exec: 1 ms
2014-02-22 13:11:52,189 DEBUG [mondrian.mdx] 705: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,190 DEBUG [mondrian.mdx] 705: exec: 1 ms
2014-02-22 13:11:52,191 DEBUG [mondrian.mdx] 709: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,198 DEBUG [mondrian.mdx] 709: exec: 6 ms
2014-02-22 13:11:52,218 DEBUG [mondrian.mdx] 713: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,220 DEBUG [mondrian.mdx] 713: exec: 2 ms
2014-02-22 13:11:52,222 DEBUG [mondrian.mdx] 717: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,223 DEBUG [mondrian.mdx] 717: exec: 1 ms
2014-02-22 13:11:52,227 DEBUG [mondrian.mdx] 721: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,228 DEBUG [mondrian.mdx] 721: exec: 1 ms
2014-02-22 13:11:52,230 DEBUG [mondrian.mdx] 725: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,231 DEBUG [mondrian.mdx] 725: exec: 1 ms
2014-02-22 13:11:52,233 DEBUG [mondrian.mdx] 729: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,234 DEBUG [mondrian.mdx] 729: exec: 1 ms
2014-02-22 13:11:52,237 DEBUG [mondrian.mdx] 733: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,239 DEBUG [mondrian.mdx] 733: exec: 1 ms
2014-02-22 13:11:52,242 DEBUG [mondrian.mdx] 737: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,243 DEBUG [mondrian.mdx] 737: exec: 1 ms
2014-02-22 13:11:52,246 DEBUG [mondrian.mdx] 741: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,248 DEBUG [mondrian.mdx] 741: exec: 2 ms
2014-02-22 13:11:52,251 DEBUG [mondrian.mdx] 745: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,253 DEBUG [mondrian.mdx] 745: exec: 2 ms
2014-02-22 13:11:52,255 DEBUG [mondrian.mdx] 749: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,256 DEBUG [mondrian.mdx] 749: exec: 1 ms
2014-02-22 13:11:52,258 DEBUG [mondrian.mdx] 753: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,260 DEBUG [mondrian.mdx] 753: exec: 2 ms
2014-02-22 13:11:52,262 DEBUG [mondrian.mdx] 757: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,264 DEBUG [mondrian.mdx] 757: exec: 2 ms
2014-02-22 13:11:52,266 DEBUG [mondrian.mdx] 761: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,268 DEBUG [mondrian.mdx] 761: exec: 2 ms
2014-02-22 13:11:52,270 DEBUG [mondrian.mdx] 765: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,272 DEBUG [mondrian.mdx] 765: exec: 1 ms
2014-02-22 13:11:52,274 DEBUG [mondrian.mdx] 769: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,276 DEBUG [mondrian.mdx] 769: exec: 1 ms
2014-02-22 13:11:52,278 DEBUG [mondrian.mdx] 773: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,279 DEBUG [mondrian.mdx] 773: exec: 1 ms
2014-02-22 13:11:52,281 DEBUG [mondrian.mdx] 777: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,282 DEBUG [mondrian.mdx] 777: exec: 1 ms
2014-02-22 13:11:52,284 DEBUG [mondrian.mdx] 781: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,286 DEBUG [mondrian.mdx] 781: exec: 2 ms
2014-02-22 13:11:52,287 DEBUG [mondrian.mdx] 785: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,289 DEBUG [mondrian.mdx] 785: exec: 2 ms
2014-02-22 13:11:52,290 DEBUG [mondrian.mdx] 789: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,291 DEBUG [mondrian.mdx] 789: exec: 1 ms
2014-02-22 13:11:52,306 DEBUG [mondrian.mdx] 793: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,308 DEBUG [mondrian.mdx] 793: exec: 1 ms
2014-02-22 13:11:52,311 DEBUG [mondrian.mdx] 797: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,312 DEBUG [mondrian.mdx] 797: exec: 1 ms
2014-02-22 13:11:52,314 DEBUG [mondrian.mdx] 801: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,316 DEBUG [mondrian.mdx] 801: exec: 1 ms
2014-02-22 13:11:52,318 DEBUG [mondrian.mdx] 805: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,319 DEBUG [mondrian.mdx] 805: exec: 1 ms
2014-02-22 13:11:52,321 DEBUG [mondrian.mdx] 809: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,322 DEBUG [mondrian.mdx] 809: exec: 1 ms
2014-02-22 13:11:52,324 DEBUG [mondrian.mdx] 813: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,325 DEBUG [mondrian.mdx] 813: exec: 1 ms
2014-02-22 13:11:52,326 DEBUG [mondrian.mdx] 817: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,328 DEBUG [mondrian.mdx] 817: exec: 2 ms
2014-02-22 13:11:52,330 DEBUG [mondrian.mdx] 821: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,332 DEBUG [mondrian.mdx] 821: exec: 2 ms
2014-02-22 13:11:52,334 DEBUG [mondrian.mdx] 825: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,335 DEBUG [mondrian.mdx] 825: exec: 1 ms
2014-02-22 13:11:52,337 DEBUG [mondrian.mdx] 829: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,338 DEBUG [mondrian.mdx] 829: exec: 1 ms
2014-02-22 13:11:52,340 DEBUG [mondrian.mdx] 833: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,341 DEBUG [mondrian.mdx] 833: exec: 1 ms
2014-02-22 13:11:52,343 DEBUG [mondrian.mdx] 837: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,345 DEBUG [mondrian.mdx] 837: exec: 1 ms
2014-02-22 13:11:52,347 DEBUG [mondrian.mdx] 841: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,348 DEBUG [mondrian.mdx] 841: exec: 1 ms
2014-02-22 13:11:52,350 DEBUG [mondrian.mdx] 845: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,352 DEBUG [mondrian.mdx] 845: exec: 1 ms
2014-02-22 13:11:52,354 DEBUG [mondrian.mdx] 849: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,356 DEBUG [mondrian.mdx] 849: exec: 1 ms
2014-02-22 13:11:52,358 DEBUG [mondrian.mdx] 853: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,360 DEBUG [mondrian.mdx] 853: exec: 2 ms
2014-02-22 13:11:52,363 DEBUG [mondrian.mdx] 857: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,369 DEBUG [mondrian.mdx] 857: exec: 6 ms
2014-02-22 13:11:52,371 DEBUG [mondrian.mdx] 861: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,373 DEBUG [mondrian.mdx] 861: exec: 1 ms
2014-02-22 13:11:52,375 DEBUG [mondrian.mdx] 865: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,376 DEBUG [mondrian.mdx] 865: exec: 1 ms
2014-02-22 13:11:52,378 DEBUG [mondrian.mdx] 869: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,380 DEBUG [mondrian.mdx] 869: exec: 2 ms
2014-02-22 13:11:52,381 DEBUG [mondrian.mdx] 873: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,383 DEBUG [mondrian.mdx] 873: exec: 2 ms
2014-02-22 13:11:52,385 DEBUG [mondrian.mdx] 877: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,386 DEBUG [mondrian.mdx] 877: exec: 1 ms
2014-02-22 13:11:52,387 DEBUG [mondrian.mdx] 881: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,389 DEBUG [mondrian.mdx] 881: exec: 2 ms
2014-02-22 13:11:52,391 DEBUG [mondrian.mdx] 885: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,393 DEBUG [mondrian.mdx] 885: exec: 2 ms
2014-02-22 13:11:52,396 DEBUG [mondrian.mdx] 889: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,399 DEBUG [mondrian.mdx] 889: exec: 2 ms
2014-02-22 13:11:52,401 DEBUG [mondrian.mdx] 893: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,403 DEBUG [mondrian.mdx] 893: exec: 1 ms
2014-02-22 13:11:52,405 DEBUG [mondrian.mdx] 897: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,407 DEBUG [mondrian.mdx] 897: exec: 1 ms
2014-02-22 13:11:52,410 DEBUG [mondrian.mdx] 901: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,411 DEBUG [mondrian.mdx] 901: exec: 1 ms
2014-02-22 13:11:52,413 DEBUG [mondrian.mdx] 905: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,415 DEBUG [mondrian.mdx] 905: exec: 2 ms
2014-02-22 13:11:52,417 DEBUG [mondrian.mdx] 909: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,419 DEBUG [mondrian.mdx] 909: exec: 2 ms
2014-02-22 13:11:52,421 DEBUG [mondrian.mdx] 913: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,423 DEBUG [mondrian.mdx] 913: exec: 2 ms
2014-02-22 13:11:52,426 DEBUG [mondrian.mdx] 917: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,432 DEBUG [mondrian.mdx] 917: exec: 6 ms
2014-02-22 13:11:52,435 DEBUG [mondrian.mdx] 921: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,437 DEBUG [mondrian.mdx] 921: exec: 2 ms
2014-02-22 13:11:52,439 DEBUG [mondrian.mdx] 925: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,443 DEBUG [mondrian.mdx] 925: exec: 4 ms
2014-02-22 13:11:52,445 DEBUG [mondrian.mdx] 929: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,447 DEBUG [mondrian.mdx] 929: exec: 2 ms
2014-02-22 13:11:52,449 DEBUG [mondrian.mdx] 933: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,451 DEBUG [mondrian.mdx] 933: exec: 2 ms
2014-02-22 13:11:52,453 DEBUG [mondrian.mdx] 937: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,455 DEBUG [mondrian.mdx] 937: exec: 2 ms
2014-02-22 13:11:52,457 DEBUG [mondrian.mdx] 941: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,458 DEBUG [mondrian.mdx] 941: exec: 1 ms
2014-02-22 13:11:52,462 DEBUG [mondrian.mdx] 945: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,464 DEBUG [mondrian.mdx] 945: exec: 2 ms
2014-02-22 13:11:52,466 DEBUG [mondrian.mdx] 949: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,469 DEBUG [mondrian.mdx] 949: exec: 3 ms
2014-02-22 13:11:52,471 DEBUG [mondrian.mdx] 953: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,473 DEBUG [mondrian.mdx] 953: exec: 2 ms
2014-02-22 13:11:52,475 DEBUG [mondrian.mdx] 957: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,476 DEBUG [mondrian.mdx] 957: exec: 1 ms
2014-02-22 13:11:52,477 DEBUG [mondrian.mdx] 961: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,479 DEBUG [mondrian.mdx] 961: exec: 2 ms
2014-02-22 13:11:52,480 DEBUG [mondrian.mdx] 965: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,481 DEBUG [mondrian.mdx] 965: exec: 1 ms
2014-02-22 13:11:52,482 DEBUG [mondrian.mdx] 969: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,484 DEBUG [mondrian.mdx] 969: exec: 1 ms
2014-02-22 13:11:52,486 DEBUG [mondrian.mdx] 973: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,487 DEBUG [mondrian.mdx] 973: exec: 1 ms
2014-02-22 13:11:52,490 DEBUG [mondrian.mdx] 977: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,492 DEBUG [mondrian.mdx] 977: exec: 2 ms
2014-02-22 13:11:52,494 DEBUG [mondrian.mdx] 981: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,496 DEBUG [mondrian.mdx] 981: exec: 2 ms
2014-02-22 13:11:52,499 DEBUG [mondrian.mdx] 985: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,504 DEBUG [mondrian.mdx] 985: exec: 4 ms
2014-02-22 13:11:52,506 DEBUG [mondrian.mdx] 989: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,508 DEBUG [mondrian.mdx] 989: exec: 2 ms
2014-02-22 13:11:52,509 DEBUG [mondrian.mdx] 993: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,511 DEBUG [mondrian.mdx] 993: exec: 1 ms
2014-02-22 13:11:52,512 DEBUG [mondrian.mdx] 997: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,513 DEBUG [mondrian.mdx] 997: exec: 1 ms
2014-02-22 13:11:52,517 DEBUG [mondrian.mdx] 1001: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,519 DEBUG [mondrian.mdx] 1001: exec: 2 ms
2014-02-22 13:11:52,521 DEBUG [mondrian.mdx] 1005: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,523 DEBUG [mondrian.mdx] 1005: exec: 1 ms
2014-02-22 13:11:52,524 DEBUG [mondrian.mdx] 1009: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,525 DEBUG [mondrian.mdx] 1009: exec: 1 ms
2014-02-22 13:11:52,527 DEBUG [mondrian.mdx] 1013: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,529 DEBUG [mondrian.mdx] 1013: exec: 1 ms
2014-02-22 13:11:52,531 DEBUG [mondrian.mdx] 1017: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,533 DEBUG [mondrian.mdx] 1017: exec: 2 ms
2014-02-22 13:11:52,535 DEBUG [mondrian.mdx] 1021: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,536 DEBUG [mondrian.mdx] 1021: exec: 1 ms
2014-02-22 13:11:52,537 DEBUG [mondrian.mdx] 1025: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,539 DEBUG [mondrian.mdx] 1025: exec: 1 ms
2014-02-22 13:11:52,540 DEBUG [mondrian.mdx] 1029: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,541 DEBUG [mondrian.mdx] 1029: exec: 1 ms
2014-02-22 13:11:52,543 DEBUG [mondrian.mdx] 1033: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,544 DEBUG [mondrian.mdx] 1033: exec: 1 ms
2014-02-22 13:11:52,546 DEBUG [mondrian.mdx] 1037: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,547 DEBUG [mondrian.mdx] 1037: exec: 1 ms
2014-02-22 13:11:52,551 DEBUG [mondrian.mdx] 1041: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,552 DEBUG [mondrian.mdx] 1041: exec: 1 ms
2014-02-22 13:11:52,554 DEBUG [mondrian.mdx] 1045: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,555 DEBUG [mondrian.mdx] 1045: exec: 1 ms
2014-02-22 13:11:52,557 DEBUG [mondrian.mdx] 1049: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,558 DEBUG [mondrian.mdx] 1049: exec: 1 ms
2014-02-22 13:11:52,560 DEBUG [mondrian.mdx] 1053: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,562 DEBUG [mondrian.mdx] 1053: exec: 2 ms
2014-02-22 13:11:52,566 DEBUG [mondrian.mdx] 1057: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,570 DEBUG [mondrian.mdx] 1057: exec: 4 ms
2014-02-22 13:11:52,573 DEBUG [mondrian.mdx] 1061: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,574 DEBUG [mondrian.mdx] 1061: exec: 1 ms
2014-02-22 13:11:52,576 DEBUG [mondrian.mdx] 1065: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,578 DEBUG [mondrian.mdx] 1065: exec: 2 ms
2014-02-22 13:11:52,580 DEBUG [mondrian.mdx] 1069: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,581 DEBUG [mondrian.mdx] 1069: exec: 1 ms
2014-02-22 13:11:52,584 DEBUG [mondrian.mdx] 1073: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,585 DEBUG [mondrian.mdx] 1073: exec: 1 ms
2014-02-22 13:11:52,587 DEBUG [mondrian.mdx] 1077: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,588 DEBUG [mondrian.mdx] 1077: exec: 1 ms
2014-02-22 13:11:52,590 DEBUG [mondrian.mdx] 1081: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,591 DEBUG [mondrian.mdx] 1081: exec: 1 ms
2014-02-22 13:11:52,592 DEBUG [mondrian.mdx] 1085: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,598 DEBUG [mondrian.mdx] 1085: exec: 5 ms
2014-02-22 13:11:52,600 DEBUG [mondrian.mdx] 1089: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,602 DEBUG [mondrian.mdx] 1089: exec: 2 ms
2014-02-22 13:11:52,603 DEBUG [mondrian.mdx] 1093: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,605 DEBUG [mondrian.mdx] 1093: exec: 2 ms
2014-02-22 13:11:52,606 DEBUG [mondrian.mdx] 1097: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,607 DEBUG [mondrian.mdx] 1097: exec: 1 ms
2014-02-22 13:11:52,609 DEBUG [mondrian.mdx] 1101: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,611 DEBUG [mondrian.mdx] 1101: exec: 1 ms
2014-02-22 13:11:52,613 DEBUG [mondrian.mdx] 1105: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,615 DEBUG [mondrian.mdx] 1105: exec: 2 ms
2014-02-22 13:11:52,617 DEBUG [mondrian.mdx] 1109: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,619 DEBUG [mondrian.mdx] 1109: exec: 2 ms
2014-02-22 13:11:52,621 DEBUG [mondrian.mdx] 1113: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,622 DEBUG [mondrian.mdx] 1113: exec: 1 ms
2014-02-22 13:11:52,624 DEBUG [mondrian.mdx] 1117: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,625 DEBUG [mondrian.mdx] 1117: exec: 1 ms
2014-02-22 13:11:52,628 DEBUG [mondrian.mdx] 1121: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,630 DEBUG [mondrian.mdx] 1121: exec: 2 ms
2014-02-22 13:11:52,634 DEBUG [mondrian.mdx] 1125: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,635 DEBUG [mondrian.mdx] 1125: exec: 1 ms
2014-02-22 13:11:52,637 DEBUG [mondrian.mdx] 1129: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,639 DEBUG [mondrian.mdx] 1129: exec: 2 ms
2014-02-22 13:11:52,640 DEBUG [mondrian.mdx] 1133: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,642 DEBUG [mondrian.mdx] 1133: exec: 2 ms
2014-02-22 13:11:52,643 DEBUG [mondrian.mdx] 1137: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,645 DEBUG [mondrian.mdx] 1137: exec: 2 ms
2014-02-22 13:11:52,647 DEBUG [mondrian.mdx] 1141: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,648 DEBUG [mondrian.mdx] 1141: exec: 1 ms
2014-02-22 13:11:52,650 DEBUG [mondrian.mdx] 1145: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,651 DEBUG [mondrian.mdx] 1145: exec: 1 ms
2014-02-22 13:11:52,653 DEBUG [mondrian.mdx] 1149: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,654 DEBUG [mondrian.mdx] 1149: exec: 1 ms
2014-02-22 13:11:52,656 DEBUG [mondrian.mdx] 1153: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,657 DEBUG [mondrian.mdx] 1153: exec: 1 ms
2014-02-22 13:11:52,658 DEBUG [mondrian.mdx] 1157: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,659 DEBUG [mondrian.mdx] 1157: exec: 1 ms
2014-02-22 13:11:52,660 DEBUG [mondrian.mdx] 1161: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,662 DEBUG [mondrian.mdx] 1161: exec: 1 ms
2014-02-22 13:11:52,664 DEBUG [mondrian.mdx] 1165: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,665 DEBUG [mondrian.mdx] 1165: exec: 1 ms
2014-02-22 13:11:52,666 DEBUG [mondrian.mdx] 1169: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,667 DEBUG [mondrian.mdx] 1169: exec: 0 ms
2014-02-22 13:11:52,668 DEBUG [mondrian.mdx] 1173: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,669 DEBUG [mondrian.mdx] 1173: exec: 0 ms
2014-02-22 13:11:52,670 DEBUG [mondrian.mdx] 1177: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,671 DEBUG [mondrian.mdx] 1177: exec: 1 ms
2014-02-22 13:11:52,672 DEBUG [mondrian.mdx] 1181: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,673 DEBUG [mondrian.mdx] 1181: exec: 1 ms
2014-02-22 13:11:52,674 DEBUG [mondrian.mdx] 1185: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,675 DEBUG [mondrian.mdx] 1185: exec: 1 ms
2014-02-22 13:11:52,676 DEBUG [mondrian.mdx] 1189: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,677 DEBUG [mondrian.mdx] 1189: exec: 1 ms
2014-02-22 13:11:52,678 DEBUG [mondrian.mdx] 1193: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,680 DEBUG [mondrian.mdx] 1193: exec: 2 ms
2014-02-22 13:11:52,681 DEBUG [mondrian.mdx] 1197: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,683 DEBUG [mondrian.mdx] 1197: exec: 1 ms
2014-02-22 13:11:52,685 DEBUG [mondrian.mdx] 1201: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,686 DEBUG [mondrian.mdx] 1201: exec: 1 ms
2014-02-22 13:11:52,687 DEBUG [mondrian.mdx] 1205: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,689 DEBUG [mondrian.mdx] 1205: exec: 1 ms
2014-02-22 13:11:52,690 DEBUG [mondrian.mdx] 1209: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,691 DEBUG [mondrian.mdx] 1209: exec: 1 ms
2014-02-22 13:11:52,693 DEBUG [mondrian.mdx] 1213: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,695 DEBUG [mondrian.mdx] 1213: exec: 2 ms
2014-02-22 13:11:52,699 DEBUG [mondrian.mdx] 1217: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,700 DEBUG [mondrian.mdx] 1217: exec: 1 ms
2014-02-22 13:11:52,701 DEBUG [mondrian.mdx] 1221: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,702 DEBUG [mondrian.mdx] 1221: exec: 1 ms
2014-02-22 13:11:52,703 DEBUG [mondrian.mdx] 1225: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,704 DEBUG [mondrian.mdx] 1225: exec: 1 ms
2014-02-22 13:11:52,705 DEBUG [mondrian.mdx] 1229: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,706 DEBUG [mondrian.mdx] 1229: exec: 1 ms
2014-02-22 13:11:52,707 DEBUG [mondrian.mdx] 1233: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,707 DEBUG [mondrian.mdx] 1233: exec: 0 ms
2014-02-22 13:11:52,708 DEBUG [mondrian.mdx] 1237: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,709 DEBUG [mondrian.mdx] 1237: exec: 1 ms
2014-02-22 13:11:52,710 DEBUG [mondrian.mdx] 1241: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,711 DEBUG [mondrian.mdx] 1241: exec: 1 ms
2014-02-22 13:11:52,712 DEBUG [mondrian.mdx] 1245: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,713 DEBUG [mondrian.mdx] 1245: exec: 1 ms
2014-02-22 13:11:52,714 DEBUG [mondrian.mdx] 1249: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,715 DEBUG [mondrian.mdx] 1249: exec: 1 ms
2014-02-22 13:11:52,717 DEBUG [mondrian.mdx] 1253: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,718 DEBUG [mondrian.mdx] 1253: exec: 1 ms
2014-02-22 13:11:52,719 DEBUG [mondrian.mdx] 1257: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,720 DEBUG [mondrian.mdx] 1257: exec: 1 ms
2014-02-22 13:11:52,722 DEBUG [mondrian.mdx] 1261: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,723 DEBUG [mondrian.mdx] 1261: exec: 1 ms
2014-02-22 13:11:52,724 DEBUG [mondrian.mdx] 1265: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,725 DEBUG [mondrian.mdx] 1265: exec: 0 ms
2014-02-22 13:11:52,729 DEBUG [mondrian.mdx] 1269: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,730 DEBUG [mondrian.mdx] 1269: exec: 1 ms
2014-02-22 13:11:52,733 DEBUG [mondrian.sql] 62: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`gender` as `c0` from `customer` as `customer` where UPPER(`customer`.`gender`) = UPPER('F') group by `customer`.`gender` order by ISNULL(`customer`.`gender`) ASC, `customer`.`gender` ASC]
2014-02-22 13:11:52,753 DEBUG [mondrian.sql] 62: , exec 19 ms
2014-02-22 13:11:52,754 DEBUG [mondrian.sql] 62: , exec+fetch 21 ms, 1 rows
2014-02-22 13:11:52,756 DEBUG [mondrian.mdx] 1275: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,757 DEBUG [mondrian.mdx] 1275: exec: 1 ms
2014-02-22 13:11:52,760 DEBUG [mondrian.mdx] 1281: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,762 DEBUG [mondrian.mdx] 1281: exec: 2 ms
2014-02-22 13:11:52,765 DEBUG [mondrian.mdx] 1287: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,766 DEBUG [mondrian.mdx] 1287: exec: 1 ms
2014-02-22 13:11:52,768 DEBUG [mondrian.mdx] 1293: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,769 DEBUG [mondrian.mdx] 1293: exec: 0 ms
2014-02-22 13:11:52,772 DEBUG [mondrian.mdx] 1299: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,773 DEBUG [mondrian.mdx] 1299: exec: 1 ms
2014-02-22 13:11:52,775 DEBUG [mondrian.mdx] 1305: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,776 DEBUG [mondrian.mdx] 1305: exec: 1 ms
2014-02-22 13:11:52,779 DEBUG [mondrian.mdx] 1311: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,781 DEBUG [mondrian.mdx] 1311: exec: 2 ms
2014-02-22 13:11:52,784 DEBUG [mondrian.mdx] 1317: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,785 DEBUG [mondrian.mdx] 1317: exec: 1 ms
2014-02-22 13:11:52,788 DEBUG [mondrian.mdx] 1323: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,789 DEBUG [mondrian.mdx] 1323: exec: 1 ms
2014-02-22 13:11:52,792 DEBUG [mondrian.mdx] 1329: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,809 DEBUG [mondrian.mdx] 1329: exec: 17 ms
2014-02-22 13:11:52,812 DEBUG [mondrian.mdx] 1335: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,813 DEBUG [mondrian.mdx] 1335: exec: 1 ms
2014-02-22 13:11:52,816 DEBUG [mondrian.mdx] 1341: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,818 DEBUG [mondrian.mdx] 1341: exec: 1 ms
2014-02-22 13:11:52,821 DEBUG [mondrian.mdx] 1347: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,822 DEBUG [mondrian.mdx] 1347: exec: 1 ms
2014-02-22 13:11:52,824 DEBUG [mondrian.mdx] 1353: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,826 DEBUG [mondrian.mdx] 1353: exec: 2 ms
2014-02-22 13:11:52,831 DEBUG [mondrian.mdx] 1359: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,832 DEBUG [mondrian.mdx] 1359: exec: 1 ms
2014-02-22 13:11:52,835 DEBUG [mondrian.mdx] 1365: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,836 DEBUG [mondrian.mdx] 1365: exec: 1 ms
2014-02-22 13:11:52,839 DEBUG [mondrian.mdx] 1371: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,840 DEBUG [mondrian.mdx] 1371: exec: 1 ms
2014-02-22 13:11:52,842 DEBUG [mondrian.mdx] 1377: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,843 DEBUG [mondrian.mdx] 1377: exec: 1 ms
2014-02-22 13:11:52,845 DEBUG [mondrian.mdx] 1383: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,847 DEBUG [mondrian.mdx] 1383: exec: 2 ms
2014-02-22 13:11:52,850 DEBUG [mondrian.mdx] 1389: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,852 DEBUG [mondrian.mdx] 1389: exec: 1 ms
2014-02-22 13:11:52,855 DEBUG [mondrian.mdx] 1395: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,856 DEBUG [mondrian.mdx] 1395: exec: 1 ms
2014-02-22 13:11:52,858 DEBUG [mondrian.mdx] 1401: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,859 DEBUG [mondrian.mdx] 1401: exec: 1 ms
2014-02-22 13:11:52,862 DEBUG [mondrian.mdx] 1407: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,864 DEBUG [mondrian.mdx] 1407: exec: 1 ms
2014-02-22 13:11:52,867 DEBUG [mondrian.mdx] 1413: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,868 DEBUG [mondrian.mdx] 1413: exec: 1 ms
2014-02-22 13:11:52,870 DEBUG [mondrian.mdx] 1419: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,871 DEBUG [mondrian.mdx] 1419: exec: 1 ms
2014-02-22 13:11:52,874 DEBUG [mondrian.mdx] 1425: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,875 DEBUG [mondrian.mdx] 1425: exec: 1 ms
2014-02-22 13:11:52,877 DEBUG [mondrian.mdx] 1431: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,878 DEBUG [mondrian.mdx] 1431: exec: 1 ms
2014-02-22 13:11:52,880 DEBUG [mondrian.mdx] 1437: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,882 DEBUG [mondrian.mdx] 1437: exec: 1 ms
2014-02-22 13:11:52,884 DEBUG [mondrian.mdx] 1443: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,885 DEBUG [mondrian.mdx] 1443: exec: 1 ms
2014-02-22 13:11:52,888 DEBUG [mondrian.mdx] 1449: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,889 DEBUG [mondrian.mdx] 1449: exec: 1 ms
2014-02-22 13:11:52,891 DEBUG [mondrian.mdx] 1455: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,892 DEBUG [mondrian.mdx] 1455: exec: 1 ms
2014-02-22 13:11:52,895 DEBUG [mondrian.mdx] 1461: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,897 DEBUG [mondrian.mdx] 1461: exec: 2 ms
2014-02-22 13:11:52,899 DEBUG [mondrian.mdx] 1467: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,900 DEBUG [mondrian.mdx] 1467: exec: 1 ms
2014-02-22 13:11:52,902 DEBUG [mondrian.mdx] 1473: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,903 DEBUG [mondrian.mdx] 1473: exec: 1 ms
2014-02-22 13:11:52,905 DEBUG [mondrian.mdx] 1479: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,906 DEBUG [mondrian.mdx] 1479: exec: 1 ms
2014-02-22 13:11:52,909 DEBUG [mondrian.mdx] 1485: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,910 DEBUG [mondrian.mdx] 1485: exec: 1 ms
2014-02-22 13:11:52,912 DEBUG [mondrian.mdx] 1491: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,913 DEBUG [mondrian.mdx] 1491: exec: 1 ms
2014-02-22 13:11:52,916 DEBUG [mondrian.mdx] 1497: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,917 DEBUG [mondrian.mdx] 1497: exec: 1 ms
2014-02-22 13:11:52,919 DEBUG [mondrian.mdx] 1503: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,921 DEBUG [mondrian.mdx] 1503: exec: 1 ms
2014-02-22 13:11:52,924 DEBUG [mondrian.mdx] 1509: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,925 DEBUG [mondrian.mdx] 1509: exec: 1 ms
2014-02-22 13:11:52,930 DEBUG [mondrian.mdx] 1515: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,932 DEBUG [mondrian.mdx] 1515: exec: 2 ms
2014-02-22 13:11:52,934 DEBUG [mondrian.mdx] 1521: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,935 DEBUG [mondrian.mdx] 1521: exec: 1 ms
2014-02-22 13:11:52,937 DEBUG [mondrian.mdx] 1527: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,938 DEBUG [mondrian.mdx] 1527: exec: 1 ms
2014-02-22 13:11:52,940 DEBUG [mondrian.mdx] 1533: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,941 DEBUG [mondrian.mdx] 1533: exec: 1 ms
2014-02-22 13:11:52,943 DEBUG [mondrian.mdx] 1539: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,944 DEBUG [mondrian.mdx] 1539: exec: 1 ms
2014-02-22 13:11:52,946 DEBUG [mondrian.mdx] 1545: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,947 DEBUG [mondrian.mdx] 1545: exec: 0 ms
2014-02-22 13:11:52,949 DEBUG [mondrian.mdx] 1551: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,951 DEBUG [mondrian.mdx] 1551: exec: 2 ms
2014-02-22 13:11:52,953 DEBUG [mondrian.mdx] 1557: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:52,954 DEBUG [mondrian.mdx] 1557: exec: 1 ms
2014-02-22 13:11:52,955 DEBUG [mondrian.mdx] 1561: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,956 DEBUG [mondrian.mdx] 1561: exec: 1 ms
2014-02-22 13:11:52,957 DEBUG [mondrian.mdx] 1565: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,958 DEBUG [mondrian.mdx] 1565: exec: 1 ms
2014-02-22 13:11:52,959 DEBUG [mondrian.mdx] 1569: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,961 DEBUG [mondrian.mdx] 1569: exec: 1 ms
2014-02-22 13:11:52,963 DEBUG [mondrian.mdx] 1573: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,965 DEBUG [mondrian.mdx] 1573: exec: 2 ms
2014-02-22 13:11:52,966 DEBUG [mondrian.mdx] 1577: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,967 DEBUG [mondrian.mdx] 1577: exec: 1 ms
2014-02-22 13:11:52,968 DEBUG [mondrian.mdx] 1581: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,969 DEBUG [mondrian.mdx] 1581: exec: 0 ms
2014-02-22 13:11:52,971 DEBUG [mondrian.mdx] 1585: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,972 DEBUG [mondrian.mdx] 1585: exec: 1 ms
2014-02-22 13:11:52,973 DEBUG [mondrian.mdx] 1589: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,974 DEBUG [mondrian.mdx] 1589: exec: 1 ms
2014-02-22 13:11:52,974 DEBUG [mondrian.mdx] 1593: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,976 DEBUG [mondrian.mdx] 1593: exec: 1 ms
2014-02-22 13:11:52,977 DEBUG [mondrian.mdx] 1597: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,978 DEBUG [mondrian.mdx] 1597: exec: 1 ms
2014-02-22 13:11:52,979 DEBUG [mondrian.mdx] 1601: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,981 DEBUG [mondrian.mdx] 1601: exec: 1 ms
2014-02-22 13:11:52,982 DEBUG [mondrian.mdx] 1605: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,983 DEBUG [mondrian.mdx] 1605: exec: 1 ms
2014-02-22 13:11:52,984 DEBUG [mondrian.mdx] 1609: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,985 DEBUG [mondrian.mdx] 1609: exec: 1 ms
2014-02-22 13:11:52,986 DEBUG [mondrian.mdx] 1613: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,987 DEBUG [mondrian.mdx] 1613: exec: 1 ms
2014-02-22 13:11:52,988 DEBUG [mondrian.mdx] 1617: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,988 DEBUG [mondrian.mdx] 1617: exec: 0 ms
2014-02-22 13:11:52,989 DEBUG [mondrian.mdx] 1621: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,990 DEBUG [mondrian.mdx] 1621: exec: 0 ms
2014-02-22 13:11:52,992 DEBUG [mondrian.mdx] 1625: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,993 DEBUG [mondrian.mdx] 1625: exec: 1 ms
2014-02-22 13:11:52,995 DEBUG [mondrian.mdx] 1629: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,996 DEBUG [mondrian.mdx] 1629: exec: 1 ms
2014-02-22 13:11:52,998 DEBUG [mondrian.mdx] 1633: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:52,999 DEBUG [mondrian.mdx] 1633: exec: 1 ms
2014-02-22 13:11:53,000 DEBUG [mondrian.mdx] 1637: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,001 DEBUG [mondrian.mdx] 1637: exec: 1 ms
2014-02-22 13:11:53,002 DEBUG [mondrian.mdx] 1641: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,003 DEBUG [mondrian.mdx] 1641: exec: 1 ms
2014-02-22 13:11:53,004 DEBUG [mondrian.mdx] 1645: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,005 DEBUG [mondrian.mdx] 1645: exec: 1 ms
2014-02-22 13:11:53,006 DEBUG [mondrian.mdx] 1649: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,007 DEBUG [mondrian.mdx] 1649: exec: 1 ms
2014-02-22 13:11:53,008 DEBUG [mondrian.mdx] 1653: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,008 DEBUG [mondrian.mdx] 1653: exec: 0 ms
2014-02-22 13:11:53,010 DEBUG [mondrian.mdx] 1657: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,011 DEBUG [mondrian.mdx] 1657: exec: 1 ms
2014-02-22 13:11:53,012 DEBUG [mondrian.mdx] 1661: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,013 DEBUG [mondrian.mdx] 1661: exec: 1 ms
2014-02-22 13:11:53,014 DEBUG [mondrian.mdx] 1665: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,015 DEBUG [mondrian.mdx] 1665: exec: 1 ms
2014-02-22 13:11:53,016 DEBUG [mondrian.mdx] 1669: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,017 DEBUG [mondrian.mdx] 1669: exec: 0 ms
2014-02-22 13:11:53,018 DEBUG [mondrian.mdx] 1673: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,019 DEBUG [mondrian.mdx] 1673: exec: 1 ms
2014-02-22 13:11:53,020 DEBUG [mondrian.mdx] 1677: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,021 DEBUG [mondrian.mdx] 1677: exec: 1 ms
2014-02-22 13:11:53,022 DEBUG [mondrian.mdx] 1681: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,023 DEBUG [mondrian.mdx] 1681: exec: 1 ms
2014-02-22 13:11:53,024 DEBUG [mondrian.mdx] 1685: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,025 DEBUG [mondrian.mdx] 1685: exec: 1 ms
2014-02-22 13:11:53,026 DEBUG [mondrian.mdx] 1689: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,027 DEBUG [mondrian.mdx] 1689: exec: 1 ms
2014-02-22 13:11:53,029 DEBUG [mondrian.mdx] 1693: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,030 DEBUG [mondrian.mdx] 1693: exec: 1 ms
2014-02-22 13:11:53,032 DEBUG [mondrian.mdx] 1697: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,033 DEBUG [mondrian.mdx] 1697: exec: 1 ms
2014-02-22 13:11:53,034 DEBUG [mondrian.mdx] 1701: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,035 DEBUG [mondrian.mdx] 1701: exec: 1 ms
2014-02-22 13:11:53,036 DEBUG [mondrian.mdx] 1705: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,037 DEBUG [mondrian.mdx] 1705: exec: 1 ms
2014-02-22 13:11:53,038 DEBUG [mondrian.mdx] 1709: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,039 DEBUG [mondrian.mdx] 1709: exec: 0 ms
2014-02-22 13:11:53,041 DEBUG [mondrian.mdx] 1713: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,043 DEBUG [mondrian.mdx] 1713: exec: 1 ms
2014-02-22 13:11:53,044 DEBUG [mondrian.mdx] 1717: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,045 DEBUG [mondrian.mdx] 1717: exec: 1 ms
2014-02-22 13:11:53,046 DEBUG [mondrian.mdx] 1721: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,047 DEBUG [mondrian.mdx] 1721: exec: 1 ms
2014-02-22 13:11:53,048 DEBUG [mondrian.mdx] 1725: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,049 DEBUG [mondrian.mdx] 1725: exec: 1 ms
2014-02-22 13:11:53,050 DEBUG [mondrian.mdx] 1729: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,051 DEBUG [mondrian.mdx] 1729: exec: 1 ms
2014-02-22 13:11:53,052 DEBUG [mondrian.mdx] 1733: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,053 DEBUG [mondrian.mdx] 1733: exec: 1 ms
2014-02-22 13:11:53,054 DEBUG [mondrian.mdx] 1737: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,055 DEBUG [mondrian.mdx] 1737: exec: 1 ms
2014-02-22 13:11:53,056 DEBUG [mondrian.mdx] 1741: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,057 DEBUG [mondrian.mdx] 1741: exec: 1 ms
2014-02-22 13:11:53,058 DEBUG [mondrian.mdx] 1745: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,059 DEBUG [mondrian.mdx] 1745: exec: 1 ms
2014-02-22 13:11:53,060 DEBUG [mondrian.mdx] 1749: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,061 DEBUG [mondrian.mdx] 1749: exec: 1 ms
2014-02-22 13:11:53,064 DEBUG [mondrian.mdx] 1753: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,066 DEBUG [mondrian.mdx] 1753: exec: 2 ms
2014-02-22 13:11:53,069 DEBUG [mondrian.mdx] 1757: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,069 DEBUG [mondrian.mdx] 1757: exec: 0 ms
2014-02-22 13:11:53,074 DEBUG [mondrian.mdx] 1773: with member [Product].[Drink].[Percent of Alcoholic Drinks] as '([Product].[Drink].[Alcoholic Beverages] / [Product].[Drink])', format_string = "#.00%"
select {[Product].[Drink].[Percent of Alcoholic Drinks]} ON COLUMNS,
  Order([Customers].[USA].[WA].Children, [Product].[Drink].[Percent of Alcoholic Drinks], BDESC) ON ROWS
from [Sales]
where [Measures].[Unit Sales]

2014-02-22 13:11:53,103 DEBUG [mondrian.mdx] 1773: exec: 29 ms
2014-02-22 13:11:53,114 DEBUG [mondrian.sql] 63: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('/***an illegal comment****/Marital Status') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:11:53,116 DEBUG [mondrian.sql] 63: , exec 1 ms
2014-02-22 13:11:53,116 DEBUG [mondrian.sql] 63: , exec+fetch 2 ms, 0 rows
2014-02-22 13:11:53,118 DEBUG [mondrian.sql] 64: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_type` as `c0` from `store` as `store` where UPPER(`store`.`store_type`) = UPPER('/***an illegal comment****/Marital Status') group by `store`.`store_type` order by ISNULL(`store`.`store_type`) ASC, `store`.`store_type` ASC]
2014-02-22 13:11:53,120 DEBUG [mondrian.sql] 64: , exec 1 ms
2014-02-22 13:11:53,120 DEBUG [mondrian.sql] 64: , exec+fetch 2 ms, 0 rows
2014-02-22 13:11:53,122 DEBUG [mondrian.sql] 65: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and UPPER(`product_class`.`product_family`) = UPPER('/***an illegal comment****/Marital Status') group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:11:53,123 DEBUG [mondrian.sql] 65: , exec 1 ms
2014-02-22 13:11:53,124 DEBUG [mondrian.sql] 65: , exec+fetch 2 ms, 0 rows
2014-02-22 13:11:53,125 DEBUG [mondrian.sql] 66: SqlMemberSource.getMemberChildren: executing sql [select `promotion`.`media_type` as `c0` from `promotion` as `promotion` where UPPER(`promotion`.`media_type`) = UPPER('/***an illegal comment****/Marital Status') group by `promotion`.`media_type` order by ISNULL(`promotion`.`media_type`) ASC, `promotion`.`media_type` ASC]
2014-02-22 13:11:53,130 DEBUG [mondrian.sql] 66: , exec 5 ms
2014-02-22 13:11:53,133 DEBUG [mondrian.sql] 66: , exec+fetch 8 ms, 0 rows
2014-02-22 13:11:53,134 DEBUG [mondrian.sql] 67: SqlMemberSource.getMemberChildren: executing sql [select `promotion`.`promotion_name` as `c0` from `promotion` as `promotion` where UPPER(`promotion`.`promotion_name`) = UPPER('/***an illegal comment****/Marital Status') group by `promotion`.`promotion_name` order by ISNULL(`promotion`.`promotion_name`) ASC, `promotion`.`promotion_name` ASC]
2014-02-22 13:11:53,139 DEBUG [mondrian.sql] 67: , exec 4 ms
2014-02-22 13:11:53,140 DEBUG [mondrian.sql] 67: , exec+fetch 6 ms, 0 rows
2014-02-22 13:11:53,141 DEBUG [mondrian.sql] 68: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('/***an illegal comment****/Marital Status') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:11:53,168 DEBUG [mondrian.sql] 68: , exec 26 ms
2014-02-22 13:11:53,169 DEBUG [mondrian.sql] 68: , exec+fetch 28 ms, 0 rows
2014-02-22 13:11:53,171 DEBUG [mondrian.sql] 69: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`education` as `c0` from `customer` as `customer` where UPPER(`customer`.`education`) = UPPER('/***an illegal comment****/Marital Status') group by `customer`.`education` order by ISNULL(`customer`.`education`) ASC, `customer`.`education` ASC]
2014-02-22 13:11:53,194 DEBUG [mondrian.sql] 69: , exec 23 ms
2014-02-22 13:11:53,195 DEBUG [mondrian.sql] 69: , exec+fetch 24 ms, 0 rows
2014-02-22 13:11:53,197 DEBUG [mondrian.sql] 70: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`gender` as `c0` from `customer` as `customer` where UPPER(`customer`.`gender`) = UPPER('/***an illegal comment****/Marital Status') group by `customer`.`gender` order by ISNULL(`customer`.`gender`) ASC, `customer`.`gender` ASC]
2014-02-22 13:11:53,221 DEBUG [mondrian.sql] 70: , exec 23 ms
2014-02-22 13:11:53,221 DEBUG [mondrian.sql] 70: , exec+fetch 24 ms, 0 rows
2014-02-22 13:11:53,222 DEBUG [mondrian.sql] 71: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`marital_status` as `c0` from `customer` as `customer` where UPPER(`customer`.`marital_status`) = UPPER('/***an illegal comment****/Marital Status') group by `customer`.`marital_status` order by ISNULL(`customer`.`marital_status`) ASC, `customer`.`marital_status` ASC]
2014-02-22 13:11:53,247 DEBUG [mondrian.sql] 71: , exec 23 ms
2014-02-22 13:11:53,247 DEBUG [mondrian.sql] 71: , exec+fetch 24 ms, 0 rows
2014-02-22 13:11:53,249 DEBUG [mondrian.sql] 72: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`yearly_income` as `c0` from `customer` as `customer` where UPPER(`customer`.`yearly_income`) = UPPER('/***an illegal comment****/Marital Status') group by `customer`.`yearly_income` order by ISNULL(`customer`.`yearly_income`) ASC, `customer`.`yearly_income` ASC]
2014-02-22 13:11:53,276 DEBUG [mondrian.sql] 72: , exec 26 ms
2014-02-22 13:11:53,277 DEBUG [mondrian.sql] 72: , exec+fetch 28 ms, 0 rows
2014-02-22 13:11:53,291 DEBUG [mondrian.mdx] 1786: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,292 DEBUG [mondrian.mdx] 1786: exec: 1 ms
2014-02-22 13:11:53,295 DEBUG [mondrian.mdx] 1790: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,296 DEBUG [mondrian.mdx] 1790: exec: 1 ms
2014-02-22 13:11:53,309 DEBUG [mondrian.mdx] 1796: select Filter({[Gender].Members}, (1 = 0)) ON COLUMNS,
  {} ON ROWS
from [Sales]

2014-02-22 13:11:53,319 DEBUG [mondrian.sql] 73: SqlTupleReader.readTuples [[Gender].[Gender]]: executing sql [select `customer`.`gender` as `c0` from `customer` as `customer` group by `customer`.`gender` order by ISNULL(`customer`.`gender`) ASC, `customer`.`gender` ASC]
2014-02-22 13:11:53,343 DEBUG [mondrian.sql] 73: , exec 23 ms
2014-02-22 13:11:53,344 DEBUG [mondrian.sql] 73: , exec+fetch 25 ms, 2 rows
2014-02-22 13:11:53,346 DEBUG [mondrian.mdx] 1796: exec: 37 ms
2014-02-22 13:11:53,348 DEBUG [mondrian.mdx] 1802: select {} ON COLUMNS,
  {} ON ROWS
from [Sales]
where [Gender].[F]

2014-02-22 13:11:53,349 DEBUG [mondrian.mdx] 1802: exec: 1 ms
2014-02-22 13:11:53,352 DEBUG [mondrian.sql] 74: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`marital_status` as `c0` from `customer` as `customer` where UPPER(`customer`.`marital_status`) = UPPER('S') group by `customer`.`marital_status` order by ISNULL(`customer`.`marital_status`) ASC, `customer`.`marital_status` ASC]
2014-02-22 13:11:53,370 DEBUG [mondrian.sql] 74: , exec 17 ms
2014-02-22 13:11:53,371 DEBUG [mondrian.sql] 74: , exec+fetch 18 ms, 1 rows
2014-02-22 13:11:53,372 DEBUG [mondrian.sql] 75: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`marital_status` as `c0` from `customer` as `customer` where UPPER(`customer`.`marital_status`) = UPPER('M') group by `customer`.`marital_status` order by ISNULL(`customer`.`marital_status`) ASC, `customer`.`marital_status` ASC]
2014-02-22 13:11:53,389 DEBUG [mondrian.sql] 75: , exec 16 ms
2014-02-22 13:11:53,389 DEBUG [mondrian.sql] 75: , exec+fetch 17 ms, 1 rows
2014-02-22 13:11:53,391 DEBUG [mondrian.mdx] 1814: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Gender].Members} ON ROWS
from [Sales]
where {[Marital Status].[S], [Marital Status].[M]}

2014-02-22 13:11:53,396 DEBUG [mondrian.sql] 76: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`marital_status` as `c0` from `customer` as `customer` group by `customer`.`marital_status` order by ISNULL(`customer`.`marital_status`) ASC, `customer`.`marital_status` ASC]
2014-02-22 13:11:53,415 DEBUG [mondrian.sql] 76: , exec 18 ms
2014-02-22 13:11:53,416 DEBUG [mondrian.sql] 76: , exec+fetch 20 ms, 2 rows
2014-02-22 13:11:53,423 DEBUG [mondrian.sql] 77: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `gender`) from `customer`]
2014-02-22 13:11:53,437 DEBUG [mondrian.sql] 77: , exec 13 ms
2014-02-22 13:11:53,437 DEBUG [mondrian.sql] 77: , exec+fetch 14 ms, 1 rows
2014-02-22 13:11:53,440 DEBUG [mondrian.sql] 78: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`gender` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `customer`.`gender`]
2014-02-22 13:11:53,953 DEBUG [mondrian.sql] 78: , exec 512 ms
2014-02-22 13:11:53,955 DEBUG [mondrian.sql] 78: , exec+fetch 514 ms, 2 rows
2014-02-22 13:11:53,957 DEBUG [mondrian.mdx] 1814: exec: 566 ms
2014-02-22 13:11:53,964 DEBUG [mondrian.mdx] 1835: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Gender].Members} ON ROWS
from [Sales]
where Filter({[Marital Status].Members}, (1 = 0))

2014-02-22 13:11:53,966 DEBUG [mondrian.sql] 79: SqlTupleReader.readTuples [[Marital Status].[Marital Status]]: executing sql [select `customer`.`marital_status` as `c0` from `customer` as `customer` group by `customer`.`marital_status` order by ISNULL(`customer`.`marital_status`) ASC, `customer`.`marital_status` ASC]
2014-02-22 13:11:53,967 DEBUG [mondrian.sql] 79: , exec 0 ms
2014-02-22 13:11:53,969 DEBUG [mondrian.sql] 79: , exec+fetch 3 ms, 2 rows
2014-02-22 13:11:53,971 DEBUG [mondrian.mdx] 1835: exec: 6 ms
2014-02-22 13:11:53,981 DEBUG [mondrian.mdx] 1847: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Gender].Members} ON ROWS
from [Sales]
where {Filter({[Marital Status].Members}, ([Measures].[Unit Sales] = 266773))}.Item(0)

2014-02-22 13:11:53,985 DEBUG [mondrian.sql] 80: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`marital_status` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`marital_status` in ('M', 'S') group by `time_by_day`.`the_year`, `customer`.`marital_status`]
2014-02-22 13:11:54,475 DEBUG [mondrian.sql] 80: , exec 489 ms
2014-02-22 13:11:54,476 DEBUG [mondrian.sql] 80: , exec+fetch 491 ms, 2 rows
2014-02-22 13:11:54,481 DEBUG [mondrian.mdx] 1847: exec: 500 ms
2014-02-22 13:11:54,487 DEBUG [mondrian.mdx] 1857: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Gender].Members} ON ROWS
from [Sales]
where [Marital Status].Parent

2014-02-22 13:11:54,490 DEBUG [mondrian.mdx] 1857: exec: 2 ms
2014-02-22 13:11:54,493 DEBUG [mondrian.mdx] 1869: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Gender].Members} ON ROWS
from [Sales]
where Filter({[Marital Status].Members}, ([Measures].[Unit Sales] = 266773))

2014-02-22 13:11:54,501 DEBUG [mondrian.mdx] 1869: exec: 6 ms
2014-02-22 13:11:54,508 DEBUG [mondrian.mdx] 1881: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Gender].Members} ON ROWS
from [Sales]
where Filter({[Marital Status].Members}, ([Measures].[Unit Sales] <= 266773))

2014-02-22 13:11:54,513 DEBUG [mondrian.mdx] 1881: exec: 5 ms
2014-02-22 13:11:54,519 DEBUG [mondrian.sql] 81: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`gender` as `c0` from `customer` as `customer` where UPPER(`customer`.`gender`) = UPPER('M') group by `customer`.`gender` order by ISNULL(`customer`.`gender`) ASC, `customer`.`gender` ASC]
2014-02-22 13:11:54,541 DEBUG [mondrian.sql] 81: , exec 22 ms
2014-02-22 13:11:54,542 DEBUG [mondrian.sql] 81: , exec+fetch 23 ms, 1 rows
2014-02-22 13:11:54,554 DEBUG [mondrian.sql] 82: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` where `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:11:54,556 DEBUG [mondrian.sql] 82: , exec 1 ms
2014-02-22 13:11:54,557 DEBUG [mondrian.sql] 82: , exec+fetch 3 ms, 1 rows
2014-02-22 13:11:54,558 DEBUG [mondrian.sql] 83: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`week_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and `time_by_day`.`week_of_year` = 20 group by `time_by_day`.`week_of_year` order by ISNULL(`time_by_day`.`week_of_year`) ASC, `time_by_day`.`week_of_year` ASC]
2014-02-22 13:11:54,566 DEBUG [mondrian.sql] 83: , exec 7 ms
2014-02-22 13:11:54,567 DEBUG [mondrian.sql] 83: , exec+fetch 9 ms, 1 rows
2014-02-22 13:11:54,571 DEBUG [mondrian.mdx] 1921: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Time].[1997].Children} ON ROWS
from [Sales]
where ([Marital Status].[S], [Time.Weekly].[1997].[20])

2014-02-22 13:11:54,581 DEBUG [mondrian.sql] 84: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `week_of_year`) from `time_by_day`]
2014-02-22 13:11:54,583 DEBUG [mondrian.sql] 84: , exec 1 ms
2014-02-22 13:11:54,584 DEBUG [mondrian.sql] 84: , exec+fetch 3 ms, 1 rows
2014-02-22 13:11:54,586 DEBUG [mondrian.sql] 85: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`week_of_year` as `c2`, `customer`.`marital_status` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`week_of_year` = 20 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`marital_status` = 'S' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`week_of_year`, `customer`.`marital_status`]
2014-02-22 13:11:54,954 DEBUG [mondrian.sql] 85: , exec 368 ms
2014-02-22 13:11:54,956 DEBUG [mondrian.sql] 85: , exec+fetch 369 ms, 1 rows
2014-02-22 13:11:54,957 DEBUG [mondrian.mdx] 1921: exec: 386 ms
2014-02-22 13:11:54,961 DEBUG [mondrian.sql] 86: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`quarter` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and UPPER(`time_by_day`.`quarter`) = UPPER('Q1') group by `time_by_day`.`quarter` order by ISNULL(`time_by_day`.`quarter`) ASC, `time_by_day`.`quarter` ASC]
2014-02-22 13:11:54,967 DEBUG [mondrian.sql] 86: , exec 5 ms
2014-02-22 13:11:54,968 DEBUG [mondrian.sql] 86: , exec+fetch 6 ms, 1 rows
2014-02-22 13:11:54,969 DEBUG [mondrian.sql] 87: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`week_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and `time_by_day`.`week_of_year` = 4 group by `time_by_day`.`week_of_year` order by ISNULL(`time_by_day`.`week_of_year`) ASC, `time_by_day`.`week_of_year` ASC]
2014-02-22 13:11:54,973 DEBUG [mondrian.sql] 87: , exec 3 ms
2014-02-22 13:11:54,974 DEBUG [mondrian.sql] 87: , exec+fetch 5 ms, 1 rows
2014-02-22 13:11:54,975 DEBUG [mondrian.mdx] 1944: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Gender].Members} ON ROWS
from [Sales]
where ([Time].[1997].[Q1], [Time.Weekly].[1997].[4])

2014-02-22 13:11:54,979 DEBUG [mondrian.sql] 88: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`week_of_year` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`week_of_year` = 4 group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`week_of_year`]
2014-02-22 13:11:54,980 DEBUG [mondrian.sql] 89: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`week_of_year` as `c2`, `customer`.`gender` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`week_of_year` = 4 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`week_of_year`, `customer`.`gender`]
2014-02-22 13:11:54,991 DEBUG [mondrian.sql] 88: , exec 11 ms
2014-02-22 13:11:54,993 DEBUG [mondrian.sql] 88: , exec+fetch 14 ms, 1 rows
2014-02-22 13:11:55,001 DEBUG [mondrian.sql] 89: , exec 21 ms
2014-02-22 13:11:55,003 DEBUG [mondrian.sql] 89: , exec+fetch 23 ms, 2 rows
2014-02-22 13:11:55,004 DEBUG [mondrian.mdx] 1944: exec: 29 ms
2014-02-22 13:11:55,010 DEBUG [mondrian.mdx] 1966: select {[Measures].[Unit Sales]} ON COLUMNS,
  {([Product].[All Products], [Time.Weekly].[1997])} ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:11:55,011 DEBUG [mondrian.mdx] 1966: exec: 1 ms
2014-02-22 13:11:55,017 DEBUG [mondrian.sql] 90: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`week_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and `time_by_day`.`week_of_year` = 21 group by `time_by_day`.`week_of_year` order by ISNULL(`time_by_day`.`week_of_year`) ASC, `time_by_day`.`week_of_year` ASC]
2014-02-22 13:11:55,021 DEBUG [mondrian.sql] 90: , exec 3 ms
2014-02-22 13:11:55,022 DEBUG [mondrian.sql] 90: , exec+fetch 4 ms, 1 rows
2014-02-22 13:11:55,023 DEBUG [mondrian.sql] 91: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`week_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and `time_by_day`.`week_of_year` = 22 group by `time_by_day`.`week_of_year` order by ISNULL(`time_by_day`.`week_of_year`) ASC, `time_by_day`.`week_of_year` ASC]
2014-02-22 13:11:55,027 DEBUG [mondrian.sql] 91: , exec 3 ms
2014-02-22 13:11:55,027 DEBUG [mondrian.sql] 91: , exec+fetch 4 ms, 1 rows
2014-02-22 13:11:55,031 DEBUG [mondrian.sql] 92: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`week_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and `time_by_day`.`week_of_year` = 23 group by `time_by_day`.`week_of_year` order by ISNULL(`time_by_day`.`week_of_year`) ASC, `time_by_day`.`week_of_year` ASC]
2014-02-22 13:11:55,035 DEBUG [mondrian.sql] 92: , exec 3 ms
2014-02-22 13:11:55,036 DEBUG [mondrian.sql] 92: , exec+fetch 5 ms, 1 rows
2014-02-22 13:11:55,043 DEBUG [mondrian.mdx] 1988: select NON EMPTY {[Measures].[Sales Count]} ON COLUMNS,
  NON EMPTY Hierarchize(Crossjoin(Union({[Gender].CurrentMember}, [Gender].Children), Union({[Product].CurrentMember}, [Product].[Brand Name].Members))) ON ROWS
from [Sales]
where {[Time.Weekly].[1997].[20], [Time.Weekly].[1997].[21], [Time.Weekly].[1997].[22], [Time.Weekly].[1997].[23]}

2014-02-22 13:11:55,046 DEBUG [mondrian.sql] 93: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`gender` as `c0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`week_of_year` in (20, 21, 22, 23) and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `customer`.`gender` order by ISNULL(`customer`.`gender`) ASC, `customer`.`gender` ASC]
2014-02-22 13:11:55,379 DEBUG [mondrian.sql] 93: , exec 333 ms
2014-02-22 13:11:55,380 DEBUG [mondrian.sql] 93: , exec+fetch 334 ms, 2 rows
2014-02-22 13:11:55,382 DEBUG [mondrian.sql] 94: SqlTupleReader.readTuples [[Product].[Brand Name]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `product_class`.`product_category` as `c2`, `product_class`.`product_subcategory` as `c3`, `product`.`brand_name` as `c4` from `product` as `product`, `product_class` as `product_class`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`week_of_year` in (20, 21, 22, 23) group by `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC, ISNULL(`product_class`.`product_subcategory`) ASC, `product_class`.`product_subcategory` ASC, ISNULL(`product`.`brand_name`) ASC, `product`.`brand_name` ASC]
2014-02-22 13:11:57,049 DEBUG [mondrian.sql] 94: , exec 1667 ms
2014-02-22 13:11:57,204 DEBUG [mondrian.sql] 94: , exec+fetch 1822 ms, 507 rows
2014-02-22 13:11:57,485 DEBUG [mondrian.sql] 95: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_category`) from `product_class`]
2014-02-22 13:11:57,486 DEBUG [mondrian.sql] 95: , exec 1 ms
2014-02-22 13:11:57,487 DEBUG [mondrian.sql] 95: , exec+fetch 2 ms, 1 rows
2014-02-22 13:11:57,487 DEBUG [mondrian.sql] 96: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_subcategory`) from `product_class`]
2014-02-22 13:11:57,489 DEBUG [mondrian.sql] 96: , exec 0 ms
2014-02-22 13:11:57,489 DEBUG [mondrian.sql] 96: , exec+fetch 1 ms, 1 rows
2014-02-22 13:11:57,490 DEBUG [mondrian.sql] 97: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `brand_name`) from `product`]
2014-02-22 13:11:57,492 DEBUG [mondrian.sql] 97: , exec 2 ms
2014-02-22 13:11:57,493 DEBUG [mondrian.sql] 97: , exec+fetch 3 ms, 1 rows
2014-02-22 13:11:57,609 DEBUG [mondrian.sql] 98: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`week_of_year` as `c1`, count(`sales_fact_1997`.`product_id`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`week_of_year` in (20, 21, 22, 23) group by `time_by_day`.`the_year`, `time_by_day`.`week_of_year`]
2014-02-22 13:11:57,611 DEBUG [mondrian.sql] 99: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`week_of_year` as `c1`, `customer`.`gender` as `c2`, count(`sales_fact_1997`.`product_id`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`week_of_year` in (20, 21, 22, 23) and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `time_by_day`.`week_of_year`, `customer`.`gender`]
2014-02-22 13:11:57,675 DEBUG [mondrian.sql] 98: , exec 63 ms
2014-02-22 13:11:57,682 DEBUG [mondrian.sql] 98: , exec+fetch 69 ms, 4 rows
2014-02-22 13:11:57,683 DEBUG [mondrian.sql] 100: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`week_of_year` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `product_class`.`product_subcategory` as `c5`, `product`.`brand_name` as `c6`, count(`sales_fact_1997`.`product_id`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`week_of_year` in (20, 21, 22, 23) and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`week_of_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`]
2014-02-22 13:11:58,195 DEBUG [mondrian.sql] 99: , exec 583 ms
2014-02-22 13:11:58,197 DEBUG [mondrian.sql] 99: , exec+fetch 586 ms, 8 rows
2014-02-22 13:11:59,635 DEBUG [mondrian.sql] 100: , exec 1951 ms
2014-02-22 13:11:59,939 DEBUG [mondrian.sql] 100: , exec+fetch 2256 ms, 1649 rows
2014-02-22 13:12:00,105 DEBUG [mondrian.sql] 101: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`week_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) group by `time_by_day`.`week_of_year` order by ISNULL(`time_by_day`.`week_of_year`) ASC, `time_by_day`.`week_of_year` ASC]
2014-02-22 13:12:00,113 DEBUG [mondrian.sql] 101: , exec 7 ms
2014-02-22 13:12:00,116 DEBUG [mondrian.sql] 101: , exec+fetch 11 ms, 52 rows
2014-02-22 13:12:00,590 DEBUG [mondrian.sql] 102: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`week_of_year` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `product_class`.`product_subcategory` as `c5`, `product`.`brand_name` as `c6`, `customer`.`gender` as `c7`, count(`sales_fact_1997`.`product_id`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`week_of_year` in (20, 21, 22, 23) and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `time_by_day`.`week_of_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`, `customer`.`gender`]
2014-02-22 13:12:03,457 DEBUG [mondrian.sql] 102: , exec 2865 ms
2014-02-22 13:12:03,577 DEBUG [mondrian.sql] 102: , exec+fetch 2986 ms, 2569 rows
2014-02-22 13:12:03,818 DEBUG [mondrian.mdx] 1988: exec: 8775 ms
2014-02-22 13:12:03,827 DEBUG [mondrian.mdx] 2000: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Product].Members} ON ROWS
from [Sales]

2014-02-22 13:12:03,828 DEBUG [mondrian.sql] 103: SqlTupleReader.readTuples [[Product].[Product Family]]: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:12:03,832 DEBUG [mondrian.sql] 103: , exec 3 ms
2014-02-22 13:12:03,833 DEBUG [mondrian.sql] 103: , exec+fetch 4 ms, 3 rows
2014-02-22 13:12:03,834 DEBUG [mondrian.sql] 104: SqlTupleReader.readTuples [[Product].[Product Category]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `product_class`.`product_category` as `c2` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC]
2014-02-22 13:12:03,843 DEBUG [mondrian.sql] 104: , exec 8 ms
2014-02-22 13:12:03,848 DEBUG [mondrian.sql] 104: , exec+fetch 14 ms, 55 rows
2014-02-22 13:12:03,850 DEBUG [mondrian.sql] 105: SqlTupleReader.readTuples [[Product].[Product Subcategory]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `product_class`.`product_category` as `c2`, `product_class`.`product_subcategory` as `c3` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC, ISNULL(`product_class`.`product_subcategory`) ASC, `product_class`.`product_subcategory` ASC]
2014-02-22 13:12:03,860 DEBUG [mondrian.sql] 105: , exec 8 ms
2014-02-22 13:12:03,871 DEBUG [mondrian.sql] 105: , exec+fetch 20 ms, 102 rows
2014-02-22 13:12:03,878 DEBUG [mondrian.sql] 106: SqlTupleReader.readTuples [[Product].[Brand Name]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `product_class`.`product_category` as `c2`, `product_class`.`product_subcategory` as `c3`, `product`.`brand_name` as `c4` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC, ISNULL(`product_class`.`product_subcategory`) ASC, `product_class`.`product_subcategory` ASC, ISNULL(`product`.`brand_name`) ASC, `product`.`brand_name` ASC]
2014-02-22 13:12:03,904 DEBUG [mondrian.sql] 106: , exec 26 ms
2014-02-22 13:12:03,963 DEBUG [mondrian.sql] 106: , exec+fetch 85 ms, 512 rows
2014-02-22 13:12:03,979 DEBUG [mondrian.sql] 107: SqlTupleReader.readTuples [[Product].[Product Name]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `product_class`.`product_category` as `c2`, `product_class`.`product_subcategory` as `c3`, `product`.`brand_name` as `c4`, `product`.`product_name` as `c5` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`, `product`.`product_name` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC, ISNULL(`product_class`.`product_subcategory`) ASC, `product_class`.`product_subcategory` ASC, ISNULL(`product`.`brand_name`) ASC, `product`.`brand_name` ASC, ISNULL(`product`.`product_name`) ASC, `product`.`product_name` ASC]
2014-02-22 13:12:04,014 DEBUG [mondrian.sql] 107: , exec 34 ms
2014-02-22 13:12:04,118 DEBUG [mondrian.sql] 107: , exec+fetch 138 ms, 1560 rows
2014-02-22 13:12:04,421 DEBUG [mondrian.sql] 108: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_name`) from `product`]
2014-02-22 13:12:04,428 DEBUG [mondrian.sql] 108: , exec 6 ms
2014-02-22 13:12:04,429 DEBUG [mondrian.sql] 108: , exec+fetch 8 ms, 1 rows
2014-02-22 13:12:04,620 DEBUG [mondrian.sql] 109: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`]
2014-02-22 13:12:04,654 DEBUG [mondrian.sql] 110: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:12:05,141 DEBUG [mondrian.sql] 111: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `product_class`.`product_category` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`]
2014-02-22 13:12:05,216 DEBUG [mondrian.sql] 114: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `product_class`.`product_category` as `c3`, `product_class`.`product_subcategory` as `c4`, `product`.`brand_name` as `c5`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`]
2014-02-22 13:12:05,589 DEBUG [mondrian.sql] 113: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product`.`product_name` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` group by `time_by_day`.`the_year`, `product`.`product_name`]
2014-02-22 13:12:05,678 DEBUG [mondrian.sql] 112: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `product_class`.`product_category` as `c3`, `product_class`.`product_subcategory` as `c4`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`]
2014-02-22 13:12:10,079 DEBUG [mondrian.sql] 109: , exec 5459 ms
2014-02-22 13:12:10,087 DEBUG [mondrian.sql] 109: , exec+fetch 5464 ms, 3 rows
2014-02-22 13:12:10,320 DEBUG [mondrian.sql] 110: , exec 5665 ms
2014-02-22 13:12:10,356 DEBUG [mondrian.sql] 110: , exec+fetch 5698 ms, 23 rows
2014-02-22 13:12:10,578 DEBUG [mondrian.sql] 113: , exec 4984 ms
2014-02-22 13:12:10,682 DEBUG [mondrian.sql] 113: , exec+fetch 5088 ms, 1559 rows
2014-02-22 13:12:11,088 DEBUG [mondrian.sql] 114: , exec 5872 ms
2014-02-22 13:12:11,198 DEBUG [mondrian.sql] 114: , exec+fetch 5982 ms, 512 rows
2014-02-22 13:12:11,381 DEBUG [mondrian.sql] 111: , exec 6240 ms
2014-02-22 13:12:11,389 DEBUG [mondrian.sql] 111: , exec+fetch 6248 ms, 55 rows
2014-02-22 13:12:11,497 DEBUG [mondrian.sql] 112: , exec 5818 ms
2014-02-22 13:12:11,502 DEBUG [mondrian.sql] 112: , exec+fetch 5823 ms, 102 rows
2014-02-22 13:12:11,529 DEBUG [mondrian.mdx] 2000: exec: 7702 ms
2014-02-22 13:12:11,533 DEBUG [mondrian.sql] 115: SqlMemberSource.getMemberChildren: executing sql [select `promotion`.`media_type` as `c0` from `promotion` as `promotion` where UPPER(`promotion`.`media_type`) = UPPER('Radio') group by `promotion`.`media_type` order by ISNULL(`promotion`.`media_type`) ASC, `promotion`.`media_type` ASC]
2014-02-22 13:12:11,563 DEBUG [mondrian.sql] 115: , exec 29 ms
2014-02-22 13:12:11,564 DEBUG [mondrian.sql] 115: , exec+fetch 31 ms, 1 rows
2014-02-22 13:12:11,565 DEBUG [mondrian.sql] 116: SqlMemberSource.getMemberChildren: executing sql [select `promotion`.`media_type` as `c0` from `promotion` as `promotion` where UPPER(`promotion`.`media_type`) = UPPER('TV') group by `promotion`.`media_type` order by ISNULL(`promotion`.`media_type`) ASC, `promotion`.`media_type` ASC]
2014-02-22 13:12:11,568 DEBUG [mondrian.sql] 116: , exec 2 ms
2014-02-22 13:12:11,569 DEBUG [mondrian.sql] 116: , exec+fetch 4 ms, 1 rows
2014-02-22 13:12:11,571 DEBUG [mondrian.sql] 117: SqlMemberSource.getMemberChildren: executing sql [select `promotion`.`media_type` as `c0` from `promotion` as `promotion` where UPPER(`promotion`.`media_type`) = UPPER('Sunday Paper') group by `promotion`.`media_type` order by ISNULL(`promotion`.`media_type`) ASC, `promotion`.`media_type` ASC]
2014-02-22 13:12:11,574 DEBUG [mondrian.sql] 117: , exec 2 ms
2014-02-22 13:12:11,574 DEBUG [mondrian.sql] 117: , exec+fetch 3 ms, 1 rows
2014-02-22 13:12:11,576 DEBUG [mondrian.sql] 118: SqlMemberSource.getMemberChildren: executing sql [select `promotion`.`media_type` as `c0` from `promotion` as `promotion` where UPPER(`promotion`.`media_type`) = UPPER('Street Handout') group by `promotion`.`media_type` order by ISNULL(`promotion`.`media_type`) ASC, `promotion`.`media_type` ASC]
2014-02-22 13:12:11,579 DEBUG [mondrian.sql] 118: , exec 3 ms
2014-02-22 13:12:11,580 DEBUG [mondrian.sql] 118: , exec+fetch 4 ms, 1 rows
2014-02-22 13:12:11,584 DEBUG [mondrian.sql] 119: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'WA') and UPPER(`customer`.`city`) = UPPER('Bellingham') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:12:11,597 DEBUG [mondrian.sql] 119: , exec 13 ms
2014-02-22 13:12:11,598 DEBUG [mondrian.sql] 119: , exec+fetch 14 ms, 1 rows
2014-02-22 13:12:11,601 DEBUG [mondrian.mdx] 2023: select Crossjoin({[Measures].[Unit Sales], [Measures].[Store Sales]}, {[Promotion Media].[Radio], [Promotion Media].[TV], [Promotion Media].[Sunday Paper], [Promotion Media].[Street Handout]}) ON COLUMNS,
  NON EMPTY Crossjoin({[Product].[Drink].Children}, {[Customers].[USA].[WA].[Bellingham]}) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:11,614 DEBUG [mondrian.sql] 120: SqlTupleReader.readTuples [[Product].[Product Department], [Customers].[City]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `customer`.`country` as `c2`, `customer`.`state_province` as `c3`, `customer`.`city` as `c4` from `product` as `product`, `product_class` as `product_class`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer`, `promotion` as `promotion` where `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and (`promotion`.`media_type` in ('Radio', 'TV', 'Sunday Paper', 'Street Handout')) and (`product_class`.`product_family` = 'Drink') and (`customer`.`city` = 'Bellingham' and `customer`.`state_province` = 'WA') group by `product_class`.`product_family`, `product_class`.`product_department`, `customer`.`country`, `customer`.`state_province`, `customer`.`city` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC, ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC, ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:12:11,785 DEBUG [mondrian.sql] 120: , exec 171 ms
2014-02-22 13:12:11,786 DEBUG [mondrian.sql] 120: , exec+fetch 172 ms, 2 rows
2014-02-22 13:12:11,794 DEBUG [mondrian.sql] 121: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `promotion`.`media_type` as `c3`, `customer`.`state_province` as `c4`, `customer`.`city` as `c5`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` in ('Alcoholic Beverages', 'Dairy') and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` in ('Radio', 'Street Handout', 'Sunday Paper', 'TV') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`state_province` = 'WA' and `customer`.`city` = 'Bellingham' group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `promotion`.`media_type`, `customer`.`state_province`, `customer`.`city`]
2014-02-22 13:12:11,851 DEBUG [mondrian.sql] 121: , exec 56 ms
2014-02-22 13:12:11,853 DEBUG [mondrian.sql] 121: , exec+fetch 59 ms, 2 rows
2014-02-22 13:12:11,854 DEBUG [mondrian.mdx] 2023: exec: 253 ms
2014-02-22 13:12:11,857 DEBUG [mondrian.sql] 122: SqlMemberSource.getMemberChildren: executing sql [select `promotion`.`media_type` as `c0` from `promotion` as `promotion` where UPPER(`promotion`.`media_type`) = UPPER('Cash Register Handout') group by `promotion`.`media_type` order by ISNULL(`promotion`.`media_type`) ASC, `promotion`.`media_type` ASC]
2014-02-22 13:12:11,860 DEBUG [mondrian.sql] 122: , exec 3 ms
2014-02-22 13:12:11,861 DEBUG [mondrian.sql] 122: , exec+fetch 4 ms, 1 rows
2014-02-22 13:12:11,864 DEBUG [mondrian.mdx] 2041: select NON EMPTY Crossjoin({[Measures].[Unit Sales]}, {[Promotion Media].[Cash Register Handout], [Promotion Media].[Sunday Paper], [Promotion Media].[Street Handout]}) ON COLUMNS,
  NON EMPTY Crossjoin({[Product].[All Products].Children}, {[Customers].[USA].[WA].[Bellingham]}) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:11,869 DEBUG [mondrian.sql] 123: SqlTupleReader.readTuples [[Product].[Product Family], [Customers].[City]]: executing sql [select `product_class`.`product_family` as `c0`, `customer`.`country` as `c1`, `customer`.`state_province` as `c2`, `customer`.`city` as `c3` from `product` as `product`, `product_class` as `product_class`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer`, `promotion` as `promotion` where `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and (`promotion`.`media_type` in ('Cash Register Handout', 'Sunday Paper', 'Street Handout')) and (`customer`.`city` = 'Bellingham' and `customer`.`state_province` = 'WA') group by `product_class`.`product_family`, `customer`.`country`, `customer`.`state_province`, `customer`.`city` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC, ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC, ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:12:13,712 DEBUG [mondrian.sql] 123: , exec 1842 ms
2014-02-22 13:12:13,713 DEBUG [mondrian.sql] 123: , exec+fetch 1844 ms, 2 rows
2014-02-22 13:12:13,720 DEBUG [mondrian.sql] 124: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `promotion`.`media_type` as `c2`, `customer`.`state_province` as `c3`, `customer`.`city` as `c4`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` in ('Cash Register Handout', 'Street Handout', 'Sunday Paper') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`state_province` = 'WA' and `customer`.`city` = 'Bellingham' group by `time_by_day`.`the_year`, `product_class`.`product_family`, `promotion`.`media_type`, `customer`.`state_province`, `customer`.`city`]
2014-02-22 13:12:14,972 DEBUG [mondrian.sql] 124: , exec 1251 ms
2014-02-22 13:12:14,973 DEBUG [mondrian.sql] 124: , exec+fetch 1252 ms, 3 rows
2014-02-22 13:12:14,974 DEBUG [mondrian.mdx] 2041: exec: 3110 ms
2014-02-22 13:12:14,978 DEBUG [mondrian.mdx] 2053: select [Product].[Drink].Children ON COLUMNS
from [Sales]
where ([Measures].[Unit Sales], [Promotion Media].[Street Handout], [Time].[1997])

2014-02-22 13:12:14,992 DEBUG [mondrian.sql] 125: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `promotion`.`media_type` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` in ('Alcoholic Beverages', 'Beverages', 'Dairy') and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` = 'Street Handout' group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `promotion`.`media_type`]
2014-02-22 13:12:15,130 DEBUG [mondrian.sql] 125: , exec 137 ms
2014-02-22 13:12:15,131 DEBUG [mondrian.sql] 125: , exec+fetch 139 ms, 3 rows
2014-02-22 13:12:15,132 DEBUG [mondrian.mdx] 2053: exec: 154 ms
2014-02-22 13:12:15,138 DEBUG [mondrian.mdx] 2065: select {[Measures].[Unit Sales]} ON COLUMNS,
  Filter({[Product].Members}, ([Measures].[Unit Sales] > 20000)) ON ROWS
from [Sales]
where [Time].[1997].[Q1]

2014-02-22 13:12:15,276 DEBUG [mondrian.sql] 126: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`]
2014-02-22 13:12:15,276 DEBUG [mondrian.sql] 127: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`]
2014-02-22 13:12:15,290 DEBUG [mondrian.sql] 128: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product`.`product_name` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `sales_fact_1997`.`product_id` = `product`.`product_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product`.`product_name`]
2014-02-22 13:12:15,291 DEBUG [mondrian.sql] 129: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:12:15,293 DEBUG [mondrian.sql] 130: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`]
2014-02-22 13:12:15,325 DEBUG [mondrian.sql] 131: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `product_class`.`product_subcategory` as `c5`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`]
2014-02-22 13:12:15,478 DEBUG [mondrian.sql] 132: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `product_class`.`product_subcategory` as `c5`, `product`.`brand_name` as `c6`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`]
2014-02-22 13:12:15,607 DEBUG [mondrian.sql] 126: , exec 330 ms
2014-02-22 13:12:15,609 DEBUG [mondrian.sql] 126: , exec+fetch 333 ms, 1 rows
2014-02-22 13:12:17,102 DEBUG [mondrian.sql] 128: , exec 1812 ms
2014-02-22 13:12:17,143 DEBUG [mondrian.sql] 128: , exec+fetch 1853 ms, 1559 rows
2014-02-22 13:12:20,308 DEBUG [mondrian.sql] 127: , exec 5030 ms
2014-02-22 13:12:20,310 DEBUG [mondrian.sql] 127: , exec+fetch 5033 ms, 3 rows
2014-02-22 13:12:20,475 DEBUG [mondrian.sql] 130: , exec 5180 ms
2014-02-22 13:12:20,478 DEBUG [mondrian.sql] 130: , exec+fetch 5184 ms, 55 rows
2014-02-22 13:12:20,510 DEBUG [mondrian.sql] 129: , exec 5216 ms
2014-02-22 13:12:20,512 DEBUG [mondrian.sql] 129: , exec+fetch 5219 ms, 23 rows
2014-02-22 13:12:20,678 DEBUG [mondrian.sql] 131: , exec 5351 ms
2014-02-22 13:12:20,680 DEBUG [mondrian.sql] 131: , exec+fetch 5355 ms, 102 rows
2014-02-22 13:12:20,705 DEBUG [mondrian.sql] 132: , exec 5224 ms
2014-02-22 13:12:20,714 DEBUG [mondrian.sql] 132: , exec+fetch 5235 ms, 512 rows
2014-02-22 13:12:20,779 DEBUG [mondrian.mdx] 2065: exec: 5641 ms
2014-02-22 13:12:20,785 DEBUG [mondrian.mdx] 2087: with member [Time].[1997].[H1] as 'Aggregate({[Time].[1997].[Q1], [Time].[1997].[Q2]})'
  member [Measures].[Store Margin] as '([Measures].[Store Sales] - [Measures].[Store Cost])'
select {[Gender].Members} ON COLUMNS,
  Filter({[Product].Members}, ([Gender].[F] > 10000)) ON ROWS
from [Sales]
where ([Time].[1997].[H1], [Measures].[Store Margin])

2014-02-22 13:12:21,241 DEBUG [mondrian.sql] 133: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `customer`.`gender` as `c2`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'F' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `customer`.`gender`]
2014-02-22 13:12:21,244 DEBUG [mondrian.sql] 134: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `customer`.`gender` as `c3`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'F' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `customer`.`gender`]
2014-02-22 13:12:21,247 DEBUG [mondrian.sql] 135: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product`.`product_name` as `c2`, `customer`.`gender` as `c3`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'F' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product`.`product_name`, `customer`.`gender`]
2014-02-22 13:12:21,251 DEBUG [mondrian.sql] 136: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `customer`.`gender` as `c4`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'F' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `customer`.`gender`]
2014-02-22 13:12:21,318 DEBUG [mondrian.sql] 137: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `customer`.`gender` as `c5`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'F' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `customer`.`gender`]
2014-02-22 13:12:21,325 DEBUG [mondrian.sql] 138: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `product_class`.`product_subcategory` as `c5`, `customer`.`gender` as `c6`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'F' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `customer`.`gender`]
2014-02-22 13:12:21,343 DEBUG [mondrian.sql] 139: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `product_class`.`product_subcategory` as `c5`, `product`.`brand_name` as `c6`, `customer`.`gender` as `c7`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'F' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`, `customer`.`gender`]
2014-02-22 13:12:22,991 DEBUG [mondrian.sql] 133: , exec 1749 ms
2014-02-22 13:12:22,995 DEBUG [mondrian.sql] 133: , exec+fetch 1752 ms, 2 rows
2014-02-22 13:12:26,849 DEBUG [mondrian.sql] 135: , exec 5601 ms
2014-02-22 13:12:26,888 DEBUG [mondrian.sql] 135: , exec+fetch 5641 ms, 3114 rows
2014-02-22 13:12:29,200 DEBUG [mondrian.sql] 137: , exec 7881 ms
2014-02-22 13:12:29,203 DEBUG [mondrian.sql] 137: , exec+fetch 7885 ms, 110 rows
2014-02-22 13:12:29,205 DEBUG [mondrian.sql] 136: , exec 7953 ms
2014-02-22 13:12:29,207 DEBUG [mondrian.sql] 136: , exec+fetch 7956 ms, 46 rows
2014-02-22 13:12:29,207 DEBUG [mondrian.sql] 134: , exec 7963 ms
2014-02-22 13:12:29,209 DEBUG [mondrian.sql] 134: , exec+fetch 7965 ms, 6 rows
2014-02-22 13:12:29,384 DEBUG [mondrian.sql] 138: , exec 8058 ms
2014-02-22 13:12:29,388 DEBUG [mondrian.sql] 138: , exec+fetch 8062 ms, 204 rows
2014-02-22 13:12:29,408 DEBUG [mondrian.sql] 139: , exec 8065 ms
2014-02-22 13:12:29,420 DEBUG [mondrian.sql] 139: , exec+fetch 8077 ms, 1024 rows
2014-02-22 13:12:29,772 DEBUG [mondrian.sql] 140: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `customer`.`gender` as `c2`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'M' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `customer`.`gender`]
2014-02-22 13:12:29,774 DEBUG [mondrian.sql] 141: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Food' and `product_class`.`product_department` in ('Produce', 'Snack Foods') group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:12:29,777 DEBUG [mondrian.sql] 142: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `customer`.`gender` as `c3`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'M' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `customer`.`gender`]
2014-02-22 13:12:29,780 DEBUG [mondrian.sql] 143: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `customer`.`gender` as `c4`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Food' and `product_class`.`product_department` in ('Produce', 'Snack Foods') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'M' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `customer`.`gender`]
2014-02-22 13:12:29,781 DEBUG [mondrian.sql] 144: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`]
2014-02-22 13:12:29,802 DEBUG [mondrian.sql] 145: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Food' and `product_class`.`product_department` = 'Snack Foods' and `product_class`.`product_category` = 'Snack Foods' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`]
2014-02-22 13:12:29,808 DEBUG [mondrian.sql] 146: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `customer`.`gender` as `c5`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q1', 'Q2') and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Food' and `product_class`.`product_department` = 'Snack Foods' and `product_class`.`product_category` = 'Snack Foods' and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'M' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `customer`.`gender`]
2014-02-22 13:12:30,568 DEBUG [mondrian.sql] 145: , exec 765 ms
2014-02-22 13:12:30,572 DEBUG [mondrian.sql] 145: , exec+fetch 769 ms, 2 rows
2014-02-22 13:12:30,967 DEBUG [mondrian.sql] 146: , exec 1158 ms
2014-02-22 13:12:30,970 DEBUG [mondrian.sql] 146: , exec+fetch 1162 ms, 2 rows
2014-02-22 13:12:31,164 DEBUG [mondrian.sql] 141: , exec 1390 ms
2014-02-22 13:12:31,166 DEBUG [mondrian.sql] 141: , exec+fetch 1392 ms, 4 rows
2014-02-22 13:12:31,225 DEBUG [mondrian.sql] 140: , exec 1452 ms
2014-02-22 13:12:31,226 DEBUG [mondrian.sql] 140: , exec+fetch 1453 ms, 2 rows
2014-02-22 13:12:31,634 DEBUG [mondrian.sql] 143: , exec 1853 ms
2014-02-22 13:12:31,637 DEBUG [mondrian.sql] 143: , exec+fetch 1857 ms, 4 rows
2014-02-22 13:12:33,060 DEBUG [mondrian.sql] 144: , exec 3279 ms
2014-02-22 13:12:33,062 DEBUG [mondrian.sql] 144: , exec+fetch 3281 ms, 6 rows
2014-02-22 13:12:33,798 DEBUG [mondrian.sql] 142: , exec 4020 ms
2014-02-22 13:12:33,799 DEBUG [mondrian.sql] 142: , exec+fetch 4022 ms, 6 rows
2014-02-22 13:12:33,810 DEBUG [mondrian.mdx] 2087: exec: 13025 ms
2014-02-22 13:12:33,817 DEBUG [mondrian.mdx] 2111: with member [Measures].[StoreType] as '[Store].CurrentMember.Properties("Store Type")', SOLVE_ORDER = 2
  member [Measures].[ProfitPct] as '(([Measures].[Store Sales] - [Measures].[Store Cost]) / [Measures].[Store Sales])', SOLVE_ORDER = 1, FORMAT_STRING = "##.00%"
select {Descendants([Store].[USA], [Store].[Store Name])} ON COLUMNS,
  {[Measures].[Store Sales], [Measures].[Store Cost], [Measures].[StoreType], [Measures].[ProfitPct]} ON ROWS
from [Sales]

2014-02-22 13:12:33,818 DEBUG [mondrian.sql] 147: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:12:33,819 DEBUG [mondrian.sql] 147: , exec 0 ms
2014-02-22 13:12:33,820 DEBUG [mondrian.sql] 147: , exec+fetch 2 ms, 3 rows
2014-02-22 13:12:33,821 DEBUG [mondrian.sql] 148: SqlTupleReader.readTuples [[Store].[Store City]]: executing sql [select `store`.`store_country` as `c0`, `store`.`store_state` as `c1`, `store`.`store_city` as `c2` from `store` as `store` where (`store`.`store_state` in ('CA', 'OR', 'WA')) group by `store`.`store_country`, `store`.`store_state`, `store`.`store_city` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC, ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC, ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:12:33,822 DEBUG [mondrian.sql] 148: , exec 1 ms
2014-02-22 13:12:33,824 DEBUG [mondrian.sql] 148: , exec+fetch 3 ms, 14 rows
2014-02-22 13:12:33,825 DEBUG [mondrian.sql] 149: SqlTupleReader.readTuples [[Store].[Store Name]]: executing sql [select `store`.`store_country` as `c0`, `store`.`store_state` as `c1`, `store`.`store_city` as `c2`, `store`.`store_name` as `c3`, `store`.`store_type` as `c4`, `store`.`store_manager` as `c5`, `store`.`store_sqft` as `c6`, `store`.`grocery_sqft` as `c7`, `store`.`frozen_sqft` as `c8`, `store`.`meat_sqft` as `c9`, `store`.`coffee_bar` as `c10`, `store`.`store_street_address` as `c11` from `store` as `store` where (`store`.`store_city` in ('Alameda', 'Beverly Hills', 'Los Angeles', 'San Diego', 'San Francisco', 'Portland', 'Salem', 'Bellingham', 'Bremerton', 'Seattle', 'Spokane', 'Tacoma', 'Walla Walla', 'Yakima') and `store`.`store_state` in ('CA', 'OR', 'WA')) group by `store`.`store_country`, `store`.`store_state`, `store`.`store_city`, `store`.`store_name`, `store`.`store_type`, `store`.`store_manager`, `store`.`store_sqft`, `store`.`grocery_sqft`, `store`.`frozen_sqft`, `store`.`meat_sqft`, `store`.`coffee_bar`, `store`.`store_street_address` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC, ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC, ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC, ISNULL(`store`.`store_name`) ASC, `store`.`store_name` ASC]
2014-02-22 13:12:33,827 DEBUG [mondrian.sql] 149: , exec 1 ms
2014-02-22 13:12:33,829 DEBUG [mondrian.sql] 149: , exec+fetch 4 ms, 14 rows
2014-02-22 13:12:33,834 DEBUG [mondrian.sql] 150: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_name`) from `store`]
2014-02-22 13:12:33,835 DEBUG [mondrian.sql] 150: , exec 0 ms
2014-02-22 13:12:33,836 DEBUG [mondrian.sql] 150: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:33,840 DEBUG [mondrian.sql] 151: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_name`, `time_by_day`.`the_year`]
2014-02-22 13:12:34,046 DEBUG [mondrian.sql] 151: , exec 205 ms
2014-02-22 13:12:34,047 DEBUG [mondrian.sql] 151: , exec+fetch 207 ms, 13 rows
2014-02-22 13:12:34,050 DEBUG [mondrian.mdx] 2111: exec: 233 ms
2014-02-22 13:12:34,056 DEBUG [mondrian.mdx] 2122: with member [Product].[ProdCalc] as '1', SOLVE_ORDER = 1
  member [Measures].[MeasuresCalc] as '2', SOLVE_ORDER = 2
  member [Time].[1997].[TimeCalc] as '3', SOLVE_ORDER = 3
select {[Product].[ProdCalc]} ON COLUMNS,
  {([Time].[1997].[TimeCalc], [Measures].[MeasuresCalc])} ON ROWS
from [Sales]

2014-02-22 13:12:34,058 DEBUG [mondrian.mdx] 2122: exec: 2 ms
2014-02-22 13:12:34,061 DEBUG [mondrian.mdx] 2130: with member [Store].[StoreCalc] as '0', SOLVE_ORDER = 0
  member [Product].[ProdCalc] as '1', SOLVE_ORDER = 1
select {[Product].[ProdCalc]} ON COLUMNS,
  {[Store].[StoreCalc]} ON ROWS
from [Sales]

2014-02-22 13:12:34,063 DEBUG [mondrian.mdx] 2130: exec: 2 ms
2014-02-22 13:12:34,070 DEBUG [mondrian.mdx] 2138: with member [Promotions].[Calc] as '1'
  member [Customers].[Calc] as '2'
select {[Promotions].[Calc]} ON COLUMNS,
  {[Customers].[Calc]} ON ROWS
from [Sales]

2014-02-22 13:12:34,072 DEBUG [mondrian.mdx] 2138: exec: 2 ms
2014-02-22 13:12:34,076 DEBUG [mondrian.mdx] 2146: with member [Promotions].[Calc] as '1'
  member [Product].[Calc] as '2'
select {[Promotions].[Calc]} ON COLUMNS,
  {[Product].[Calc]} ON ROWS
from [Sales]

2014-02-22 13:12:34,077 DEBUG [mondrian.mdx] 2146: exec: 1 ms
2014-02-22 13:12:34,080 DEBUG [mondrian.sql] 152: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_category` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_department` = 'Alcoholic Beverages' and `product_class`.`product_family` = 'Drink') and UPPER(`product_class`.`product_category`) = UPPER('Beer and Wine') group by `product_class`.`product_category` order by ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC]
2014-02-22 13:12:34,082 DEBUG [mondrian.sql] 152: , exec 1 ms
2014-02-22 13:12:34,083 DEBUG [mondrian.sql] 152: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:34,086 DEBUG [mondrian.mdx] 2158: with member [Product].[BigSeller] as 'IIf(([Product].[Drink].[Alcoholic Beverages].[Beer and Wine] > 100), "Yes", "No")'
select {[Product].[BigSeller], [Product].Children} ON COLUMNS,
  {[Store].[USA].[CA].Children} ON ROWS
from [Sales]

2014-02-22 13:12:34,087 DEBUG [mondrian.sql] 153: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:12:34,088 DEBUG [mondrian.sql] 153: , exec 0 ms
2014-02-22 13:12:34,088 DEBUG [mondrian.sql] 153: , exec+fetch 1 ms, 3 rows
2014-02-22 13:12:34,094 DEBUG [mondrian.sql] 154: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_state`) from `store`]
2014-02-22 13:12:34,095 DEBUG [mondrian.sql] 154: , exec 0 ms
2014-02-22 13:12:34,095 DEBUG [mondrian.sql] 154: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:34,096 DEBUG [mondrian.sql] 155: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_city`) from `store`]
2014-02-22 13:12:34,097 DEBUG [mondrian.sql] 155: , exec 0 ms
2014-02-22 13:12:34,098 DEBUG [mondrian.sql] 155: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:34,100 DEBUG [mondrian.sql] 156: Segment.load: executing sql [select `store`.`store_state` as `c0`, `store`.`store_city` as `c1`, `time_by_day`.`the_year` as `c2`, `product_class`.`product_family` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` = 'CA' and `store`.`store_city` in ('Alameda', 'Beverly Hills', 'Los Angeles', 'San Diego', 'San Francisco') and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `store`.`store_state`, `store`.`store_city`, `time_by_day`.`the_year`, `product_class`.`product_family`]
2014-02-22 13:12:34,104 DEBUG [mondrian.sql] 157: Segment.load: executing sql [select `store`.`store_state` as `c0`, `store`.`store_city` as `c1`, `time_by_day`.`the_year` as `c2`, `product_class`.`product_family` as `c3`, `product_class`.`product_department` as `c4`, `product_class`.`product_category` as `c5`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` = 'CA' and `store`.`store_city` in ('Alameda', 'Beverly Hills', 'Los Angeles', 'San Diego', 'San Francisco') and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Alcoholic Beverages' and `product_class`.`product_category` = 'Beer and Wine' group by `store`.`store_state`, `store`.`store_city`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`]
2014-02-22 13:12:34,159 DEBUG [mondrian.sql] 157: , exec 53 ms
2014-02-22 13:12:34,160 DEBUG [mondrian.sql] 157: , exec+fetch 55 ms, 4 rows
2014-02-22 13:12:35,391 DEBUG [mondrian.sql] 156: , exec 1289 ms
2014-02-22 13:12:35,392 DEBUG [mondrian.sql] 156: , exec+fetch 1291 ms, 12 rows
2014-02-22 13:12:35,393 DEBUG [mondrian.mdx] 2158: exec: 1307 ms
2014-02-22 13:12:35,396 DEBUG [mondrian.mdx] 2166: with member [Store].[x] as '1'
  member [Product].[x] as '1'
select {[Store].[x]} ON COLUMNS
from [Sales]

2014-02-22 13:12:35,397 DEBUG [mondrian.mdx] 2166: exec: 1 ms
2014-02-22 13:12:35,400 DEBUG [mondrian.mdx] 2172: with member [Product].[x] as '1'
  member [Store].[x] as '1'
select {[Store].[x]} ON COLUMNS
from [Sales]

2014-02-22 13:12:35,401 DEBUG [mondrian.mdx] 2172: exec: 1 ms
2014-02-22 13:12:35,405 DEBUG [mondrian.mdx] 2178: with member [Product].[x] as '1'
  member [Store].[x] as '1'
select {[Store].[x]} ON COLUMNS
from [Sales]

2014-02-22 13:12:35,406 DEBUG [mondrian.mdx] 2178: exec: 1 ms
2014-02-22 13:12:35,408 DEBUG [mondrian.mdx] 2184: with member [Measures].[Foo] as '"a string"'
select {[Measures].[Foo]} ON COLUMNS
from [Sales]

2014-02-22 13:12:35,409 DEBUG [mondrian.mdx] 2184: exec: 1 ms
2014-02-22 13:12:35,412 DEBUG [mondrian.mdx] 2190: with member [Measures].[Foo] as '1234'
select {[Measures].[Foo]} ON COLUMNS
from [Sales]

2014-02-22 13:12:35,413 DEBUG [mondrian.mdx] 2190: exec: 1 ms
2014-02-22 13:12:35,415 DEBUG [mondrian.mdx] 2202: with member [Product].[X] as '[Product].[Y]'
  member [Product].[Y] as '[Product].[X]'
select {[Product].[X]} ON COLUMNS,
  {[Store].[Store Name].Members} ON ROWS
from [Sales]

2014-02-22 13:12:35,417 DEBUG [mondrian.sql] 158: SqlTupleReader.readTuples [[Store].[Store Name]]: executing sql [select `store`.`store_country` as `c0`, `store`.`store_state` as `c1`, `store`.`store_city` as `c2`, `store`.`store_name` as `c3`, `store`.`store_type` as `c4`, `store`.`store_manager` as `c5`, `store`.`store_sqft` as `c6`, `store`.`grocery_sqft` as `c7`, `store`.`frozen_sqft` as `c8`, `store`.`meat_sqft` as `c9`, `store`.`coffee_bar` as `c10`, `store`.`store_street_address` as `c11` from `store` as `store` group by `store`.`store_country`, `store`.`store_state`, `store`.`store_city`, `store`.`store_name`, `store`.`store_type`, `store`.`store_manager`, `store`.`store_sqft`, `store`.`grocery_sqft`, `store`.`frozen_sqft`, `store`.`meat_sqft`, `store`.`coffee_bar`, `store`.`store_street_address` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC, ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC, ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC, ISNULL(`store`.`store_name`) ASC, `store`.`store_name` ASC]
2014-02-22 13:12:35,419 DEBUG [mondrian.sql] 158: , exec 1 ms
2014-02-22 13:12:35,420 DEBUG [mondrian.sql] 158: , exec+fetch 3 ms, 25 rows
2014-02-22 13:12:35,423 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[Y]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ([Store].[Canada].[BC].[Vancouver].[Store 19], [Product].[X]), ([Store].[Canada].[BC].[Vancouver].[Store 19]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,427 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[Y]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ([Store].[Canada].[BC].[Victoria].[Store 20], [Product].[X]), ([Store].[Canada].[BC].[Victoria].[Store 20]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,430 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[Y]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ([Store].[Mexico].[DF].[Mexico City].[Store 9], [Product].[X]), ([Store].[Mexico].[DF].[Mexico City].[Store 9]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,438 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[Y]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ([Store].[Mexico].[DF].[San Andres].[Store 21], [Product].[X]), ([Store].[Mexico].[DF].[San Andres].[Store 21]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,442 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[Y]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1], [Product].[X]), ([Store].[Mexico].[Guerrero].[Acapulco].[Store 1]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,446 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[Y]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5], [Product].[X]), ([Store].[Mexico].[Jalisco].[Guadalajara].[Store 5]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,453 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[Y]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10], [Product].[X]), ([Store].[Mexico].[Veracruz].[Orizaba].[Store 10]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,456 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[Y]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8], [Product].[X]), ([Store].[Mexico].[Yucatan].[Merida].[Store 8]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,460 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Camacho].[Store 4]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,466 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 12]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,470 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[Y]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18], [Product].[X]), ([Store].[Mexico].[Zacatecas].[Hidalgo].[Store 18]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,474 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[Y]), ([Store].[USA].[CA].[Alameda].[HQ]), ([Store].[USA].[CA].[Alameda].[HQ], [Product].[X]), ([Store].[USA].[CA].[Alameda].[HQ]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,477 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[Y]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ([Store].[USA].[CA].[Beverly Hills].[Store 6], [Product].[X]), ([Store].[USA].[CA].[Beverly Hills].[Store 6]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,481 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[Y]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ([Store].[USA].[CA].[Los Angeles].[Store 7], [Product].[X]), ([Store].[USA].[CA].[Los Angeles].[Store 7]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,484 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[Y]), ([Store].[USA].[CA].[San Diego].[Store 24]), ([Store].[USA].[CA].[San Diego].[Store 24], [Product].[X]), ([Store].[USA].[CA].[San Diego].[Store 24]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,489 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[Y]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ([Store].[USA].[CA].[San Francisco].[Store 14], [Product].[X]), ([Store].[USA].[CA].[San Francisco].[Store 14]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,491 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[Y]), ([Store].[USA].[OR].[Portland].[Store 11]), ([Store].[USA].[OR].[Portland].[Store 11], [Product].[X]), ([Store].[USA].[OR].[Portland].[Store 11]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,497 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[Y]), ([Store].[USA].[OR].[Salem].[Store 13]), ([Store].[USA].[OR].[Salem].[Store 13], [Product].[X]), ([Store].[USA].[OR].[Salem].[Store 13]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,500 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[Y]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ([Store].[USA].[WA].[Bellingham].[Store 2], [Product].[X]), ([Store].[USA].[WA].[Bellingham].[Store 2]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,507 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[Y]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ([Store].[USA].[WA].[Bremerton].[Store 3], [Product].[X]), ([Store].[USA].[WA].[Bremerton].[Store 3]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,513 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[Y]), ([Store].[USA].[WA].[Seattle].[Store 15]), ([Store].[USA].[WA].[Seattle].[Store 15], [Product].[X]), ([Store].[USA].[WA].[Seattle].[Store 15]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,516 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[Y]), ([Store].[USA].[WA].[Spokane].[Store 16]), ([Store].[USA].[WA].[Spokane].[Store 16], [Product].[X]), ([Store].[USA].[WA].[Spokane].[Store 16]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,520 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[Y]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ([Store].[USA].[WA].[Tacoma].[Store 17], [Product].[X]), ([Store].[USA].[WA].[Tacoma].[Store 17]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,523 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[Y]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ([Store].[USA].[WA].[Walla Walla].[Store 22], [Product].[X]), ([Store].[USA].[WA].[Walla Walla].[Store 22]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,526 WARN  [mondrian.olap.ResultBase] Mondrian: exception in executeStripe.
mondrian.olap.fun.MondrianEvaluationException: Infinite loop while evaluating calculated member '[Product].[Y]'; context stack is {([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[Y]), ([Store].[USA].[WA].[Yakima].[Store 23]), ([Store].[USA].[WA].[Yakima].[Store 23], [Product].[X]), ([Store].[USA].[WA].[Yakima].[Store 23]), ()}
	at mondrian.olap.fun.FunUtil.newEvalException(FunUtil.java:83)
	at mondrian.rolap.RolapEvaluator.checkRecursion(RolapEvaluator.java:765)
	at mondrian.rolap.RolapEvaluator.setExpanding(RolapEvaluator.java:709)
	at mondrian.rolap.RolapMemberBase.setContextIn(RolapMemberBase.java:1078)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:684)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.calc.impl.MemberValueCalc.evaluate(MemberValueCalc.java:100)
	at mondrian.rolap.RolapEvaluator.evaluateCurrent(RolapEvaluator.java:688)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1051)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeStripe(RolapResult.java:1201)
	at mondrian.rolap.RolapResult.executeBody(RolapResult.java:913)
	at mondrian.rolap.RolapResult.<init>(RolapResult.java:470)
	at mondrian.rolap.RolapConnection.executeInternal(RolapConnection.java:672)
	at mondrian.rolap.RolapConnection.access$000(RolapConnection.java:52)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:623)
	at mondrian.rolap.RolapConnection$1.call(RolapConnection.java:621)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2014-02-22 13:12:35,529 DEBUG [mondrian.mdx] 2202: exec: 113 ms
2014-02-22 13:12:35,532 DEBUG [mondrian.sql] 159: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`quarter` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and UPPER(`time_by_day`.`quarter`) = UPPER('Q4') group by `time_by_day`.`quarter` order by ISNULL(`time_by_day`.`quarter`) ASC, `time_by_day`.`quarter` ASC]
2014-02-22 13:12:35,562 DEBUG [mondrian.sql] 159: , exec 29 ms
2014-02-22 13:12:35,563 DEBUG [mondrian.sql] 159: , exec+fetch 31 ms, 1 rows
2014-02-22 13:12:35,693 DEBUG [mondrian.mdx] 2210: with member [Measures].[Foo] as '[Time].[1997].[Q4]'
select {[Measures].[Foo]} ON COLUMNS
from [Sales]

2014-02-22 13:12:35,696 DEBUG [mondrian.sql] 160: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q4' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`]
2014-02-22 13:12:35,861 DEBUG [mondrian.sql] 160: , exec 163 ms
2014-02-22 13:12:35,862 DEBUG [mondrian.sql] 160: , exec+fetch 165 ms, 1 rows
2014-02-22 13:12:35,863 DEBUG [mondrian.mdx] 2210: exec: 170 ms
2014-02-22 13:12:35,871 DEBUG [mondrian.sql] 161: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`quarter` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) and UPPER(`time_by_day`.`quarter`) = UPPER('Q3') group by `time_by_day`.`quarter` order by ISNULL(`time_by_day`.`quarter`) ASC, `time_by_day`.`quarter` ASC]
2014-02-22 13:12:35,879 DEBUG [mondrian.sql] 161: , exec 7 ms
2014-02-22 13:12:35,880 DEBUG [mondrian.sql] 161: , exec+fetch 9 ms, 1 rows
2014-02-22 13:12:35,882 DEBUG [mondrian.sql] 162: SqlTupleReader.readTuples [[Store].[Store Country]]: executing sql [select `store`.`store_country` as `c0` from `store` as `store` group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:12:35,884 DEBUG [mondrian.sql] 162: , exec 1 ms
2014-02-22 13:12:35,884 DEBUG [mondrian.sql] 162: , exec+fetch 2 ms, 3 rows
2014-02-22 13:12:35,886 DEBUG [mondrian.mdx] 2238: with member [Measures].[ProfitPercent] as '(([Measures].[Store Sales] - [Measures].[Store Cost]) / [Measures].[Store Cost])', FORMAT_STRING = "#.00%", SOLVE_ORDER = 1
  member [Time].[1997].[First Half] as '([Time].[1997].[Q1] + [Time].[1997].[Q2])'
  member [Time].[1997].[Second Half] as '([Time].[1997].[Q3] + [Time].[1997].[Q4])'
select {[Time].[1997].[First Half], [Time].[1997].[Second Half], [Time].[1997].Children} ON COLUMNS,
  {[Store].[USA].Children} ON ROWS
from [Sales]
where [Measures].[ProfitPercent]

2014-02-22 13:12:35,895 DEBUG [mondrian.sql] 163: Segment.load: executing sql [select `store`.`store_state` as `c0`, `time_by_day`.`the_year` as `c1`, `time_by_day`.`quarter` as `c2`, sum(`sales_fact_1997`.`store_cost`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` in ('CA', 'OR', 'WA') and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_state`, `time_by_day`.`the_year`, `time_by_day`.`quarter`]
2014-02-22 13:12:36,200 DEBUG [mondrian.sql] 163: , exec 302 ms
2014-02-22 13:12:36,201 DEBUG [mondrian.sql] 163: , exec+fetch 305 ms, 12 rows
2014-02-22 13:12:36,203 DEBUG [mondrian.mdx] 2238: exec: 317 ms
2014-02-22 13:12:36,208 DEBUG [mondrian.mdx] 2252: with member [Measures].[Accumulated Sales] as 'Sum(Ytd(), [Measures].[Store Sales])'
select {[Measures].[Store Sales], [Measures].[Accumulated Sales]} ON COLUMNS,
  {Descendants([Time].[1997], [Time].[Month])} ON ROWS
from [Warehouse and Sales]

2014-02-22 13:12:36,210 DEBUG [mondrian.sql] 164: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`quarter` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`the_year` = 1997) group by `time_by_day`.`quarter` order by ISNULL(`time_by_day`.`quarter`) ASC, `time_by_day`.`quarter` ASC]
2014-02-22 13:12:36,211 DEBUG [mondrian.sql] 164: , exec 0 ms
2014-02-22 13:12:36,211 DEBUG [mondrian.sql] 164: , exec+fetch 1 ms, 4 rows
2014-02-22 13:12:36,212 DEBUG [mondrian.sql] 165: SqlTupleReader.readTuples [[Time].[Month]]: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`month_of_year` as `c2` from `time_by_day` as `time_by_day` where (`time_by_day`.`quarter` in ('Q1', 'Q2', 'Q3', 'Q4') and `time_by_day`.`the_year` = 1997) group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC, ISNULL(`time_by_day`.`quarter`) ASC, `time_by_day`.`quarter` ASC, ISNULL(`time_by_day`.`month_of_year`) ASC, `time_by_day`.`month_of_year` ASC]
2014-02-22 13:12:36,218 DEBUG [mondrian.sql] 165: , exec 4 ms
2014-02-22 13:12:36,219 DEBUG [mondrian.sql] 165: , exec+fetch 7 ms, 12 rows
2014-02-22 13:12:36,241 DEBUG [mondrian.mdx] 2252: exec: 33 ms
2014-02-22 13:12:36,244 DEBUG [mondrian.sql] 166: SqlMemberSource.getMemberChildren: executing sql [select `warehouse`.`warehouse_country` as `c0` from `warehouse` as `warehouse` where UPPER(`warehouse`.`warehouse_country`) = UPPER('USA') group by `warehouse`.`warehouse_country` order by ISNULL(`warehouse`.`warehouse_country`) ASC, `warehouse`.`warehouse_country` ASC]
2014-02-22 13:12:36,250 DEBUG [mondrian.sql] 166: , exec 5 ms
2014-02-22 13:12:36,250 DEBUG [mondrian.sql] 166: , exec+fetch 6 ms, 1 rows
2014-02-22 13:12:36,254 DEBUG [mondrian.mdx] 2268: select Crossjoin({[Warehouse].DefaultMember, [Warehouse].[USA].Children}, {[Measures].[Unit Sales], [Measures].[Store Sales], [Measures].[Units Shipped]}) ON COLUMNS,
  [Time].Children ON ROWS
from [Warehouse and Sales]

2014-02-22 13:12:36,256 DEBUG [mondrian.sql] 167: SqlMemberSource.getMemberChildren: executing sql [select `warehouse`.`warehouse_state_province` as `c0` from `warehouse` as `warehouse` where (`warehouse`.`warehouse_country` = 'USA') group by `warehouse`.`warehouse_state_province` order by ISNULL(`warehouse`.`warehouse_state_province`) ASC, `warehouse`.`warehouse_state_province` ASC]
2014-02-22 13:12:36,257 DEBUG [mondrian.sql] 167: , exec 1 ms
2014-02-22 13:12:36,258 DEBUG [mondrian.sql] 167: , exec+fetch 2 ms, 3 rows
2014-02-22 13:12:36,264 DEBUG [mondrian.sql] 168: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `quarter`) from `time_by_day`]
2014-02-22 13:12:36,264 DEBUG [mondrian.sql] 168: , exec 0 ms
2014-02-22 13:12:36,265 DEBUG [mondrian.sql] 168: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:36,265 DEBUG [mondrian.sql] 169: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `warehouse_state_province`) from `warehouse`]
2014-02-22 13:12:36,266 DEBUG [mondrian.sql] 169: , exec 0 ms
2014-02-22 13:12:36,267 DEBUG [mondrian.sql] 169: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:36,269 DEBUG [mondrian.sql] 170: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year`, `time_by_day`.`quarter`]
2014-02-22 13:12:36,272 DEBUG [mondrian.sql] 171: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, sum(`inventory_fact_1997`.`units_shipped`) as `m0` from `time_by_day` as `time_by_day`, `inventory_fact_1997` as `inventory_fact_1997` where `inventory_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year`, `time_by_day`.`quarter`]
2014-02-22 13:12:36,274 DEBUG [mondrian.sql] 172: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `warehouse`.`warehouse_state_province` as `c2`, sum(`inventory_fact_1997`.`units_shipped`) as `m0` from `time_by_day` as `time_by_day`, `inventory_fact_1997` as `inventory_fact_1997`, `warehouse` as `warehouse` where `inventory_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `inventory_fact_1997`.`warehouse_id` = `warehouse`.`warehouse_id` and `warehouse`.`warehouse_state_province` in ('CA', 'OR', 'WA') group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `warehouse`.`warehouse_state_province`]
2014-02-22 13:12:36,321 DEBUG [mondrian.sql] 172: , exec 46 ms
2014-02-22 13:12:36,323 DEBUG [mondrian.sql] 172: , exec+fetch 49 ms, 12 rows
2014-02-22 13:12:36,334 DEBUG [mondrian.sql] 171: , exec 60 ms
2014-02-22 13:12:36,335 DEBUG [mondrian.sql] 171: , exec+fetch 62 ms, 4 rows
2014-02-22 13:12:36,939 DEBUG [mondrian.sql] 170: , exec 668 ms
2014-02-22 13:12:36,941 DEBUG [mondrian.sql] 170: , exec+fetch 670 ms, 4 rows
2014-02-22 13:12:36,944 DEBUG [mondrian.mdx] 2268: exec: 690 ms
2014-02-22 13:12:36,950 DEBUG [mondrian.mdx] 2280: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Store], [Store].Children} ON ROWS
from [Sales]

2014-02-22 13:12:36,951 DEBUG [mondrian.sql] 173: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:12:36,952 DEBUG [mondrian.sql] 173: , exec 0 ms
2014-02-22 13:12:36,952 DEBUG [mondrian.sql] 173: , exec+fetch 1 ms, 3 rows
2014-02-22 13:12:36,954 DEBUG [mondrian.sql] 174: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_country`) from `store`]
2014-02-22 13:12:36,955 DEBUG [mondrian.sql] 174: , exec 0 ms
2014-02-22 13:12:36,955 DEBUG [mondrian.sql] 174: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:36,957 DEBUG [mondrian.sql] 175: Segment.load: executing sql [select `store`.`store_country` as `c0`, `time_by_day`.`the_year` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_country`, `time_by_day`.`the_year`]
2014-02-22 13:12:37,126 DEBUG [mondrian.sql] 175: , exec 168 ms
2014-02-22 13:12:37,127 DEBUG [mondrian.sql] 175: , exec+fetch 170 ms, 1 rows
2014-02-22 13:12:37,128 DEBUG [mondrian.mdx] 2280: exec: 178 ms
2014-02-22 13:12:37,132 DEBUG [mondrian.mdx] 2303: select {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS,
  Crossjoin({[Promotion Media].[Radio], [Promotion Media].[TV], [Promotion Media].[Sunday Paper], [Promotion Media].[Street Handout]}, [Product].[Drink].Children) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:37,141 DEBUG [mondrian.sql] 176: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `promotion`.`media_type` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_cost`) as `m1`, sum(`sales_fact_1997`.`store_sales`) as `m2` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` in ('Alcoholic Beverages', 'Beverages', 'Dairy') and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` in ('Radio', 'Street Handout', 'Sunday Paper', 'TV') group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `promotion`.`media_type`]
2014-02-22 13:12:37,256 DEBUG [mondrian.sql] 176: , exec 115 ms
2014-02-22 13:12:37,258 DEBUG [mondrian.sql] 176: , exec+fetch 117 ms, 12 rows
2014-02-22 13:12:37,260 DEBUG [mondrian.mdx] 2303: exec: 128 ms
2014-02-22 13:12:37,266 DEBUG [mondrian.mdx] 2323: select Crossjoin({[Measures].[Unit Sales], [Measures].[Store Sales]}, {[Promotion Media].[Radio], [Promotion Media].[TV], [Promotion Media].[Sunday Paper], [Promotion Media].[Street Handout]}) ON COLUMNS,
  [Product].[Drink].Children ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:37,270 DEBUG [mondrian.mdx] 2323: exec: 4 ms
2014-02-22 13:12:37,278 DEBUG [mondrian.mdx] 2335: select {[Measures].[Unit Sales], [Measures].[Store Sales]} ON COLUMNS,
  Order([Product].[Product Department].Members, [Measures].[Store Sales], DESC) ON ROWS
from [Sales]

2014-02-22 13:12:37,294 DEBUG [mondrian.mdx] 2335: exec: 16 ms
2014-02-22 13:12:37,299 DEBUG [mondrian.mdx] 2347: select [Product].[Drink].Children ON COLUMNS
from [Sales]
where ([Measures].[Unit Sales], [Promotion Media].[Street Handout], [Time].[1997])

2014-02-22 13:12:37,301 DEBUG [mondrian.mdx] 2347: exec: 1 ms
2014-02-22 13:12:37,308 DEBUG [mondrian.mdx] 2369: select Crossjoin({[Measures].[Unit Sales], [Measures].[Store Sales]}, {[Promotion Media].[Radio], [Promotion Media].[TV], [Promotion Media].[Sunday Paper], [Promotion Media].[Street Handout]}) ON COLUMNS,
  NON EMPTY Crossjoin([Product].[Drink].Children, [Customers].[USA].[WA].Children) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:37,311 DEBUG [mondrian.sql] 177: SqlTupleReader.readTuples [[Product].[Product Department], [Customers].[City]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `customer`.`country` as `c2`, `customer`.`state_province` as `c3`, `customer`.`city` as `c4` from `product` as `product`, `product_class` as `product_class`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer`, `promotion` as `promotion` where `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and (`promotion`.`media_type` in ('Radio', 'TV', 'Sunday Paper', 'Street Handout')) and (`product_class`.`product_family` = 'Drink') and (`customer`.`state_province` = 'WA') group by `product_class`.`product_family`, `product_class`.`product_department`, `customer`.`country`, `customer`.`state_province`, `customer`.`city` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC, ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC, ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:12:37,507 DEBUG [mondrian.sql] 177: , exec 195 ms
2014-02-22 13:12:37,510 DEBUG [mondrian.sql] 177: , exec+fetch 199 ms, 57 rows
2014-02-22 13:12:37,564 DEBUG [mondrian.sql] 178: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `promotion`.`media_type` as `c3`, `customer`.`state_province` as `c4`, `customer`.`city` as `c5`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` in ('Alcoholic Beverages', 'Beverages', 'Dairy') and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` in ('Radio', 'Street Handout', 'Sunday Paper', 'TV') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`state_province` = 'WA' and `customer`.`city` in ('Anacortes', 'Ballard', 'Bremerton', 'Burien', 'Edmonds', 'Everett', 'Issaquah', 'Kirkland', 'Lynnwood', 'Marysville', 'Olympia', 'Port Orchard', 'Puyallup', 'Redmond', 'Renton', 'Seattle', 'Sedro Woolley', 'Spokane', 'Tacoma', 'Walla Walla', 'Yakima') group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `promotion`.`media_type`, `customer`.`state_province`, `customer`.`city`]
2014-02-22 13:12:37,716 DEBUG [mondrian.sql] 178: , exec 152 ms
2014-02-22 13:12:37,719 DEBUG [mondrian.sql] 178: , exec+fetch 155 ms, 81 rows
2014-02-22 13:12:37,769 DEBUG [mondrian.mdx] 2369: exec: 461 ms
2014-02-22 13:12:37,792 DEBUG [mondrian.mdx] 2379: select from [Sales]
where ([Measures].[Store Sales], [Time].[1997], [Promotion Media].[TV])

2014-02-22 13:12:37,796 DEBUG [mondrian.sql] 179: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `promotion`.`media_type` as `c1`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` = 'TV' group by `time_by_day`.`the_year`, `promotion`.`media_type`]
2014-02-22 13:12:37,842 DEBUG [mondrian.sql] 179: , exec 45 ms
2014-02-22 13:12:37,844 DEBUG [mondrian.sql] 179: , exec+fetch 47 ms, 1 rows
2014-02-22 13:12:37,845 DEBUG [mondrian.mdx] 2379: exec: 53 ms
2014-02-22 13:12:37,850 DEBUG [mondrian.mdx] 2389: select {[Measures].[Unit Sales], [Measures].[Store Sales]} ON COLUMNS,
  {[Gender].[M]} ON ROWS
from [Sales]

2014-02-22 13:12:37,853 DEBUG [mondrian.sql] 180: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`gender` as `c1`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`gender` = 'M' group by `time_by_day`.`the_year`, `customer`.`gender`]
2014-02-22 13:12:38,397 DEBUG [mondrian.sql] 180: , exec 543 ms
2014-02-22 13:12:38,398 DEBUG [mondrian.sql] 180: , exec+fetch 544 ms, 1 rows
2014-02-22 13:12:38,398 DEBUG [mondrian.mdx] 2389: exec: 548 ms
2014-02-22 13:12:38,403 DEBUG [mondrian.mdx] 2401: with member [Measures].[USales] as '[Measures].[Unit Sales]', format_string = IIf(([Measures].[Unit Sales] > 50000), "\<b\>#.00\<\/b\>", "\<i\>#.00\<\/i\>")
select {[Measures].[USales]} ON COLUMNS,
  {[Store Type].Members} ON ROWS
from [Sales]

2014-02-22 13:12:38,405 DEBUG [mondrian.sql] 181: SqlTupleReader.readTuples [[Store Type].[Store Type]]: executing sql [select `store`.`store_type` as `c0` from `store` as `store` group by `store`.`store_type` order by ISNULL(`store`.`store_type`) ASC, `store`.`store_type` ASC]
2014-02-22 13:12:38,408 DEBUG [mondrian.sql] 181: , exec 1 ms
2014-02-22 13:12:38,409 DEBUG [mondrian.sql] 181: , exec+fetch 3 ms, 6 rows
2014-02-22 13:12:38,413 DEBUG [mondrian.sql] 182: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_type`) from `store`]
2014-02-22 13:12:38,415 DEBUG [mondrian.sql] 182: , exec 1 ms
2014-02-22 13:12:38,419 DEBUG [mondrian.sql] 182: , exec+fetch 6 ms, 1 rows
2014-02-22 13:12:38,428 DEBUG [mondrian.sql] 183: Segment.load: executing sql [select `store`.`store_type` as `c0`, `time_by_day`.`the_year` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_type`, `time_by_day`.`the_year`]
2014-02-22 13:12:38,822 DEBUG [mondrian.sql] 183: , exec 394 ms
2014-02-22 13:12:38,824 DEBUG [mondrian.sql] 183: , exec+fetch 396 ms, 5 rows
2014-02-22 13:12:38,826 DEBUG [mondrian.mdx] 2401: exec: 423 ms
2014-02-22 13:12:38,831 DEBUG [mondrian.mdx] 2412: with member [Measures].[_Foo] as '[Measures].[Store Sales]', format_string = "$#,##0.00;($#,##0.00);ZERO;NULL;Nil"
select {[Measures].[_Foo]} ON COLUMNS,
  {[Customers].[Country].Members} ON ROWS
from [Sales]

2014-02-22 13:12:38,832 DEBUG [mondrian.sql] 184: SqlTupleReader.readTuples [[Customers].[Country]]: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:12:38,865 DEBUG [mondrian.sql] 184: , exec 33 ms
2014-02-22 13:12:38,866 DEBUG [mondrian.sql] 184: , exec+fetch 34 ms, 3 rows
2014-02-22 13:12:38,869 DEBUG [mondrian.sql] 185: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `country`) from `customer`]
2014-02-22 13:12:38,890 DEBUG [mondrian.sql] 185: , exec 20 ms
2014-02-22 13:12:38,891 DEBUG [mondrian.sql] 185: , exec+fetch 22 ms, 1 rows
2014-02-22 13:12:38,893 DEBUG [mondrian.sql] 186: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`country` as `c1`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `customer`.`country`]
2014-02-22 13:12:39,425 DEBUG [mondrian.sql] 186: , exec 531 ms
2014-02-22 13:12:39,427 DEBUG [mondrian.sql] 186: , exec+fetch 533 ms, 1 rows
2014-02-22 13:12:39,428 DEBUG [mondrian.mdx] 2412: exec: 597 ms
2014-02-22 13:12:39,431 DEBUG [mondrian.mdx] 2419: with member [Measures].[Foo] as 'NULL', format_string = "a;b;c;d"
select {[Measures].[Foo]} ON COLUMNS
from [Sales]

2014-02-22 13:12:39,432 DEBUG [mondrian.mdx] 2419: exec: 1 ms
2014-02-22 13:12:39,436 DEBUG [mondrian.mdx] 2425: with member [Measures].[formatTest] as '0.000001', FORMAT_STRING = "#.##;(#.##)"
select {[Measures].[formatTest]} ON COLUMNS
from [Sales]

2014-02-22 13:12:39,437 DEBUG [mondrian.mdx] 2425: exec: 1 ms
2014-02-22 13:12:39,448 DEBUG [mondrian.mdx] 2451: with member [Measures].[USales] as '[Measures].[Unit Sales]', format_string = IIf(([Measures].[Sales Count] > 30), "#.00 good", "#.00 bad")
select {[Measures].[USales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS,
  Crossjoin({[Promotion Media].[Radio], [Promotion Media].[TV], [Promotion Media].[Sunday Paper], [Promotion Media].[Street Handout]}, [Product].[Drink].Children) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:39,455 DEBUG [mondrian.sql] 187: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `promotion`.`media_type` as `c3`, count(`sales_fact_1997`.`product_id`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` in ('Alcoholic Beverages', 'Beverages', 'Dairy') and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` in ('Radio', 'Street Handout', 'Sunday Paper', 'TV') group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `promotion`.`media_type`]
2014-02-22 13:12:39,573 DEBUG [mondrian.sql] 187: , exec 117 ms
2014-02-22 13:12:39,575 DEBUG [mondrian.sql] 187: , exec+fetch 120 ms, 12 rows
2014-02-22 13:12:39,577 DEBUG [mondrian.mdx] 2451: exec: 129 ms
2014-02-22 13:12:39,583 DEBUG [mondrian.mdx] 2465: with member [Measures].[xxx] as '[Measures].[Store Sales]', format_string = IIf(([Measures].[Unit Sales] > 100000), "AAA######.00", "BBB###.00")
select {[Measures].[xxx]} ON COLUMNS,
  {[Product].Children} ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:39,586 DEBUG [mondrian.mdx] 2465: exec: 3 ms
2014-02-22 13:12:39,591 DEBUG [mondrian.mdx] 2477: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Gender].Children} ON ROWS
from [Sales]
where ([Time].[1997], [Customers])

2014-02-22 13:12:39,592 DEBUG [mondrian.sql] 188: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`gender` as `c0` from `customer` as `customer` group by `customer`.`gender` order by ISNULL(`customer`.`gender`) ASC, `customer`.`gender` ASC]
2014-02-22 13:12:39,592 DEBUG [mondrian.sql] 188: , exec 0 ms
2014-02-22 13:12:39,593 DEBUG [mondrian.sql] 188: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:39,594 DEBUG [mondrian.mdx] 2477: exec: 3 ms
2014-02-22 13:12:39,611 DEBUG [mondrian.mdx] 2489: select {[Measures].[Customer Count]} ON COLUMNS,
  {([Promotion Media].[All Media], [Product].[All Products])} ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:39,614 DEBUG [mondrian.sql] 189: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, count(distinct `sales_fact_1997`.`customer_id`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year`]
2014-02-22 13:12:40,027 DEBUG [mondrian.sql] 189: , exec 413 ms
2014-02-22 13:12:40,029 DEBUG [mondrian.sql] 189: , exec+fetch 414 ms, 1 rows
2014-02-22 13:12:40,029 DEBUG [mondrian.mdx] 2489: exec: 418 ms
2014-02-22 13:12:40,033 DEBUG [mondrian.mdx] 2502: select {[Measures].Members} ON COLUMNS,
  {[Store Type].Members} ON ROWS
from [Store]
where [Store].[USA].[CA]

2014-02-22 13:12:40,034 DEBUG [mondrian.sql] 190: SqlTupleReader.readTuples [[Store Type].[Store Type]]: executing sql [select `store`.`store_type` as `c0` from `store` as `store` group by `store`.`store_type` order by ISNULL(`store`.`store_type`) ASC, `store`.`store_type` ASC]
2014-02-22 13:12:40,035 DEBUG [mondrian.sql] 190: , exec 0 ms
2014-02-22 13:12:40,036 DEBUG [mondrian.sql] 190: , exec+fetch 2 ms, 6 rows
2014-02-22 13:12:40,039 DEBUG [mondrian.sql] 191: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_state`) from `store`]
2014-02-22 13:12:40,039 DEBUG [mondrian.sql] 191: , exec 0 ms
2014-02-22 13:12:40,040 DEBUG [mondrian.sql] 191: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:40,041 DEBUG [mondrian.sql] 192: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_type`) from `store`]
2014-02-22 13:12:40,041 DEBUG [mondrian.sql] 192: , exec 0 ms
2014-02-22 13:12:40,043 DEBUG [mondrian.sql] 192: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:40,045 DEBUG [mondrian.sql] 193: Segment.load: executing sql [select `store`.`store_state` as `c0`, sum(`store`.`store_sqft`) as `m0`, sum(`store`.`grocery_sqft`) as `m1`, count(*) as `m2` from `store` as `store` where `store`.`store_state` = 'CA' group by `store`.`store_state`]
2014-02-22 13:12:40,045 DEBUG [mondrian.sql] 194: Segment.load: executing sql [select `store`.`store_type` as `c0`, `store`.`store_state` as `c1`, sum(`store`.`store_sqft`) as `m0`, sum(`store`.`grocery_sqft`) as `m1`, count(*) as `m2` from `store` as `store` where `store`.`store_state` = 'CA' group by `store`.`store_type`, `store`.`store_state`]
2014-02-22 13:12:40,046 DEBUG [mondrian.sql] 193: , exec 1 ms
2014-02-22 13:12:40,047 DEBUG [mondrian.sql] 194: , exec 1 ms
2014-02-22 13:12:40,048 DEBUG [mondrian.sql] 193: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:40,049 DEBUG [mondrian.sql] 194: , exec+fetch 4 ms, 4 rows
2014-02-22 13:12:40,050 DEBUG [mondrian.mdx] 2502: exec: 17 ms
2014-02-22 13:12:40,057 DEBUG [mondrian.sql] 195: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_department` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_family` = 'Drink') and UPPER(`product_class`.`product_department`) = UPPER('Beverages') group by `product_class`.`product_department` order by ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC]
2014-02-22 13:12:40,058 DEBUG [mondrian.sql] 195: , exec 1 ms
2014-02-22 13:12:40,059 DEBUG [mondrian.sql] 195: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:40,060 DEBUG [mondrian.sql] 196: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_category` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_department` = 'Beverages' and `product_class`.`product_family` = 'Drink') and UPPER(`product_class`.`product_category`) = UPPER('Drinks') group by `product_class`.`product_category` order by ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC]
2014-02-22 13:12:40,061 DEBUG [mondrian.sql] 196: , exec 1 ms
2014-02-22 13:12:40,062 DEBUG [mondrian.sql] 196: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:40,062 DEBUG [mondrian.sql] 197: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_subcategory` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_category` = 'Drinks' and `product_class`.`product_department` = 'Beverages' and `product_class`.`product_family` = 'Drink') and UPPER(`product_class`.`product_subcategory`) = UPPER('Flavored Drinks') group by `product_class`.`product_subcategory` order by ISNULL(`product_class`.`product_subcategory`) ASC, `product_class`.`product_subcategory` ASC]
2014-02-22 13:12:40,064 DEBUG [mondrian.sql] 197: , exec 1 ms
2014-02-22 13:12:40,064 DEBUG [mondrian.sql] 197: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:40,065 DEBUG [mondrian.mdx] 2512: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Product].[Drink].[Beverages].[Drinks].[Flavored Drinks].Children} ON ROWS
from [Sales]

2014-02-22 13:12:40,070 DEBUG [mondrian.mdx] 2512: exec: 5 ms
2014-02-22 13:12:40,076 DEBUG [mondrian.mdx] 2530: select {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS,
  ToggleDrillState({([Promotion Media].[Radio], [Product].[Drink].[Beverages].[Drinks].[Flavored Drinks])}, {[Product].[Drink].[Beverages].[Drinks].[Flavored Drinks]}) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:40,082 DEBUG [mondrian.sql] 198: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `product_class`.`product_category` as `c3`, `product_class`.`product_subcategory` as `c4`, `promotion`.`media_type` as `c5`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_cost`) as `m1`, sum(`sales_fact_1997`.`store_sales`) as `m2` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Beverages' and `product_class`.`product_category` = 'Drinks' and `product_class`.`product_subcategory` = 'Flavored Drinks' and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` = 'Radio' group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `promotion`.`media_type`]
2014-02-22 13:12:40,083 DEBUG [mondrian.sql] 199: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `product_class`.`product_category` as `c3`, `product_class`.`product_subcategory` as `c4`, `product`.`brand_name` as `c5`, `promotion`.`media_type` as `c6`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_cost`) as `m1`, sum(`sales_fact_1997`.`store_sales`) as `m2` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Beverages' and `product_class`.`product_category` = 'Drinks' and `product_class`.`product_subcategory` = 'Flavored Drinks' and `product`.`brand_name` in ('Excellent', 'Fabulous', 'Skinner', 'Token', 'Washington') and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` = 'Radio' group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`, `promotion`.`media_type`]
2014-02-22 13:12:40,095 DEBUG [mondrian.sql] 198: , exec 12 ms
2014-02-22 13:12:40,097 DEBUG [mondrian.sql] 198: , exec+fetch 14 ms, 1 rows
2014-02-22 13:12:40,099 DEBUG [mondrian.sql] 199: , exec 15 ms
2014-02-22 13:12:40,100 DEBUG [mondrian.sql] 199: , exec+fetch 17 ms, 1 rows
2014-02-22 13:12:40,101 DEBUG [mondrian.mdx] 2530: exec: 24 ms
2014-02-22 13:12:40,107 DEBUG [mondrian.sql] 200: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_department` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_family` = 'Drink') and UPPER(`product_class`.`product_department`) = UPPER('Dairy') group by `product_class`.`product_department` order by ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC]
2014-02-22 13:12:40,109 DEBUG [mondrian.sql] 200: , exec 1 ms
2014-02-22 13:12:40,110 DEBUG [mondrian.sql] 200: , exec+fetch 3 ms, 1 rows
2014-02-22 13:12:40,112 DEBUG [mondrian.sql] 201: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('OR') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:12:40,113 DEBUG [mondrian.sql] 201: , exec 1 ms
2014-02-22 13:12:40,114 DEBUG [mondrian.sql] 201: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:40,116 DEBUG [mondrian.sql] 202: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('WA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:12:40,118 DEBUG [mondrian.sql] 202: , exec 1 ms
2014-02-22 13:12:40,118 DEBUG [mondrian.sql] 202: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:40,123 DEBUG [mondrian.mdx] 2584: select {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS,
  Order({([Store].[USA].[CA], [Product].[Drink].[Alcoholic Beverages]), ([Store].[USA].[CA], [Product].[Drink].[Beverages]), Crossjoin({[Store].[USA].[CA].Children}, {[Product].[Drink].[Beverages]}), ([Store].[USA].[CA], [Product].[Drink].[Dairy]), ([Store].[USA].[OR], [Product].[Drink].[Alcoholic Beverages]), ([Store].[USA].[OR], [Product].[Drink].[Beverages]), ([Store].[USA].[OR], [Product].[Drink].[Dairy]), ([Store].[USA].[WA], [Product].[Drink].[Alcoholic Beverages]), ([Store].[USA].[WA], [Product].[Drink].[Beverages]), ([Store].[USA].[WA], [Product].[Drink].[Dairy])}, [Measures].[Store Cost], BDESC) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:40,129 DEBUG [mondrian.sql] 203: Segment.load: executing sql [select `store`.`store_state` as `c0`, `time_by_day`.`the_year` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, sum(`sales_fact_1997`.`store_cost`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` in ('CA', 'OR', 'WA') and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` in ('Alcoholic Beverages', 'Beverages', 'Dairy') group by `store`.`store_state`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:12:40,129 DEBUG [mondrian.sql] 204: Segment.load: executing sql [select `store`.`store_state` as `c0`, `store`.`store_city` as `c1`, `time_by_day`.`the_year` as `c2`, `product_class`.`product_family` as `c3`, `product_class`.`product_department` as `c4`, sum(`sales_fact_1997`.`store_cost`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` = 'CA' and `store`.`store_city` in ('Alameda', 'Beverly Hills', 'Los Angeles', 'San Diego', 'San Francisco') and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Beverages' group by `store`.`store_state`, `store`.`store_city`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:12:40,206 DEBUG [mondrian.sql] 204: , exec 76 ms
2014-02-22 13:12:40,208 DEBUG [mondrian.sql] 204: , exec+fetch 79 ms, 4 rows
2014-02-22 13:12:40,348 DEBUG [mondrian.sql] 203: , exec 218 ms
2014-02-22 13:12:40,349 DEBUG [mondrian.sql] 203: , exec+fetch 220 ms, 9 rows
2014-02-22 13:12:40,356 DEBUG [mondrian.sql] 205: Segment.load: executing sql [select `store`.`store_state` as `c0`, `time_by_day`.`the_year` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` in ('CA', 'OR', 'WA') and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` in ('Alcoholic Beverages', 'Beverages', 'Dairy') group by `store`.`store_state`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:12:40,357 DEBUG [mondrian.sql] 206: Segment.load: executing sql [select `store`.`store_state` as `c0`, `store`.`store_city` as `c1`, `time_by_day`.`the_year` as `c2`, `product_class`.`product_family` as `c3`, `product_class`.`product_department` as `c4`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` = 'CA' and `store`.`store_city` in ('Alameda', 'Beverly Hills', 'Los Angeles', 'San Diego', 'San Francisco') and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Beverages' group by `store`.`store_state`, `store`.`store_city`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`]
2014-02-22 13:12:40,446 DEBUG [mondrian.sql] 206: , exec 88 ms
2014-02-22 13:12:40,449 DEBUG [mondrian.sql] 206: , exec+fetch 92 ms, 4 rows
2014-02-22 13:12:40,626 DEBUG [mondrian.sql] 205: , exec 269 ms
2014-02-22 13:12:40,627 DEBUG [mondrian.sql] 205: , exec+fetch 271 ms, 9 rows
2014-02-22 13:12:40,629 DEBUG [mondrian.mdx] 2584: exec: 505 ms
2014-02-22 13:12:40,638 DEBUG [mondrian.sql] 207: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('San Diego') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:12:40,639 DEBUG [mondrian.sql] 207: , exec 0 ms
2014-02-22 13:12:40,639 DEBUG [mondrian.sql] 207: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:40,643 DEBUG [mondrian.sql] 208: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Beverly Hills') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:12:40,645 DEBUG [mondrian.sql] 208: , exec 1 ms
2014-02-22 13:12:40,646 DEBUG [mondrian.sql] 208: , exec+fetch 3 ms, 1 rows
2014-02-22 13:12:40,648 DEBUG [mondrian.sql] 209: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('San Francisco') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:12:40,650 DEBUG [mondrian.sql] 209: , exec 1 ms
2014-02-22 13:12:40,650 DEBUG [mondrian.sql] 209: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:40,653 DEBUG [mondrian.mdx] 2654: select {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS,
  Order({([Store].[USA].[WA], [Product].[Drink].[Beverages]), ([Store].[USA].[CA], [Product].[Drink].[Beverages]), ([Store].[USA].[OR], [Product].[Drink].[Beverages]), ([Store].[USA].[WA], [Product].[Drink].[Alcoholic Beverages]), ([Store].[USA].[CA], [Product].[Drink].[Alcoholic Beverages]), ([Store].[USA].[OR], [Product].[Drink].[Alcoholic Beverages]), ([Store].[USA].[WA], [Product].[Drink].[Dairy]), ([Store].[USA].[CA].[San Diego], [Product].[Drink].[Beverages]), ([Store].[USA].[CA].[Los Angeles], [Product].[Drink].[Beverages]), Crossjoin({[Store].[USA].[CA].[Los Angeles]}, {[Product].[Drink].[Beverages].Children}), ([Store].[USA].[CA].[Beverly Hills], [Product].[Drink].[Beverages]), ([Store].[USA].[CA], [Product].[Drink].[Dairy]), ([Store].[USA].[OR], [Product].[Drink].[Dairy]), ([Store].[USA].[CA].[San Francisco], [Product].[Drink].[Beverages])}, [Measures].[Store Cost], BDESC) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:40,657 DEBUG [mondrian.sql] 210: Segment.load: executing sql [select `store`.`store_state` as `c0`, `store`.`store_city` as `c1`, `time_by_day`.`the_year` as `c2`, `product_class`.`product_family` as `c3`, `product_class`.`product_department` as `c4`, `product_class`.`product_category` as `c5`, sum(`sales_fact_1997`.`store_cost`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` = 'CA' and `store`.`store_city` = 'Los Angeles' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Beverages' and `product_class`.`product_category` in ('Carbonated Beverages', 'Drinks', 'Hot Beverages', 'Pure Juice Beverages') group by `store`.`store_state`, `store`.`store_city`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`]
2014-02-22 13:12:40,706 DEBUG [mondrian.sql] 210: , exec 48 ms
2014-02-22 13:12:40,707 DEBUG [mondrian.sql] 210: , exec+fetch 50 ms, 4 rows
2014-02-22 13:12:40,717 DEBUG [mondrian.sql] 211: Segment.load: executing sql [select `store`.`store_state` as `c0`, `store`.`store_city` as `c1`, `time_by_day`.`the_year` as `c2`, `product_class`.`product_family` as `c3`, `product_class`.`product_department` as `c4`, `product_class`.`product_category` as `c5`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_sales`) as `m1` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` = 'CA' and `store`.`store_city` = 'Los Angeles' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Beverages' and `product_class`.`product_category` in ('Carbonated Beverages', 'Drinks', 'Hot Beverages', 'Pure Juice Beverages') group by `store`.`store_state`, `store`.`store_city`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`]
2014-02-22 13:12:40,765 DEBUG [mondrian.sql] 211: , exec 47 ms
2014-02-22 13:12:40,766 DEBUG [mondrian.sql] 211: , exec+fetch 49 ms, 4 rows
2014-02-22 13:12:40,768 DEBUG [mondrian.mdx] 2654: exec: 115 ms
2014-02-22 13:12:40,773 DEBUG [mondrian.mdx] 2672: select {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS,
  Order(TopCount({[Product].[Product Category].Members}, 10.0, [Measures].[Unit Sales]), [Measures].[Store Sales], ASC) ON ROWS
from [Sales]
where [Time].[1997]

2014-02-22 13:12:40,776 DEBUG [mondrian.sql] 212: SqlTupleReader.readTuples [[Product].[Product Category]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `product_class`.`product_category` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `c3` from `product` as `product`, `product_class` as `product_class`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category` order by sum(`sales_fact_1997`.`unit_sales`) DESC, ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC]
2014-02-22 13:12:42,930 DEBUG [mondrian.sql] 212: , exec 2154 ms
2014-02-22 13:12:42,932 DEBUG [mondrian.sql] 212: , exec+fetch 2156 ms, 10 rows
2014-02-22 13:12:42,938 DEBUG [mondrian.sql] 213: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `product_class`.`product_category` as `c3`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Food' and `product_class`.`product_department` in ('Baked Goods', 'Baking Goods', 'Canned Foods', 'Dairy', 'Deli', 'Frozen Foods', 'Produce', 'Snack Foods') and `product_class`.`product_category` in ('Baking Goods', 'Bread', 'Canned Soup', 'Dairy', 'Fruit', 'Jams and Jellies', 'Meat', 'Snack Foods', 'Vegetables') group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`]
2014-02-22 13:12:44,076 DEBUG [mondrian.sql] 213: , exec 1137 ms
2014-02-22 13:12:44,079 DEBUG [mondrian.sql] 213: , exec+fetch 1141 ms, 12 rows
2014-02-22 13:12:44,091 DEBUG [mondrian.sql] 214: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `product_class`.`product_category` as `c3`, sum(`sales_fact_1997`.`store_cost`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Food' and `product_class`.`product_department` in ('Baked Goods', 'Baking Goods', 'Canned Foods', 'Dairy', 'Deli', 'Frozen Foods', 'Produce', 'Snack Foods') and `product_class`.`product_category` in ('Baking Goods', 'Bread', 'Canned Soup', 'Dairy', 'Fruit', 'Jams and Jellies', 'Meat', 'Snack Foods', 'Vegetables') group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`]
2014-02-22 13:12:45,219 DEBUG [mondrian.sql] 214: , exec 1128 ms
2014-02-22 13:12:45,221 DEBUG [mondrian.sql] 214: , exec+fetch 1130 ms, 12 rows
2014-02-22 13:12:45,223 DEBUG [mondrian.mdx] 2672: exec: 4450 ms
2014-02-22 13:12:45,403 DEBUG [mondrian.sql] 215: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,404 DEBUG [mondrian.sql] 215: , exec 0 ms
2014-02-22 13:12:45,405 DEBUG [mondrian.sql] 215: , exec+fetch 2 ms, 2 rows
2014-02-22 13:12:45,407 DEBUG [mondrian.sql] 216: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,408 DEBUG [mondrian.sql] 216: , exec 0 ms
2014-02-22 13:12:45,408 DEBUG [mondrian.sql] 216: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:45,431 DEBUG [mondrian.sql] 217: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,433 DEBUG [mondrian.sql] 217: , exec 1 ms
2014-02-22 13:12:45,434 DEBUG [mondrian.sql] 217: , exec+fetch 2 ms, 2 rows
2014-02-22 13:12:45,434 DEBUG [mondrian.sql] 218: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,435 DEBUG [mondrian.sql] 218: , exec 0 ms
2014-02-22 13:12:45,436 DEBUG [mondrian.sql] 218: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:45,474 DEBUG [mondrian.sql] 219: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,474 DEBUG [mondrian.sql] 219: , exec 0 ms
2014-02-22 13:12:45,475 DEBUG [mondrian.sql] 219: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:45,476 DEBUG [mondrian.sql] 220: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,476 DEBUG [mondrian.sql] 220: , exec 0 ms
2014-02-22 13:12:45,477 DEBUG [mondrian.sql] 220: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:45,493 DEBUG [mondrian.sql] 221: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:12:45,494 DEBUG [mondrian.sql] 221: , exec 0 ms
2014-02-22 13:12:45,494 DEBUG [mondrian.sql] 221: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,495 DEBUG [mondrian.sql] 222: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:12:45,496 DEBUG [mondrian.sql] 222: , exec 0 ms
2014-02-22 13:12:45,497 DEBUG [mondrian.sql] 222: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:45,498 DEBUG [mondrian.sql] 223: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:12:45,499 DEBUG [mondrian.sql] 223: , exec 0 ms
2014-02-22 13:12:45,499 DEBUG [mondrian.sql] 223: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,501 DEBUG [mondrian.sql] 224: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:12:45,501 DEBUG [mondrian.sql] 224: , exec 0 ms
2014-02-22 13:12:45,502 DEBUG [mondrian.sql] 224: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,503 DEBUG [mondrian.sql] 225: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:12:45,503 DEBUG [mondrian.sql] 225: , exec 0 ms
2014-02-22 13:12:45,504 DEBUG [mondrian.sql] 225: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,505 DEBUG [mondrian.sql] 226: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:12:45,505 DEBUG [mondrian.sql] 226: , exec 0 ms
2014-02-22 13:12:45,506 DEBUG [mondrian.sql] 226: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,675 DEBUG [mondrian.sql] 227: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,676 DEBUG [mondrian.sql] 227: , exec 0 ms
2014-02-22 13:12:45,677 DEBUG [mondrian.sql] 227: , exec+fetch 2 ms, 2 rows
2014-02-22 13:12:45,683 DEBUG [mondrian.sql] 228: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,684 DEBUG [mondrian.sql] 228: , exec 1 ms
2014-02-22 13:12:45,685 DEBUG [mondrian.sql] 228: , exec+fetch 2 ms, 2 rows
2014-02-22 13:12:45,711 DEBUG [mondrian.sql] 229: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,713 DEBUG [mondrian.sql] 229: , exec 1 ms
2014-02-22 13:12:45,714 DEBUG [mondrian.sql] 229: , exec+fetch 3 ms, 2 rows
2014-02-22 13:12:45,715 DEBUG [mondrian.sql] 230: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,728 DEBUG [mondrian.sql] 230: , exec 12 ms
2014-02-22 13:12:45,729 DEBUG [mondrian.sql] 230: , exec+fetch 14 ms, 2 rows
2014-02-22 13:12:45,775 DEBUG [mondrian.sql] 231: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,777 DEBUG [mondrian.sql] 231: , exec 0 ms
2014-02-22 13:12:45,777 DEBUG [mondrian.sql] 231: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:45,778 DEBUG [mondrian.sql] 232: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:45,780 DEBUG [mondrian.sql] 232: , exec 1 ms
2014-02-22 13:12:45,781 DEBUG [mondrian.sql] 232: , exec+fetch 3 ms, 2 rows
2014-02-22 13:12:45,795 DEBUG [mondrian.sql] 233: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:12:45,795 DEBUG [mondrian.sql] 233: , exec 0 ms
2014-02-22 13:12:45,796 DEBUG [mondrian.sql] 233: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,796 DEBUG [mondrian.sql] 234: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:12:45,797 DEBUG [mondrian.sql] 234: , exec 0 ms
2014-02-22 13:12:45,798 DEBUG [mondrian.sql] 234: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,799 DEBUG [mondrian.sql] 235: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:12:45,799 DEBUG [mondrian.sql] 235: , exec 0 ms
2014-02-22 13:12:45,800 DEBUG [mondrian.sql] 235: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,801 DEBUG [mondrian.sql] 236: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:12:45,802 DEBUG [mondrian.sql] 236: , exec 0 ms
2014-02-22 13:12:45,803 DEBUG [mondrian.sql] 236: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:45,804 DEBUG [mondrian.sql] 237: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:12:45,804 DEBUG [mondrian.sql] 237: , exec 0 ms
2014-02-22 13:12:45,804 DEBUG [mondrian.sql] 237: , exec+fetch 0 ms, 1 rows
2014-02-22 13:12:45,806 DEBUG [mondrian.sql] 238: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:12:45,806 DEBUG [mondrian.sql] 238: , exec 0 ms
2014-02-22 13:12:45,807 DEBUG [mondrian.sql] 238: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:45,809 DEBUG [mondrian.mdx] 3025: select {[Gender2].Members} ON COLUMNS
from [Sales]

2014-02-22 13:12:45,811 DEBUG [mondrian.sql] 239: SqlTupleReader.readTuples [[Gender2].[Gender]]: executing sql [select `gender2`.`gender` as `c0` from (SELECT * FROM customer) as `gender2` group by `gender2`.`gender` order by ISNULL(`gender2`.`gender`) ASC, `gender2`.`gender` ASC]
2014-02-22 13:12:45,875 DEBUG [mondrian.sql] 239: , exec 64 ms
2014-02-22 13:12:45,877 DEBUG [mondrian.sql] 239: , exec+fetch 66 ms, 2 rows
2014-02-22 13:12:45,881 DEBUG [mondrian.sql] 240: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `the_year`) from `time_by_day`]
2014-02-22 13:12:45,882 DEBUG [mondrian.sql] 240: , exec 0 ms
2014-02-22 13:12:45,883 DEBUG [mondrian.sql] 240: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:45,885 DEBUG [mondrian.sql] 241: SqlStatisticsProvider.getQueryCardinality: executing sql [select count(*) from (select distinct `gender2`.`gender` as `c0` from (SELECT * FROM customer) as `gender2`) as `init`]
2014-02-22 13:12:45,943 DEBUG [mondrian.sql] 241: , exec 58 ms
2014-02-22 13:12:45,946 DEBUG [mondrian.sql] 241: , exec+fetch 61 ms, 1 rows
2014-02-22 13:12:45,949 DEBUG [mondrian.sql] 242: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year`]
2014-02-22 13:12:45,950 DEBUG [mondrian.sql] 242: , exec 0 ms
2014-02-22 13:12:45,954 DEBUG [mondrian.sql] 242: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:45,955 DEBUG [mondrian.sql] 243: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `gender2`.`gender` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, (SELECT * FROM customer) as `gender2` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `gender2`.`customer_id` group by `time_by_day`.`the_year`, `gender2`.`gender`]
2014-02-22 13:12:47,369 DEBUG [mondrian.sql] 243: , exec 1413 ms
2014-02-22 13:12:47,373 DEBUG [mondrian.sql] 243: , exec+fetch 1418 ms, 2 rows
2014-02-22 13:12:47,374 DEBUG [mondrian.mdx] 3025: exec: 1565 ms
2014-02-22 13:12:47,571 DEBUG [mondrian.sql] 244: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:47,572 DEBUG [mondrian.sql] 244: , exec 0 ms
2014-02-22 13:12:47,573 DEBUG [mondrian.sql] 244: , exec+fetch 2 ms, 2 rows
2014-02-22 13:12:47,576 DEBUG [mondrian.sql] 245: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:47,577 DEBUG [mondrian.sql] 245: , exec 0 ms
2014-02-22 13:12:47,578 DEBUG [mondrian.sql] 245: , exec+fetch 2 ms, 2 rows
2014-02-22 13:12:47,603 DEBUG [mondrian.sql] 246: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:47,604 DEBUG [mondrian.sql] 246: , exec 0 ms
2014-02-22 13:12:47,605 DEBUG [mondrian.sql] 246: , exec+fetch 2 ms, 2 rows
2014-02-22 13:12:47,606 DEBUG [mondrian.sql] 247: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:47,606 DEBUG [mondrian.sql] 247: , exec 0 ms
2014-02-22 13:12:47,607 DEBUG [mondrian.sql] 247: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:47,665 DEBUG [mondrian.sql] 248: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:47,666 DEBUG [mondrian.sql] 248: , exec 0 ms
2014-02-22 13:12:47,666 DEBUG [mondrian.sql] 248: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:47,667 DEBUG [mondrian.sql] 249: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:12:47,667 DEBUG [mondrian.sql] 249: , exec 0 ms
2014-02-22 13:12:47,668 DEBUG [mondrian.sql] 249: , exec+fetch 1 ms, 2 rows
2014-02-22 13:12:47,694 DEBUG [mondrian.sql] 250: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:12:47,695 DEBUG [mondrian.sql] 250: , exec 1 ms
2014-02-22 13:12:47,696 DEBUG [mondrian.sql] 250: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:47,698 DEBUG [mondrian.sql] 251: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:12:47,698 DEBUG [mondrian.sql] 251: , exec 0 ms
2014-02-22 13:12:47,699 DEBUG [mondrian.sql] 251: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:47,700 DEBUG [mondrian.sql] 252: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:12:47,701 DEBUG [mondrian.sql] 252: , exec 0 ms
2014-02-22 13:12:47,702 DEBUG [mondrian.sql] 252: , exec+fetch 2 ms, 1 rows
2014-02-22 13:12:47,703 DEBUG [mondrian.sql] 253: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:12:47,704 DEBUG [mondrian.sql] 253: , exec 0 ms
2014-02-22 13:12:47,704 DEBUG [mondrian.sql] 253: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:47,705 DEBUG [mondrian.sql] 254: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:12:47,706 DEBUG [mondrian.sql] 254: , exec 0 ms
2014-02-22 13:12:47,706 DEBUG [mondrian.sql] 254: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:47,708 DEBUG [mondrian.sql] 255: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:12:47,708 DEBUG [mondrian.sql] 255: , exec 0 ms
2014-02-22 13:12:47,709 DEBUG [mondrian.sql] 255: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:47,710 DEBUG [mondrian.sql] 256: SqlTupleReader.readTuples [[ProdAmbiguousLevelName].[Drink]]: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:12:47,711 DEBUG [mondrian.sql] 256: , exec 0 ms
2014-02-22 13:12:47,712 DEBUG [mondrian.sql] 256: , exec+fetch 1 ms, 3 rows
2014-02-22 13:12:47,714 DEBUG [mondrian.mdx] 3207: with member [ProdAmbiguousLevelName].[Drink].[Drink].[calc] as '1'
select {[ProdAmbiguousLevelName].[Drink].[Drink].[calc]} ON COLUMNS
from [Sales]

2014-02-22 13:12:47,717 DEBUG [mondrian.mdx] 3207: exec: 3 ms
2014-02-22 13:12:47,720 DEBUG [mondrian.mdx] 3213: with member [ProdAmbiguousLevelName].[Drink].[Drink].[calc] as '1'
select {[ProdAmbiguousLevelName].[Drink].[Drink].[calc]} ON COLUMNS
from [Sales]

2014-02-22 13:12:47,723 DEBUG [mondrian.mdx] 3213: exec: 3 ms
2014-02-22 13:12:47,724 DEBUG [mondrian.sql] 257: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and UPPER(`product_class`.`product_family`) = UPPER('Drink') group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:12:47,725 DEBUG [mondrian.sql] 257: , exec 0 ms
2014-02-22 13:12:47,726 DEBUG [mondrian.sql] 257: , exec+fetch 1 ms, 1 rows
2014-02-22 13:12:47,727 DEBUG [mondrian.mdx] 3219: with member [ProdAmbiguousLevelName].[Drink].[Drink].[calc] as '1'
select {[ProdAmbiguousLevelName].[Drink].[Drink].[calc]} ON COLUMNS
from [Sales]

2014-02-22 13:12:47,729 DEBUG [mondrian.mdx] 3219: exec: 2 ms
2014-02-22 13:12:47,731 DEBUG [mondrian.mdx] 3225: with member [ProdAmbiguousLevelName].[Drink].[Drink].[calc] as '1'
select {[ProdAmbiguousLevelName].[Drink].[Drink].[calc]} ON COLUMNS
from [Sales]

2014-02-22 13:12:47,734 DEBUG [mondrian.mdx] 3225: exec: 3 ms
2014-02-22 13:12:47,738 DEBUG [mondrian.mdx] 3235: select {[Measures].[Unit Sales], [Measures].[Customer Count]} ON COLUMNS,
  {[Gender].Members} ON ROWS
from [Sales]

2014-02-22 13:12:47,744 DEBUG [mondrian.sql] 258: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`gender` as `c1`, count(distinct `sales_fact_1997`.`customer_id`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `customer`.`gender`]
2014-02-22 13:12:48,356 DEBUG [mondrian.sql] 258: , exec 611 ms
2014-02-22 13:12:48,358 DEBUG [mondrian.sql] 258: , exec+fetch 613 ms, 2 rows
2014-02-22 13:12:48,359 DEBUG [mondrian.mdx] 3235: exec: 621 ms
2014-02-22 13:12:48,363 DEBUG [mondrian.sql] 259: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`month_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`quarter` = 'Q1' and `time_by_day`.`the_year` = 1997) and `time_by_day`.`month_of_year` = 1 group by `time_by_day`.`month_of_year` order by ISNULL(`time_by_day`.`month_of_year`) ASC, `time_by_day`.`month_of_year` ASC]
2014-02-22 13:12:48,365 DEBUG [mondrian.sql] 259: , exec 2 ms
2014-02-22 13:12:48,366 DEBUG [mondrian.sql] 259: , exec+fetch 3 ms, 1 rows
2014-02-22 13:12:48,368 DEBUG [mondrian.mdx] 3245: select NON EMPTY {[Time].[1997].[Q1].[1]} ON COLUMNS,
  {[Measures].[Unit Sales], [Measures].[Customer Count]} ON ROWS
from [Sales]

2014-02-22 13:12:48,372 DEBUG [mondrian.sql] 260: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`month_of_year` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, count(distinct `sales_fact_1997`.`customer_id`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`]
2014-02-22 13:12:48,422 DEBUG [mondrian.sql] 260: , exec 49 ms
2014-02-22 13:12:48,423 DEBUG [mondrian.sql] 260: , exec+fetch 51 ms, 1 rows
2014-02-22 13:12:48,423 DEBUG [mondrian.mdx] 3245: exec: 54 ms
2014-02-22 13:12:48,426 DEBUG [mondrian.mdx] 3255: select NON EMPTY {[Time].[1997].[Q1].[1]} ON COLUMNS,
  {[Measures].[Unit Sales], [Measures].[Customer Count]} ON ROWS
from [Sales]

2014-02-22 13:12:48,430 DEBUG [mondrian.sql] 261: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`month_of_year` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, count(distinct `sales_fact_1997`.`customer_id`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`]
2014-02-22 13:12:48,431 DEBUG [mondrian.sql] 261: , exec 0 ms
2014-02-22 13:12:48,433 DEBUG [mondrian.sql] 261: , exec+fetch 3 ms, 1 rows
2014-02-22 13:12:48,435 DEBUG [mondrian.mdx] 3255: exec: 9 ms
2014-02-22 13:12:48,438 DEBUG [mondrian.mdx] 3263: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Store Size in SQFT].Members} ON ROWS
from [Sales]

2014-02-22 13:12:48,440 DEBUG [mondrian.sql] 262: SqlTupleReader.readTuples [[Store Size in SQFT].[Store Sqft]]: executing sql [select `store`.`store_sqft` as `c0` from `store` as `store` group by `store`.`store_sqft` order by ISNULL(`store`.`store_sqft`) ASC, `store`.`store_sqft` ASC]
2014-02-22 13:12:48,441 DEBUG [mondrian.sql] 262: , exec 1 ms
2014-02-22 13:12:48,443 DEBUG [mondrian.sql] 262: , exec+fetch 3 ms, 21 rows
2014-02-22 13:12:48,447 DEBUG [mondrian.sql] 263: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_sqft`) from `store`]
2014-02-22 13:12:48,449 DEBUG [mondrian.sql] 263: , exec 1 ms
2014-02-22 13:12:48,450 DEBUG [mondrian.sql] 263: , exec+fetch 3 ms, 1 rows
2014-02-22 13:12:48,454 DEBUG [mondrian.sql] 264: Segment.load: executing sql [select `store`.`store_sqft` as `c0`, `time_by_day`.`the_year` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_sqft`, `time_by_day`.`the_year`]
2014-02-22 13:12:48,567 DEBUG [mondrian.sql] 264: , exec 112 ms
2014-02-22 13:12:48,568 DEBUG [mondrian.sql] 264: , exec+fetch 114 ms, 11 rows
2014-02-22 13:12:48,570 DEBUG [mondrian.mdx] 3263: exec: 132 ms
2014-02-22 13:12:48,575 DEBUG [mondrian.sql] 265: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('Foo') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:12:48,576 DEBUG [mondrian.sql] 265: , exec 1 ms
2014-02-22 13:12:48,576 DEBUG [mondrian.sql] 265: , exec+fetch 1 ms, 0 rows
2014-02-22 13:12:48,578 DEBUG [mondrian.mdx] 3278: select {[Measures].[Unit Sales]} ON COLUMNS,
  NON EMPTY Crossjoin(Descendants([Product].[All Products], [Product].[Product Family]), Descendants([Store].[#null], [Store].[Store State])) ON ROWS
from [Sales]

2014-02-22 13:12:48,580 DEBUG [mondrian.sql] 266: SqlTupleReader.readTuples [[Product].[Product Family], [Store].[Store State]]: executing sql [select `product_class`.`product_family` as `c0`, `store`.`store_country` as `c1`, `store`.`store_state` as `c2` from `product` as `product`, `product_class` as `product_class`, `sales_fact_1997` as `sales_fact_1997`, `store` as `store` where `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`store_id` = `store`.`store_id` and (1 = 0) group by `product_class`.`product_family`, `store`.`store_country`, `store`.`store_state` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC, ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:12:48,581 DEBUG [mondrian.sql] 266: , exec 0 ms
2014-02-22 13:12:48,581 DEBUG [mondrian.sql] 266: , exec+fetch 1 ms, 0 rows
2014-02-22 13:12:48,582 DEBUG [mondrian.mdx] 3278: exec: 4 ms
2014-02-22 13:12:48,587 DEBUG [mondrian.sql] 267: SqlMemberSource.getMemberChildren: executing sql [select `promotion`.`media_type` as `c0` from `promotion` as `promotion` where UPPER(`promotion`.`media_type`) = UPPER('Daily Paper') group by `promotion`.`media_type` order by ISNULL(`promotion`.`media_type`) ASC, `promotion`.`media_type` ASC]
2014-02-22 13:12:48,591 DEBUG [mondrian.sql] 267: , exec 3 ms
2014-02-22 13:12:48,591 DEBUG [mondrian.sql] 267: , exec+fetch 4 ms, 1 rows
2014-02-22 13:12:48,593 DEBUG [mondrian.mdx] 3298: with member [Measures].[Radio Unit Sales] as '([Measures].[Unit Sales], [Promotion Media].[Radio])'
select {[Measures].[Unit Sales], [Measures].[Radio Unit Sales]} ON COLUMNS,
  Filter([Product].[Product Department].Members, ([Promotion Media].[Radio] > 50)) ON ROWS
from [Sales]
where ([Promotion Media].[Daily Paper], [Time].[1997].[Q1])

2014-02-22 13:12:48,596 DEBUG [mondrian.sql] 268: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `promotion`.`media_type` as `c4`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` = 'Radio' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `promotion`.`media_type`]
2014-02-22 13:12:49,651 DEBUG [mondrian.sql] 268: , exec 1053 ms
2014-02-22 13:12:49,653 DEBUG [mondrian.sql] 268: , exec+fetch 1056 ms, 20 rows
2014-02-22 13:12:49,658 DEBUG [mondrian.sql] 269: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `promotion`.`media_type` as `c4`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `promotion` as `promotion` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Food' and `product_class`.`product_department` in ('Produce', 'Snack Foods') and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `promotion`.`media_type` = 'Daily Paper' group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`, `product_class`.`product_department`, `promotion`.`media_type`]
2014-02-22 13:12:49,928 DEBUG [mondrian.sql] 269: , exec 269 ms
2014-02-22 13:12:49,929 DEBUG [mondrian.sql] 269: , exec+fetch 271 ms, 2 rows
2014-02-22 13:12:49,929 DEBUG [mondrian.mdx] 3298: exec: 1336 ms
2014-02-22 13:12:49,932 DEBUG [mondrian.mdx] 3306: select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Customers].Members} ON ROWS
from [Sales]

2014-02-22 13:12:49,934 DEBUG [mondrian.sql] 270: SqlTupleReader.readTuples [[Customers].[State Province]]: executing sql [select `customer`.`country` as `c0`, `customer`.`state_province` as `c1` from `customer` as `customer` group by `customer`.`country`, `customer`.`state_province` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC, ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:12:49,962 DEBUG [mondrian.sql] 270: , exec 27 ms
2014-02-22 13:12:49,963 DEBUG [mondrian.sql] 270: , exec+fetch 29 ms, 13 rows
2014-02-22 13:12:49,964 DEBUG [mondrian.sql] 271: SqlTupleReader.readTuples [[Customers].[City]]: executing sql [select `customer`.`country` as `c0`, `customer`.`state_province` as `c1`, `customer`.`city` as `c2` from `customer` as `customer` group by `customer`.`country`, `customer`.`state_province`, `customer`.`city` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC, ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC, ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:12:49,999 DEBUG [mondrian.sql] 271: , exec 34 ms
2014-02-22 13:12:50,004 DEBUG [mondrian.sql] 271: , exec+fetch 40 ms, 109 rows
2014-02-22 13:12:50,005 DEBUG [mondrian.sql] 272: SqlTupleReader.readTuples [[Customers].[Name]]: executing sql [select `customer`.`country` as `c0`, `customer`.`state_province` as `c1`, `customer`.`city` as `c2`, `customer`.`customer_id` as `c3`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) as `c4`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) as `c5`, `customer`.`gender` as `c6`, `customer`.`marital_status` as `c7`, `customer`.`education` as `c8`, `customer`.`yearly_income` as `c9` from `customer` as `customer` group by `customer`.`country`, `customer`.`state_province`, `customer`.`city`, `customer`.`customer_id`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`), `customer`.`gender`, `customer`.`marital_status`, `customer`.`education`, `customer`.`yearly_income` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC, ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC, ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC, ISNULL(CONCAT(`customer`.`fname`, ' ', `customer`.`lname`)) ASC, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) ASC]
2014-02-22 13:12:50,129 DEBUG [mondrian.sql] 272: , exec 123 ms
2014-02-22 13:12:51,399 DEBUG [mondrian.sql] 272: , exec+fetch 1394 ms, 10281 rows
2014-02-22 13:12:52,619 DEBUG [mondrian.sql] 273: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `customer_id`) from `customer`]
2014-02-22 13:12:52,630 DEBUG [mondrian.sql] 273: , exec 10 ms
2014-02-22 13:12:52,630 DEBUG [mondrian.sql] 273: , exec+fetch 11 ms, 1 rows
2014-02-22 13:12:53,110 DEBUG [mondrian.sql] 274: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`country` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `customer`.`country`]
2014-02-22 13:12:53,210 DEBUG [mondrian.sql] 275: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`customer_id` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `customer`.`customer_id`]
2014-02-22 13:12:53,232 DEBUG [mondrian.sql] 276: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`state_province` as `c1`, `customer`.`city` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `customer`.`state_province`, `customer`.`city`]
2014-02-22 13:12:53,259 DEBUG [mondrian.sql] 277: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`state_province` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `customer`.`state_province`]
2014-02-22 13:12:54,030 DEBUG [mondrian.sql] 275: , exec 819 ms
2014-02-22 13:12:54,071 DEBUG [mondrian.sql] 275: , exec+fetch 860 ms, 5581 rows
2014-02-22 13:12:54,377 DEBUG [mondrian.sql] 274: , exec 1265 ms
2014-02-22 13:12:54,378 DEBUG [mondrian.sql] 274: , exec+fetch 1268 ms, 1 rows
2014-02-22 13:12:54,518 DEBUG [mondrian.sql] 276: , exec 1284 ms
2014-02-22 13:12:54,526 DEBUG [mondrian.sql] 276: , exec+fetch 1293 ms, 78 rows
2014-02-22 13:12:54,532 DEBUG [mondrian.sql] 277: , exec 1270 ms
2014-02-22 13:12:54,533 DEBUG [mondrian.sql] 277: , exec+fetch 1273 ms, 3 rows
2014-02-22 13:12:54,603 DEBUG [mondrian.mdx] 3306: exec: 4671 ms
2014-02-22 13:12:54,638 DEBUG [mondrian.mdx] 3366: with member [Measures].[Qualified Count] as 'Count(Filter(Descendants([Customers].CurrentMember, [Customers].[Name]), (([Measures].[Store Sales] > 10000) OR ([Measures].[Unit Sales] > 10))))'
  member [Measures].[Qualified Sales] as 'Sum(Filter(Descendants([Customers].CurrentMember, [Customers].[Name]), (([Measures].[Store Sales] > 10000) OR ([Measures].[Unit Sales] > 10))), [Measures].[Store Sales])'
select {[Measures].[Qualified Count], [Measures].[Qualified Sales]} ON COLUMNS,
  Descendants([Customers].[All Customers], [Customers].[State Province], SELF_AND_BEFORE) ON ROWS
from [Sales]

2014-02-22 13:12:54,640 DEBUG [mondrian.sql] 278: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:12:54,641 DEBUG [mondrian.sql] 278: , exec 0 ms
2014-02-22 13:12:54,643 DEBUG [mondrian.sql] 278: , exec+fetch 3 ms, 3 rows
2014-02-22 13:12:54,644 DEBUG [mondrian.sql] 279: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:12:54,669 DEBUG [mondrian.sql] 279: , exec 24 ms
2014-02-22 13:12:54,670 DEBUG [mondrian.sql] 279: , exec+fetch 26 ms, 3 rows
2014-02-22 13:12:54,677 DEBUG [mondrian.sql] 280: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`customer_id` as `c0`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) as `c1`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) as `c2`, `customer`.`gender` as `c3`, `customer`.`marital_status` as `c4`, `customer`.`education` as `c5`, `customer`.`yearly_income` as `c6` from `customer` as `customer` where (`customer`.`city` = 'Yakima' and `customer`.`state_province` = 'WA') group by `customer`.`customer_id`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`), `customer`.`gender`, `customer`.`marital_status`, `customer`.`education`, `customer`.`yearly_income` order by ISNULL(CONCAT(`customer`.`fname`, ' ', `customer`.`lname`)) ASC, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) ASC]
2014-02-22 13:12:54,695 DEBUG [mondrian.sql] 280: , exec 17 ms
2014-02-22 13:12:54,696 DEBUG [mondrian.sql] 280: , exec+fetch 19 ms, 96 rows
2014-02-22 13:12:56,508 DEBUG [mondrian.sql] 281: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `customer`.`customer_id` as `c1`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `customer`.`customer_id`]
2014-02-22 13:12:56,680 DEBUG [mondrian.sql] 281: , exec 172 ms
2014-02-22 13:12:56,705 DEBUG [mondrian.sql] 281: , exec+fetch 197 ms, 5581 rows
2014-02-22 13:12:57,122 DEBUG [mondrian.mdx] 3366: exec: 2483 ms
2014-02-22 13:12:57,132 DEBUG [mondrian.mdx] 3396: with member [Measures].[Qualified Count] as 'Count(Filter(Descendants([Customers].CurrentMember, [Customers].[Name]), (([Measures].[Store Sales] > 10000) OR ([Measures].[Unit Sales] > 10))))'
  member [Measures].[Qualified Sales] as 'Sum(Filter(Descendants([Customers].CurrentMember, [Customers].[Name]), (([Measures].[Store Sales] > 10000) OR ([Measures].[Unit Sales] > 10))), [Measures].[Store Sales])'
select {[Measures].[Qualified Count], [Measures].[Qualified Sales]} ON COLUMNS,
  Descendants([Customers].[All Customers], [Customers].[State Province], SELF_AND_BEFORE) ON ROWS
from [Sales]

2014-02-22 13:12:57,480 DEBUG [mondrian.mdx] 3396: exec: 348 ms
2014-02-22 13:12:57,488 DEBUG [mondrian.mdx] 3406: select {[Measures].[Unit Sales]} ON COLUMNS,
  Filter([Product].[Product Name].Members, (InStr(LCase([Product].CurrentMember.Name), "fruit") <> 0)) ON ROWS
from [Sales]

2014-02-22 13:12:57,526 DEBUG [mondrian.mdx] 3406: exec: 38 ms
2014-02-22 13:12:57,531 DEBUG [mondrian.mdx] 3412: with member [Measures].[x] as 'Mid("yahoo", 5, 1)'
select {[Measures].[x]} ON COLUMNS
from [Sales]

2014-02-22 13:12:57,533 DEBUG [mondrian.mdx] 3412: exec: 2 ms
2014-02-22 13:12:57,540 DEBUG [mondrian.mdx] 3434: with member [Measures].[Unit Sales Percent] as '(([Store].CurrentMember, [Measures].[Unit Sales]) / ([Store].CurrentMember.Parent, [Measures].[Unit Sales]))', FORMAT_STRING = "Percent"
select {[Measures].[Unit Sales], [Measures].[Unit Sales Percent]} ON COLUMNS,
  Order(Descendants([Store].[USA].[CA], [Store].[Store City], SELF), [Measures].[Unit Sales], ASC) ON ROWS
from [Sales]

2014-02-22 13:12:57,549 DEBUG [mondrian.sql] 282: Segment.load: executing sql [select `store`.`store_state` as `c0`, `time_by_day`.`the_year` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` = 'CA' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_state`, `time_by_day`.`the_year`]
2014-02-22 13:12:57,619 DEBUG [mondrian.sql] 282: , exec 69 ms
2014-02-22 13:12:57,620 DEBUG [mondrian.sql] 282: , exec+fetch 71 ms, 1 rows
2014-02-22 13:12:57,623 DEBUG [mondrian.mdx] 3434: exec: 82 ms
2014-02-22 13:12:57,628 DEBUG [mondrian.sql] 283: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and UPPER(`product_class`.`product_family`) = UPPER('Food') group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:12:57,632 DEBUG [mondrian.sql] 283: , exec 3 ms
2014-02-22 13:12:57,634 DEBUG [mondrian.sql] 283: , exec+fetch 6 ms, 1 rows
2014-02-22 13:12:57,639 DEBUG [mondrian.mdx] 3454: with member [Product].[Food OR Drink] as '(([Product].[Food], [Measures].[Unit Sales]) + ([Product].[Drink], [Measures].[Unit Sales]))'
select {[Measures].[Unit Sales]} ON COLUMNS,
  Descendants([Time].[1997], [Time].[Quarter], SELF_AND_BEFORE) ON ROWS
from [Sales]
where [Product].[Food OR Drink]

2014-02-22 13:12:57,644 DEBUG [mondrian.sql] 284: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `product_class`.`product_family` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` in ('Drink', 'Food') group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`]
2014-02-22 13:12:59,376 DEBUG [mondrian.sql] 284: , exec 1731 ms
2014-02-22 13:12:59,377 DEBUG [mondrian.sql] 284: , exec+fetch 1733 ms, 8 rows
2014-02-22 13:12:59,378 DEBUG [mondrian.mdx] 3454: exec: 1739 ms
2014-02-22 13:12:59,383 DEBUG [mondrian.mdx] 3468: select {[Measures].[Unit Sales]} ON COLUMNS,
  Descendants([Time].[1997], [Time].[Quarter], SELF_AND_BEFORE) ON ROWS
from [Sales]
where ([Product].[Drink], [Store].[USA])

2014-02-22 13:12:59,386 DEBUG [mondrian.sql] 285: Segment.load: executing sql [select `store`.`store_country` as `c0`, `time_by_day`.`the_year` as `c1`, `product_class`.`product_family` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_country` = 'USA' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' group by `store`.`store_country`, `time_by_day`.`the_year`, `product_class`.`product_family`]
2014-02-22 13:12:59,387 DEBUG [mondrian.sql] 286: Segment.load: executing sql [select `store`.`store_country` as `c0`, `time_by_day`.`the_year` as `c1`, `time_by_day`.`quarter` as `c2`, `product_class`.`product_family` as `c3`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_country` = 'USA' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' group by `store`.`store_country`, `time_by_day`.`the_year`, `time_by_day`.`quarter`, `product_class`.`product_family`]
2014-02-22 13:12:59,609 DEBUG [mondrian.sql] 285: , exec 223 ms
2014-02-22 13:12:59,611 DEBUG [mondrian.sql] 285: , exec+fetch 224 ms, 1 rows
2014-02-22 13:12:59,636 DEBUG [mondrian.sql] 286: , exec 248 ms
2014-02-22 13:12:59,637 DEBUG [mondrian.sql] 286: , exec+fetch 250 ms, 4 rows
2014-02-22 13:12:59,637 DEBUG [mondrian.mdx] 3468: exec: 254 ms
2014-02-22 13:12:59,640 DEBUG [mondrian.mdx] 3478: select {[Measures].[Units Shipped], [Measures].[Units Ordered]} ON COLUMNS,
  NON EMPTY [Store].[Store Name].Members DIMENSION PROPERTIES [Store].[Store Name].[Store Sqft] ON ROWS
from [Warehouse]

2014-02-22 13:12:59,642 DEBUG [mondrian.mdx] 3478: exec: 2 ms
2014-02-22 13:12:59,646 DEBUG [mondrian.mdx] 3492: select {[Measures].[Unit Sales]} ON COLUMNS,
  Crossjoin([Customers].Children, TopCount(Descendants([Store].CurrentMember, [Store].[Store Name]), 1, [Measures].[Unit Sales])) ON ROWS
from [Sales]

2014-02-22 13:12:59,652 DEBUG [mondrian.sql] 287: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_name`, `time_by_day`.`the_year`]
2014-02-22 13:12:59,807 DEBUG [mondrian.sql] 287: , exec 155 ms
2014-02-22 13:12:59,808 DEBUG [mondrian.sql] 287: , exec+fetch 156 ms, 13 rows
2014-02-22 13:12:59,813 DEBUG [mondrian.sql] 288: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, `customer`.`country` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `customer` as `customer` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` = 'Store 13' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `store`.`store_name`, `time_by_day`.`the_year`, `customer`.`country`]
2014-02-22 13:13:00,218 DEBUG [mondrian.sql] 288: , exec 405 ms
2014-02-22 13:13:00,219 DEBUG [mondrian.sql] 288: , exec+fetch 406 ms, 1 rows
2014-02-22 13:13:00,220 DEBUG [mondrian.mdx] 3492: exec: 574 ms
2014-02-22 13:13:00,223 DEBUG [mondrian.sql] 289: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and UPPER(`product_class`.`product_family`) = UPPER('Non-Consumable') group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:13:00,225 DEBUG [mondrian.sql] 289: , exec 1 ms
2014-02-22 13:13:00,225 DEBUG [mondrian.sql] 289: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:00,226 DEBUG [mondrian.mdx] 3504: select {[Measures].[Unit Sales]} ON COLUMNS,
  Order([Store].[Store Name].Members, [Measures].[Unit Sales], BDESC) ON ROWS
from [Sales]
where [Product].[Non-Consumable]

2014-02-22 13:13:00,231 DEBUG [mondrian.sql] 290: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, `product_class`.`product_family` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Non-Consumable' group by `store`.`store_name`, `time_by_day`.`the_year`, `product_class`.`product_family`]
2014-02-22 13:13:00,646 DEBUG [mondrian.sql] 290: , exec 414 ms
2014-02-22 13:13:00,647 DEBUG [mondrian.sql] 290: , exec+fetch 416 ms, 13 rows
2014-02-22 13:13:00,648 DEBUG [mondrian.mdx] 3504: exec: 421 ms
2014-02-22 13:13:00,653 DEBUG [mondrian.mdx] 3520: with member [Measures].[Average Units Ordered] as 'Avg(Descendants([Store].CurrentMember, [Store].[Store Name]), [Measures].[Units Ordered])', FORMAT_STRING = "#.00"
select {[Measures].[Units Ordered], [Measures].[Average Units Ordered]} ON COLUMNS,
  [Store].[Store State].Members ON ROWS
from [Warehouse]

2014-02-22 13:13:00,654 DEBUG [mondrian.sql] 291: SqlTupleReader.readTuples [[Store].[Store State]]: executing sql [select `store`.`store_country` as `c0`, `store`.`store_state` as `c1` from `store` as `store` group by `store`.`store_country`, `store`.`store_state` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC, ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:13:00,655 DEBUG [mondrian.sql] 291: , exec 1 ms
2014-02-22 13:13:00,656 DEBUG [mondrian.sql] 291: , exec+fetch 2 ms, 10 rows
2014-02-22 13:13:00,667 DEBUG [mondrian.sql] 292: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `store_state`) from `store`]
2014-02-22 13:13:00,669 DEBUG [mondrian.sql] 292: , exec 1 ms
2014-02-22 13:13:00,669 DEBUG [mondrian.sql] 292: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:00,671 DEBUG [mondrian.sql] 293: Segment.load: executing sql [select `store`.`store_state` as `c0`, `time_by_day`.`the_year` as `c1`, sum(`inventory_fact_1997`.`units_ordered`) as `m0` from `store` as `store`, `inventory_fact_1997` as `inventory_fact_1997`, `time_by_day` as `time_by_day` where `inventory_fact_1997`.`store_id` = `store`.`store_id` and `inventory_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `store`.`store_state`, `time_by_day`.`the_year`]
2014-02-22 13:13:00,700 DEBUG [mondrian.sql] 293: , exec 28 ms
2014-02-22 13:13:00,701 DEBUG [mondrian.sql] 293: , exec+fetch 30 ms, 3 rows
2014-02-22 13:13:00,704 DEBUG [mondrian.mdx] 3520: exec: 51 ms
2014-02-22 13:13:00,711 DEBUG [mondrian.sql] 294: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_subcategory` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_category` = 'Beer and Wine' and `product_class`.`product_department` = 'Alcoholic Beverages' and `product_class`.`product_family` = 'Drink') and UPPER(`product_class`.`product_subcategory`) = UPPER('Beer') group by `product_class`.`product_subcategory` order by ISNULL(`product_class`.`product_subcategory`) ASC, `product_class`.`product_subcategory` ASC]
2014-02-22 13:13:00,713 DEBUG [mondrian.sql] 294: , exec 1 ms
2014-02-22 13:13:00,713 DEBUG [mondrian.sql] 294: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:00,715 DEBUG [mondrian.mdx] 3539: with member [Measures].[Average Units Ordered] as 'Avg(Descendants([Store].CurrentMember, [Store].[Store Name]), [Measures].[Units Ordered])'
select {[Measures].[Units Ordered], [Measures].[Average Units Ordered]} ON COLUMNS,
  [Product].[Drink].[Alcoholic Beverages].[Beer and Wine].[Beer].Children ON ROWS
from [Warehouse]
where [Store].[USA].[CA]

2014-02-22 13:13:00,717 DEBUG [mondrian.sql] 295: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_family`) from `product_class`]
2014-02-22 13:13:00,718 DEBUG [mondrian.sql] 295: , exec 0 ms
2014-02-22 13:13:00,718 DEBUG [mondrian.sql] 295: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:00,719 DEBUG [mondrian.sql] 296: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_department`) from `product_class`]
2014-02-22 13:13:00,719 DEBUG [mondrian.sql] 296: , exec 0 ms
2014-02-22 13:13:00,720 DEBUG [mondrian.sql] 296: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:00,721 DEBUG [mondrian.sql] 297: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_category`) from `product_class`]
2014-02-22 13:13:00,721 DEBUG [mondrian.sql] 297: , exec 0 ms
2014-02-22 13:13:00,722 DEBUG [mondrian.sql] 297: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:00,723 DEBUG [mondrian.sql] 298: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `product_subcategory`) from `product_class`]
2014-02-22 13:13:00,723 DEBUG [mondrian.sql] 298: , exec 0 ms
2014-02-22 13:13:00,724 DEBUG [mondrian.sql] 298: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:00,724 DEBUG [mondrian.sql] 299: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `brand_name`) from `product`]
2014-02-22 13:13:00,725 DEBUG [mondrian.sql] 299: , exec 0 ms
2014-02-22 13:13:00,728 DEBUG [mondrian.sql] 299: , exec+fetch 4 ms, 1 rows
2014-02-22 13:13:00,731 DEBUG [mondrian.sql] 300: Segment.load: executing sql [select `store`.`store_state` as `c0`, `time_by_day`.`the_year` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `product_class`.`product_subcategory` as `c5`, `product`.`brand_name` as `c6`, sum(`inventory_fact_1997`.`units_ordered`) as `m0` from `store` as `store`, `inventory_fact_1997` as `inventory_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `inventory_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_state` = 'CA' and `inventory_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `inventory_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Alcoholic Beverages' and `product_class`.`product_category` = 'Beer and Wine' and `product_class`.`product_subcategory` = 'Beer' and `product`.`brand_name` in ('Good', 'Pearl', 'Portsmouth', 'Top Measure', 'Walrus') group by `store`.`store_state`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`]
2014-02-22 13:13:00,735 DEBUG [mondrian.sql] 300: , exec 4 ms
2014-02-22 13:13:00,735 DEBUG [mondrian.sql] 301: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, `product_class`.`product_family` as `c2`, `product_class`.`product_department` as `c3`, `product_class`.`product_category` as `c4`, `product_class`.`product_subcategory` as `c5`, `product`.`brand_name` as `c6`, sum(`inventory_fact_1997`.`units_ordered`) as `m0` from `store` as `store`, `inventory_fact_1997` as `inventory_fact_1997`, `time_by_day` as `time_by_day`, `product_class` as `product_class`, `product` as `product` where `inventory_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` in ('HQ', 'Store 14', 'Store 24', 'Store 6', 'Store 7') and `inventory_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `inventory_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Drink' and `product_class`.`product_department` = 'Alcoholic Beverages' and `product_class`.`product_category` = 'Beer and Wine' and `product_class`.`product_subcategory` = 'Beer' and `product`.`brand_name` in ('Good', 'Pearl', 'Portsmouth', 'Top Measure', 'Walrus') group by `store`.`store_name`, `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`]
2014-02-22 13:13:00,737 DEBUG [mondrian.sql] 300: , exec+fetch 5 ms, 3 rows
2014-02-22 13:13:00,741 DEBUG [mondrian.sql] 301: , exec 5 ms
2014-02-22 13:13:00,742 DEBUG [mondrian.sql] 301: , exec+fetch 7 ms, 5 rows
2014-02-22 13:13:00,744 DEBUG [mondrian.mdx] 3539: exec: 29 ms
2014-02-22 13:13:00,755 DEBUG [mondrian.mdx] 3586: with member [Product].[Drink Forecast - Standard] as '([Product].[Drink] * 2)'
  member [Product].[Drink Forecast - Dynamic] as '([Product].[Drink] * IIf(([Time].CurrentMember.Name = "1"), 1.2, IIf(([Time].CurrentMember.Name = "2"), 1.3, IIf(([Time].CurrentMember.Name = "3"), 1.4, IIf(([Time].CurrentMember.Name = "4"), 1.6, IIf(([Time].CurrentMember.Name = "5"), 2.1, IIf(([Time].CurrentMember.Name = "6"), 2.4, IIf(([Time].CurrentMember.Name = "7"), 2.6, IIf(([Time].CurrentMember.Name = "8"), 2.3, IIf(([Time].CurrentMember.Name = "9"), 1.9, IIf(([Time].CurrentMember.Name = "10"), 1.5, IIf(([Time].CurrentMember.Name = "11"), 1.4, IIf(([Time].CurrentMember.Name = "12"), 1.2, 1.0)))))))))))))'
select Descendants([Time].[1997], [Time].[Month], SELF) ON COLUMNS,
  {[Product].Children, [Product].[Drink Forecast - Standard], [Product].[Drink Forecast - Dynamic]} ON ROWS
from [Warehouse]

2014-02-22 13:13:00,768 DEBUG [mondrian.sql] 302: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `month_of_year`) from `time_by_day`]
2014-02-22 13:13:00,769 DEBUG [mondrian.sql] 302: , exec 0 ms
2014-02-22 13:13:00,769 DEBUG [mondrian.sql] 302: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:00,771 DEBUG [mondrian.sql] 303: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`month_of_year` as `c2`, `product_class`.`product_family` as `c3`, sum(`inventory_fact_1997`.`store_invoice`) as `m0` from `time_by_day` as `time_by_day`, `inventory_fact_1997` as `inventory_fact_1997`, `product_class` as `product_class`, `product` as `product` where `inventory_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `inventory_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`, `product_class`.`product_family`]
2014-02-22 13:13:00,902 DEBUG [mondrian.sql] 303: , exec 130 ms
2014-02-22 13:13:00,904 DEBUG [mondrian.sql] 303: , exec+fetch 131 ms, 36 rows
2014-02-22 13:13:00,905 DEBUG [mondrian.mdx] 3586: exec: 150 ms
2014-02-22 13:13:00,912 DEBUG [mondrian.sql] 304: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_department` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_family` = 'Food') and UPPER(`product_class`.`product_department`) = UPPER('Deli') group by `product_class`.`product_department` order by ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC]
2014-02-22 13:13:00,914 DEBUG [mondrian.sql] 304: , exec 1 ms
2014-02-22 13:13:00,914 DEBUG [mondrian.sql] 304: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:00,915 DEBUG [mondrian.sql] 305: SqlMemberSource.getMemberChildren: executing sql [select `product_class`.`product_department` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` and (`product_class`.`product_family` = 'Food') and UPPER(`product_class`.`product_department`) = UPPER('Frozen Foods') group by `product_class`.`product_department` order by ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC]
2014-02-22 13:13:00,917 DEBUG [mondrian.sql] 305: , exec 1 ms
2014-02-22 13:13:00,917 DEBUG [mondrian.sql] 305: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:00,919 DEBUG [mondrian.mdx] 3609: with member [Customers].[my] as 'Aggregate(Filter([Customers].[City].Members, (([Measures].[Unit Sales] / ([Measures].[Unit Sales], [Product].[All Products])) > 0.1)))'
select {[Measures].[Unit Sales]} ON COLUMNS,
  {[Product].[Food].[Deli], [Product].[Food].[Frozen Foods]} ON ROWS
from [Sales]
where ([Customers].[my], [Time].[1997])

2014-02-22 13:13:00,930 DEBUG [mondrian.sql] 306: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `product_class`.`product_family` as `c1`, `product_class`.`product_department` as `c2`, `customer`.`state_province` as `c3`, `customer`.`city` as `c4`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997`, `product_class` as `product_class`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `product_class`.`product_family` = 'Food' and `product_class`.`product_department` in ('Deli', 'Frozen Foods') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `time_by_day`.`the_year`, `product_class`.`product_family`, `product_class`.`product_department`, `customer`.`state_province`, `customer`.`city`]
2014-02-22 13:13:01,450 DEBUG [mondrian.sql] 306: , exec 519 ms
2014-02-22 13:13:01,454 DEBUG [mondrian.sql] 306: , exec+fetch 523 ms, 156 rows
2014-02-22 13:13:01,458 DEBUG [mondrian.mdx] 3609: exec: 539 ms
2014-02-22 13:13:01,468 DEBUG [mondrian.mdx] 3633: with set [#DataSet#] as 'Filter(Crossjoin({[Store].[All Stores]}, {[Customers].[All Customers]}), ([Measures].[Unit Sales] > 5))'
  member [Customers].[#GT#] as 'Aggregate({[#DataSet#]})'
  member [Store].[#GT#] as 'Aggregate({[#DataSet#]})'
  set [#GrandTotalSet#] as 'Crossjoin({[Store].[#GT#]}, {[Customers].[#GT#]})'
select {[Measures].[Unit Sales]} ON COLUMNS,
  Union([#GrandTotalSet#], Hierarchize({[#DataSet#]})) ON ROWS
from [Sales]

2014-02-22 13:13:01,483 DEBUG [mondrian.mdx] 3633: exec: 15 ms
2014-02-22 13:13:01,486 DEBUG [mondrian.mdx] 3651: with set [#DataSet#] as 'Crossjoin({[Store].[All Stores]}, {[Customers].[All Customers]})'
  set [#GrandTotalSet#] as 'Crossjoin({[Store].[All Stores]}, {[Customers].[All Customers]})'
select {[Measures].[Unit Sales]} ON COLUMNS,
  Union([#GrandTotalSet#], Hierarchize({[#DataSet#]})) ON ROWS
from [Sales]

2014-02-22 13:13:01,489 DEBUG [mondrian.mdx] 3651: exec: 3 ms
2014-02-22 13:13:01,493 DEBUG [mondrian.mdx] 3675: with set [#DataSet#] as 'Filter(Crossjoin({[Store].[All Stores]}, {[Customers].[All Customers]}), ([Measures].[Unit Sales] > 5))'
  member [Customers].[#GT#] as 'Aggregate({[#DataSet#]})'
  member [Store].[#GT#] as 'Aggregate({[#DataSet#]})'
  set [#GrandTotalSet#] as 'Crossjoin({[Store].[#GT#]}, {[Customers].[#GT#]})'
select {[Measures].[Unit Sales]} ON COLUMNS,
  Union([#GrandTotalSet#], Hierarchize({[#DataSet#]})) ON ROWS
from [Sales]

2014-02-22 13:13:01,501 DEBUG [mondrian.mdx] 3675: exec: 7 ms
2014-02-22 13:13:01,505 DEBUG [mondrian.sql] 307: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_name` as `c0`, `store`.`store_type` as `c1`, `store`.`store_manager` as `c2`, `store`.`store_sqft` as `c3`, `store`.`grocery_sqft` as `c4`, `store`.`frozen_sqft` as `c5`, `store`.`meat_sqft` as `c6`, `store`.`coffee_bar` as `c7`, `store`.`store_street_address` as `c8` from `store` as `store` where (`store`.`store_city` = 'San Francisco' and `store`.`store_state` = 'CA') and UPPER(`store`.`store_name`) = UPPER('Store 14') group by `store`.`store_name`, `store`.`store_type`, `store`.`store_manager`, `store`.`store_sqft`, `store`.`grocery_sqft`, `store`.`frozen_sqft`, `store`.`meat_sqft`, `store`.`coffee_bar`, `store`.`store_street_address` order by ISNULL(`store`.`store_name`) ASC, `store`.`store_name` ASC]
2014-02-22 13:13:01,507 DEBUG [mondrian.sql] 307: , exec 1 ms
2014-02-22 13:13:01,507 DEBUG [mondrian.sql] 307: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:01,511 DEBUG [mondrian.mdx] 3701: select {[Measures].[Store Sales]} ON COLUMNS,
  NON EMPTY Crossjoin(Filter([Customers].[Name].Members, (([Measures].[Store Sales], [Store].[USA].[CA].[San Francisco].[Store 14], [Time].[1997].[Q1].[1]) > 5.0)), Filter([Product].[Product Name].Members, (([Measures].[Store Sales], [Store].[USA].[CA].[San Francisco].[Store 14], [Time].[1997].[Q1].[1]) > 5.0))) ON ROWS
from [Sales]
where ([Store].[USA].[CA].[San Francisco].[Store 14], [Time].[1997].[Q1].[1])

2014-02-22 13:13:01,514 DEBUG [mondrian.sql] 308: SqlTupleReader.readTuples [[Customers].[Name]]: executing sql [select `customer`.`country` as `c0`, `customer`.`state_province` as `c1`, `customer`.`city` as `c2`, `customer`.`customer_id` as `c3`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) as `c4`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) as `c5`, `customer`.`gender` as `c6`, `customer`.`marital_status` as `c7`, `customer`.`education` as `c8`, `customer`.`yearly_income` as `c9` from `customer` as `customer`, `sales_fact_1997` as `sales_fact_1997`, `store` as `store`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` = 'Store 14' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 group by `customer`.`country`, `customer`.`state_province`, `customer`.`city`, `customer`.`customer_id`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`), `customer`.`gender`, `customer`.`marital_status`, `customer`.`education`, `customer`.`yearly_income` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC, ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC, ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC, ISNULL(CONCAT(`customer`.`fname`, ' ', `customer`.`lname`)) ASC, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) ASC]
2014-02-22 13:13:01,574 DEBUG [mondrian.sql] 308: , exec 59 ms
2014-02-22 13:13:01,575 DEBUG [mondrian.sql] 308: , exec+fetch 60 ms, 20 rows
2014-02-22 13:13:01,578 DEBUG [mondrian.sql] 309: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, `time_by_day`.`quarter` as `c2`, `time_by_day`.`month_of_year` as `c3`, `customer`.`customer_id` as `c4`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `customer` as `customer` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` = 'Store 14' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`customer_id` in (5, 283, 508, 1924, 2274, 3861, 3962, 4293, 4387, 5005, 6131, 6613, 7314, 7495, 7962, 8401, 8648, 8762, 8830, 10197) group by `store`.`store_name`, `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`, `customer`.`customer_id`]
2014-02-22 13:13:01,581 DEBUG [mondrian.sql] 309: , exec 2 ms
2014-02-22 13:13:01,582 DEBUG [mondrian.sql] 309: , exec+fetch 4 ms, 20 rows
2014-02-22 13:13:01,586 DEBUG [mondrian.sql] 310: SqlTupleReader.readTuples [[Product].[Product Name]]: executing sql [select `product_class`.`product_family` as `c0`, `product_class`.`product_department` as `c1`, `product_class`.`product_category` as `c2`, `product_class`.`product_subcategory` as `c3`, `product`.`brand_name` as `c4`, `product`.`product_name` as `c5` from `product` as `product`, `product_class` as `product_class`, `sales_fact_1997` as `sales_fact_1997`, `store` as `store`, `time_by_day` as `time_by_day` where `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` = 'Store 14' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 group by `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`, `product`.`product_name` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC, ISNULL(`product_class`.`product_subcategory`) ASC, `product_class`.`product_subcategory` ASC, ISNULL(`product`.`brand_name`) ASC, `product`.`brand_name` ASC, ISNULL(`product`.`product_name`) ASC, `product`.`product_name` ASC]
2014-02-22 13:13:03,215 DEBUG [mondrian.sql] 310: , exec 1628 ms
2014-02-22 13:13:03,218 DEBUG [mondrian.sql] 310: , exec+fetch 1632 ms, 66 rows
2014-02-22 13:13:03,222 DEBUG [mondrian.sql] 311: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, `time_by_day`.`quarter` as `c2`, `time_by_day`.`month_of_year` as `c3`, `product`.`product_name` as `c4`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product` as `product` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` = 'Store 14' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_name` in ('American Low Fat Cole Slaw', 'BBB Best Apple Jam', 'Best Choice Dried Apples', 'Best Choice Low Fat Chips', 'Better Creamed Corn', 'Better Fancy Canned Sardines', 'Bird Call 200 MG Acetominifen', 'Bird Call Conditioning Shampoo', 'Blue Label Canned Yams', 'Blue Medal Large Eggs', 'Bravo Fancy Canned Clams', 'CDR Strawberry Jam', 'Carrington Turkey TV Dinner', 'Club Cheese Spread', 'Club Sharp Cheddar Cheese', 'Cormorant Paper Plates', 'Cormorant Screw Driver', 'Cutting Edge Pimento Loaf', 'Denny Toilet Paper', 'Fast Avocado Dip', 'Fast No Salt Popcorn', 'Faux Products 200 MG Acetominifen', 'Fort West BBQ Potato Chips', 'Fort West Corn Chips', 'Fort West Salted Pretzels', 'Gerolli Seasoned Hamburger', 'Giant Large Brown Eggs', 'Golden Frozen Chicken Breast', 'Hermanos Cauliflower', 'Hermanos Firm Tofu', 'Hermanos Macintosh Apples', 'Hermanos Potatos', 'High Top Cantelope', 'High Top Cauliflower', 'High Top Honey Dew', 'High Top Lemons', 'High Top Mushrooms', 'Horatio Cheese Dip', 'Horatio Low Fat Cookies', 'Horatio Mini Donuts', 'Johnson Grits', 'Just Right Canned Peas', 'Kiwi Scallops', 'Landslide Creamy Peanut Butter', 'Medalist Spaghetti', 'Modell English Muffins', 'Moms Chicken Hot Dogs', 'Moms Sliced Turkey', 'PigTail Frozen Chicken Breast', 'Plato Creamy Peanut Butter', 'Pleasant Beef Soup', 'Portsmouth Chardonnay', 'Red Spade Sliced Chicken', 'Red Wing Scissors', 'Sphinx Bagels', 'Steady Childrens Cold Remedy', 'Steady Extra Moisture Shampoo', 'Sunset Paper Plates', 'Super Strawberry Jam', 'Tell Tale Asparagus', 'Tell Tale Sweet Onion', 'Top Measure Chardonnay', 'Toucan Canned Mixed Fruit', 'Tri-State Fuji Apples', 'Tri-State Party Nuts', 'Walrus Chardonnay Wine') group by `store`.`store_name`, `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`, `product`.`product_name`]
2014-02-22 13:13:03,267 DEBUG [mondrian.sql] 311: , exec 43 ms
2014-02-22 13:13:03,270 DEBUG [mondrian.sql] 311: , exec+fetch 47 ms, 66 rows
2014-02-22 13:13:03,285 DEBUG [mondrian.sql] 312: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, `time_by_day`.`quarter` as `c2`, `time_by_day`.`month_of_year` as `c3`, `product`.`product_name` as `c4`, `customer`.`customer_id` as `c5`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` = 'Store 14' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_name` in ('Bird Call 200 MG Acetominifen', 'Bird Call Conditioning Shampoo', 'Blue Label Canned Yams', 'Blue Medal Large Eggs', 'CDR Strawberry Jam', 'Fast Avocado Dip', 'High Top Cauliflower', 'Medalist Spaghetti', 'Portsmouth Chardonnay', 'Tell Tale Asparagus', 'Tri-State Fuji Apples') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`customer_id` in (283, 1924, 2274, 3861, 3962, 4387, 5005, 6131, 7314, 7495, 7962, 8401, 8648, 8762, 8830, 10197) group by `store`.`store_name`, `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`, `product`.`product_name`, `customer`.`customer_id`]
2014-02-22 13:13:03,289 DEBUG [mondrian.sql] 312: , exec 3 ms
2014-02-22 13:13:03,291 DEBUG [mondrian.sql] 312: , exec+fetch 5 ms, 12 rows
2014-02-22 13:13:03,297 DEBUG [mondrian.mdx] 3701: exec: 1786 ms
2014-02-22 13:13:03,303 DEBUG [mondrian.mdx] 3715: select {[Measures].[Store Sales]} ON COLUMNS,
  NON EMPTY Crossjoin([Customers].[Name].Members, [Product].[Product Name].Members) ON ROWS
from [Sales]
where ([Store].[USA].[CA].[San Francisco].[Store 14], [Time].[1997].[Q1].[1])

2014-02-22 13:13:03,307 DEBUG [mondrian.sql] 313: SqlTupleReader.readTuples [[Customers].[Name], [Product].[Product Name]]: executing sql [select `customer`.`country` as `c0`, `customer`.`state_province` as `c1`, `customer`.`city` as `c2`, `customer`.`customer_id` as `c3`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) as `c4`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) as `c5`, `customer`.`gender` as `c6`, `customer`.`marital_status` as `c7`, `customer`.`education` as `c8`, `customer`.`yearly_income` as `c9`, `product_class`.`product_family` as `c10`, `product_class`.`product_department` as `c11`, `product_class`.`product_category` as `c12`, `product_class`.`product_subcategory` as `c13`, `product`.`brand_name` as `c14`, `product`.`product_name` as `c15` from `customer` as `customer`, `sales_fact_1997` as `sales_fact_1997`, `product` as `product`, `product_class` as `product_class`, `store` as `store`, `time_by_day` as `time_by_day` where `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `product`.`product_class_id` = `product_class`.`product_class_id` and `sales_fact_1997`.`product_id` = `product`.`product_id` and `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` = 'Store 14' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 group by `customer`.`country`, `customer`.`state_province`, `customer`.`city`, `customer`.`customer_id`, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`), `customer`.`gender`, `customer`.`marital_status`, `customer`.`education`, `customer`.`yearly_income`, `product_class`.`product_family`, `product_class`.`product_department`, `product_class`.`product_category`, `product_class`.`product_subcategory`, `product`.`brand_name`, `product`.`product_name` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC, ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC, ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC, ISNULL(CONCAT(`customer`.`fname`, ' ', `customer`.`lname`)) ASC, CONCAT(`customer`.`fname`, ' ', `customer`.`lname`) ASC, ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC, ISNULL(`product_class`.`product_department`) ASC, `product_class`.`product_department` ASC, ISNULL(`product_class`.`product_category`) ASC, `product_class`.`product_category` ASC, ISNULL(`product_class`.`product_subcategory`) ASC, `product_class`.`product_subcategory` ASC, ISNULL(`product`.`brand_name`) ASC, `product`.`brand_name` ASC, ISNULL(`product`.`product_name`) ASC, `product`.`product_name` ASC]
2014-02-22 13:13:05,084 DEBUG [mondrian.sql] 313: , exec 1776 ms
2014-02-22 13:13:05,088 DEBUG [mondrian.sql] 313: , exec+fetch 1780 ms, 67 rows
2014-02-22 13:13:05,093 DEBUG [mondrian.sql] 314: Segment.load: executing sql [select `store`.`store_name` as `c0`, `time_by_day`.`the_year` as `c1`, `time_by_day`.`quarter` as `c2`, `time_by_day`.`month_of_year` as `c3`, `product`.`product_name` as `c4`, `customer`.`customer_id` as `c5`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `product` as `product`, `customer` as `customer` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `store`.`store_name` = 'Store 14' and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` = 1 and `sales_fact_1997`.`product_id` = `product`.`product_id` and `product`.`product_name` in ('American Low Fat Cole Slaw', 'BBB Best Apple Jam', 'Best Choice Dried Apples', 'Best Choice Low Fat Chips', 'Better Creamed Corn', 'Better Fancy Canned Sardines', 'Bravo Fancy Canned Clams', 'Carrington Turkey TV Dinner', 'Club Cheese Spread', 'Club Sharp Cheddar Cheese', 'Cormorant Paper Plates', 'Cormorant Screw Driver', 'Cutting Edge Pimento Loaf', 'Denny Toilet Paper', 'Fast No Salt Popcorn', 'Faux Products 200 MG Acetominifen', 'Fort West BBQ Potato Chips', 'Fort West Corn Chips', 'Fort West Salted Pretzels', 'Gerolli Seasoned Hamburger', 'Giant Large Brown Eggs', 'Golden Frozen Chicken Breast', 'Hermanos Cauliflower', 'Hermanos Firm Tofu', 'Hermanos Macintosh Apples', 'Hermanos Potatos', 'High Top Cantelope', 'High Top Honey Dew', 'High Top Lemons', 'High Top Mushrooms', 'Horatio Cheese Dip', 'Horatio Low Fat Cookies', 'Horatio Mini Donuts', 'Johnson Grits', 'Just Right Canned Peas', 'Kiwi Scallops', 'Landslide Creamy Peanut Butter', 'Modell English Muffins', 'Moms Chicken Hot Dogs', 'Moms Sliced Turkey', 'PigTail Frozen Chicken Breast', 'Plato Creamy Peanut Butter', 'Pleasant Beef Soup', 'Red Spade Sliced Chicken', 'Red Wing Scissors', 'Sphinx Bagels', 'Steady Childrens Cold Remedy', 'Steady Extra Moisture Shampoo', 'Sunset Paper Plates', 'Super Strawberry Jam', 'Tell Tale Sweet Onion', 'Top Measure Chardonnay', 'Toucan Canned Mixed Fruit', 'Tri-State Party Nuts', 'Walrus Chardonnay Wine') and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`customer_id` in (5, 508, 1924, 2274, 3861, 3962, 4293, 4387, 5005, 6131, 6613, 7314, 7495, 7962, 8401, 8648, 8762, 8830, 10197) group by `store`.`store_name`, `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`, `product`.`product_name`, `customer`.`customer_id`]
2014-02-22 13:13:05,107 DEBUG [mondrian.sql] 314: , exec 13 ms
2014-02-22 13:13:05,110 DEBUG [mondrian.sql] 314: , exec+fetch 17 ms, 55 rows
2014-02-22 13:13:05,113 DEBUG [mondrian.mdx] 3715: exec: 1810 ms
2014-02-22 13:13:05,116 DEBUG [mondrian.sql] 315: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`education` as `c0` from `customer` as `customer` where UPPER(`customer`.`education`) = UPPER('Graduate Degree') group by `customer`.`education` order by ISNULL(`customer`.`education`) ASC, `customer`.`education` ASC]
2014-02-22 13:13:05,133 DEBUG [mondrian.sql] 315: , exec 16 ms
2014-02-22 13:13:05,134 DEBUG [mondrian.sql] 315: , exec+fetch 18 ms, 1 rows
2014-02-22 13:13:05,136 DEBUG [mondrian.sql] 316: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'WA') and UPPER(`customer`.`city`) = UPPER('Anacortes') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:13:05,148 DEBUG [mondrian.sql] 316: , exec 11 ms
2014-02-22 13:13:05,149 DEBUG [mondrian.sql] 316: , exec+fetch 13 ms, 1 rows
2014-02-22 13:13:05,150 DEBUG [mondrian.mdx] 3727: select {[Education Level].[Graduate Degree]} ON COLUMNS,
  Crossjoin({[Store Type].[Store Type].Members}, {[Promotions].[Promotion Name].Members}) ON ROWS
from [Sales]
where [Customers].[USA].[WA].[Anacortes]

2014-02-22 13:13:05,152 DEBUG [mondrian.sql] 317: SqlTupleReader.readTuples [[Promotions].[Promotion Name]]: executing sql [select `promotion`.`promotion_name` as `c0` from `promotion` as `promotion` group by `promotion`.`promotion_name` order by ISNULL(`promotion`.`promotion_name`) ASC, `promotion`.`promotion_name` ASC]
2014-02-22 13:13:05,158 DEBUG [mondrian.sql] 317: , exec 6 ms
2014-02-22 13:13:05,159 DEBUG [mondrian.sql] 317: , exec+fetch 7 ms, 51 rows
2014-02-22 13:13:05,165 DEBUG [mondrian.sql] 318: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `promotion_name`) from `promotion`]
2014-02-22 13:13:05,170 DEBUG [mondrian.sql] 318: , exec 4 ms
2014-02-22 13:13:05,170 DEBUG [mondrian.sql] 318: , exec+fetch 5 ms, 1 rows
2014-02-22 13:13:05,171 DEBUG [mondrian.sql] 319: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `education`) from `customer`]
2014-02-22 13:13:05,187 DEBUG [mondrian.sql] 319: , exec 15 ms
2014-02-22 13:13:05,187 DEBUG [mondrian.sql] 319: , exec+fetch 16 ms, 1 rows
2014-02-22 13:13:05,194 DEBUG [mondrian.sql] 320: Segment.load: executing sql [select `store`.`store_type` as `c0`, `time_by_day`.`the_year` as `c1`, `promotion`.`promotion_name` as `c2`, `customer`.`state_province` as `c3`, `customer`.`city` as `c4`, `customer`.`education` as `c5`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `promotion` as `promotion`, `customer` as `customer` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`state_province` = 'WA' and `customer`.`city` = 'Anacortes' and `customer`.`education` = 'Graduate Degree' group by `store`.`store_type`, `time_by_day`.`the_year`, `promotion`.`promotion_name`, `customer`.`state_province`, `customer`.`city`, `customer`.`education`]
2014-02-22 13:13:05,577 DEBUG [mondrian.sql] 320: , exec 383 ms
2014-02-22 13:13:05,582 DEBUG [mondrian.sql] 320: , exec+fetch 385 ms, 1 rows
2014-02-22 13:13:05,587 DEBUG [mondrian.mdx] 3727: exec: 437 ms
2014-02-22 13:13:05,593 DEBUG [mondrian.mdx] 3741: select {[Education Level].[Graduate Degree]} ON COLUMNS,
  NonEmptyCrossJoin({[Store Type].[Store Type].Members}, {[Promotions].[Promotion Name].Members}) ON ROWS
from [Sales]
where [Customers].[USA].[WA].[Anacortes]

2014-02-22 13:13:05,595 DEBUG [mondrian.sql] 321: SqlTupleReader.readTuples [[Store Type].[Store Type], [Promotions].[Promotion Name]]: executing sql [select `store`.`store_type` as `c0`, `promotion`.`promotion_name` as `c1` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `promotion` as `promotion`, `customer` as `customer` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`state_province` = 'WA' and `customer`.`city` = 'Anacortes' group by `store`.`store_type`, `promotion`.`promotion_name` order by ISNULL(`store`.`store_type`) ASC, `store`.`store_type` ASC, ISNULL(`promotion`.`promotion_name`) ASC, `promotion`.`promotion_name` ASC]
2014-02-22 13:13:05,986 DEBUG [mondrian.sql] 321: , exec 391 ms
2014-02-22 13:13:05,987 DEBUG [mondrian.sql] 321: , exec+fetch 392 ms, 10 rows
2014-02-22 13:13:05,989 DEBUG [mondrian.mdx] 3741: exec: 396 ms
2014-02-22 13:13:05,992 DEBUG [mondrian.mdx] 3753: select {[Education Level].[Graduate Degree]} ON COLUMNS,
  NON EMPTY Crossjoin({[Store Type].[Store Type].Members}, {[Promotions].[Promotion Name].Members}) ON ROWS
from [Sales]
where [Customers].[USA].[WA].[Anacortes]

2014-02-22 13:13:05,994 DEBUG [mondrian.sql] 322: SqlTupleReader.readTuples [[Store Type].[Store Type], [Promotions].[Promotion Name]]: executing sql [select `store`.`store_type` as `c0`, `promotion`.`promotion_name` as `c1` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `promotion` as `promotion`, `customer` as `customer` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`promotion_id` = `promotion`.`promotion_id` and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` and `customer`.`state_province` = 'WA' and `customer`.`city` = 'Anacortes' and (`customer`.`education` = 'Graduate Degree') group by `store`.`store_type`, `promotion`.`promotion_name` order by ISNULL(`store`.`store_type`) ASC, `store`.`store_type` ASC, ISNULL(`promotion`.`promotion_name`) ASC, `promotion`.`promotion_name` ASC]
2014-02-22 13:13:06,341 DEBUG [mondrian.sql] 322: , exec 346 ms
2014-02-22 13:13:06,342 DEBUG [mondrian.sql] 322: , exec+fetch 348 ms, 1 rows
2014-02-22 13:13:06,343 DEBUG [mondrian.mdx] 3753: exec: 351 ms
2014-02-22 13:13:06,349 DEBUG [mondrian.mdx] 3765: select {[Education Level].[Graduate Degree]} ON COLUMNS,
  NON EMPTY NonEmptyCrossJoin({[Store Type].[Store Type].Members}, {[Promotions].[Promotion Name].Members}) ON ROWS
from [Sales]
where [Customers].[USA].[WA].[Anacortes]

2014-02-22 13:13:06,351 DEBUG [mondrian.mdx] 3765: exec: 2 ms
2014-02-22 13:13:06,355 DEBUG [mondrian.sql] 323: SqlMemberSource.getMemberChildren: executing sql [select `time_by_day`.`month_of_year` as `c0` from `time_by_day` as `time_by_day` where (`time_by_day`.`quarter` = 'Q1' and `time_by_day`.`the_year` = 1997) and `time_by_day`.`month_of_year` = 2 group by `time_by_day`.`month_of_year` order by ISNULL(`time_by_day`.`month_of_year`) ASC, `time_by_day`.`month_of_year` ASC]
2014-02-22 13:13:06,356 DEBUG [mondrian.sql] 323: , exec 1 ms
2014-02-22 13:13:06,357 DEBUG [mondrian.sql] 323: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:06,360 DEBUG [mondrian.mdx] 3789: with member [Time].[1997].[Q1].[xxx] as 'Aggregate({[Time].[1997].[Q1].[1], [Time].[1997].[Q1].[2]})'
select {[Measures].[Unit Sales], [Measures].[Store Cost], [Measures].[Store Sales]} ON COLUMNS,
  Hierarchize(Union(Union({[Time].[1997], [Time].[1998], [Time].[1997].[Q1].[xxx]}, [Time].[1997].Children), [Time].[1997].[Q1].Children)) ON ROWS
from [Sales]

2014-02-22 13:13:06,371 DEBUG [mondrian.sql] 324: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, sum(`sales_fact_1997`.`store_cost`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` in ('Q3', 'Q4') group by `time_by_day`.`the_year`, `time_by_day`.`quarter`]
2014-02-22 13:13:06,384 DEBUG [mondrian.sql] 325: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, `time_by_day`.`quarter` as `c1`, `time_by_day`.`month_of_year` as `c2`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_cost`) as `m1` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `time_by_day`.`quarter` = 'Q1' and `time_by_day`.`month_of_year` in (1, 2, 3) group by `time_by_day`.`the_year`, `time_by_day`.`quarter`, `time_by_day`.`month_of_year`]
2014-02-22 13:13:06,598 DEBUG [mondrian.sql] 325: , exec 213 ms
2014-02-22 13:13:06,600 DEBUG [mondrian.sql] 325: , exec+fetch 216 ms, 3 rows
2014-02-22 13:13:06,752 DEBUG [mondrian.sql] 324: , exec 381 ms
2014-02-22 13:13:06,753 DEBUG [mondrian.sql] 324: , exec+fetch 382 ms, 2 rows
2014-02-22 13:13:06,755 DEBUG [mondrian.sql] 326: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, sum(`sales_fact_1997`.`unit_sales`) as `m0`, sum(`sales_fact_1997`.`store_cost`) as `m1`, sum(`sales_fact_1997`.`store_sales`) as `m2` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1998 group by `time_by_day`.`the_year`]
2014-02-22 13:13:06,761 DEBUG [mondrian.sql] 326: , exec 5 ms
2014-02-22 13:13:06,762 DEBUG [mondrian.sql] 326: , exec+fetch 6 ms, 0 rows
2014-02-22 13:13:06,763 DEBUG [mondrian.mdx] 3789: exec: 403 ms
2014-02-22 13:13:06,768 DEBUG [mondrian.mdx] 3809: with member [Store].[Total] as 'Sum([Store].[Store Country].Members)'
  member [Store Type].[Total] as 'Sum([Store Type].[Store Type].Members)'
  member [Gender].[Total] as 'Sum([Gender].[Gender].Members)'
  member [Measures].[x] as '[Measures].[Store Sales]'
select {[Measures].[x]} ON COLUMNS,
  {([Store].[Total], [Store Type].[Total], [Gender].[Total])} ON ROWS
from [Sales]

2014-02-22 13:13:06,774 DEBUG [mondrian.sql] 327: Segment.load: executing sql [select `store`.`store_country` as `c0`, `store`.`store_type` as `c1`, `time_by_day`.`the_year` as `c2`, `customer`.`gender` as `c3`, sum(`sales_fact_1997`.`store_sales`) as `m0` from `store` as `store`, `sales_fact_1997` as `sales_fact_1997`, `time_by_day` as `time_by_day`, `customer` as `customer` where `sales_fact_1997`.`store_id` = `store`.`store_id` and `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 and `sales_fact_1997`.`customer_id` = `customer`.`customer_id` group by `store`.`store_country`, `store`.`store_type`, `time_by_day`.`the_year`, `customer`.`gender`]
2014-02-22 13:13:07,466 DEBUG [mondrian.sql] 327: , exec 691 ms
2014-02-22 13:13:07,468 DEBUG [mondrian.sql] 327: , exec+fetch 694 ms, 10 rows
2014-02-22 13:13:07,470 DEBUG [mondrian.mdx] 3809: exec: 702 ms
2014-02-22 13:13:07,473 DEBUG [mondrian.mdx] 3819: select {[Measures].[Unit Sales]} ON COLUMNS,
  Filter([Store].[Store Name].Members, ([Store].CurrentMember.Properties("Store Manager") = "Smith")) ON ROWS
from [Sales]

2014-02-22 13:13:07,477 DEBUG [mondrian.mdx] 3819: exec: 4 ms
2014-02-22 13:13:07,602 DEBUG [mondrian.sql] 328: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,603 DEBUG [mondrian.sql] 328: , exec 0 ms
2014-02-22 13:13:07,604 DEBUG [mondrian.sql] 328: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:07,607 DEBUG [mondrian.sql] 329: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,607 DEBUG [mondrian.sql] 329: , exec 0 ms
2014-02-22 13:13:07,608 DEBUG [mondrian.sql] 329: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:07,626 DEBUG [mondrian.sql] 330: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,626 DEBUG [mondrian.sql] 330: , exec 0 ms
2014-02-22 13:13:07,627 DEBUG [mondrian.sql] 330: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:07,628 DEBUG [mondrian.sql] 331: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,628 DEBUG [mondrian.sql] 331: , exec 0 ms
2014-02-22 13:13:07,629 DEBUG [mondrian.sql] 331: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:07,656 DEBUG [mondrian.sql] 332: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,656 DEBUG [mondrian.sql] 332: , exec 0 ms
2014-02-22 13:13:07,657 DEBUG [mondrian.sql] 332: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:07,657 DEBUG [mondrian.sql] 333: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,658 DEBUG [mondrian.sql] 333: , exec 0 ms
2014-02-22 13:13:07,659 DEBUG [mondrian.sql] 333: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:07,673 DEBUG [mondrian.sql] 334: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:13:07,674 DEBUG [mondrian.sql] 334: , exec 0 ms
2014-02-22 13:13:07,674 DEBUG [mondrian.sql] 334: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:07,675 DEBUG [mondrian.sql] 335: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:13:07,676 DEBUG [mondrian.sql] 335: , exec 0 ms
2014-02-22 13:13:07,676 DEBUG [mondrian.sql] 335: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:07,677 DEBUG [mondrian.sql] 336: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:13:07,678 DEBUG [mondrian.sql] 336: , exec 0 ms
2014-02-22 13:13:07,679 DEBUG [mondrian.sql] 336: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:07,680 DEBUG [mondrian.sql] 337: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:13:07,681 DEBUG [mondrian.sql] 337: , exec 0 ms
2014-02-22 13:13:07,681 DEBUG [mondrian.sql] 337: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:07,682 DEBUG [mondrian.sql] 338: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:13:07,683 DEBUG [mondrian.sql] 338: , exec 0 ms
2014-02-22 13:13:07,684 DEBUG [mondrian.sql] 338: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:07,685 DEBUG [mondrian.sql] 339: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:13:07,685 DEBUG [mondrian.sql] 339: , exec 0 ms
2014-02-22 13:13:07,686 DEBUG [mondrian.sql] 339: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:07,802 DEBUG [mondrian.sql] 340: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,803 DEBUG [mondrian.sql] 340: , exec 0 ms
2014-02-22 13:13:07,804 DEBUG [mondrian.sql] 340: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:07,808 DEBUG [mondrian.sql] 341: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,809 DEBUG [mondrian.sql] 341: , exec 0 ms
2014-02-22 13:13:07,809 DEBUG [mondrian.sql] 341: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:07,829 DEBUG [mondrian.sql] 342: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,830 DEBUG [mondrian.sql] 342: , exec 0 ms
2014-02-22 13:13:07,830 DEBUG [mondrian.sql] 342: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:07,831 DEBUG [mondrian.sql] 343: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,832 DEBUG [mondrian.sql] 343: , exec 0 ms
2014-02-22 13:13:07,832 DEBUG [mondrian.sql] 343: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:07,867 DEBUG [mondrian.sql] 344: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,868 DEBUG [mondrian.sql] 344: , exec 0 ms
2014-02-22 13:13:07,869 DEBUG [mondrian.sql] 344: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:07,870 DEBUG [mondrian.sql] 345: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:07,874 DEBUG [mondrian.sql] 345: , exec 3 ms
2014-02-22 13:13:07,877 DEBUG [mondrian.sql] 345: , exec+fetch 7 ms, 2 rows
2014-02-22 13:13:07,892 DEBUG [mondrian.sql] 346: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:13:07,892 DEBUG [mondrian.sql] 346: , exec 0 ms
2014-02-22 13:13:07,893 DEBUG [mondrian.sql] 346: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:07,894 DEBUG [mondrian.sql] 347: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:13:07,894 DEBUG [mondrian.sql] 347: , exec 0 ms
2014-02-22 13:13:07,895 DEBUG [mondrian.sql] 347: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:07,896 DEBUG [mondrian.sql] 348: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:13:07,897 DEBUG [mondrian.sql] 348: , exec 0 ms
2014-02-22 13:13:07,897 DEBUG [mondrian.sql] 348: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:07,898 DEBUG [mondrian.sql] 349: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:13:07,899 DEBUG [mondrian.sql] 349: , exec 0 ms
2014-02-22 13:13:07,899 DEBUG [mondrian.sql] 349: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:07,900 DEBUG [mondrian.sql] 350: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:13:07,901 DEBUG [mondrian.sql] 350: , exec 0 ms
2014-02-22 13:13:07,902 DEBUG [mondrian.sql] 350: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:07,904 DEBUG [mondrian.sql] 351: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:13:07,906 DEBUG [mondrian.sql] 351: , exec 0 ms
2014-02-22 13:13:07,906 DEBUG [mondrian.sql] 351: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:07,909 DEBUG [mondrian.mdx] 4182: select {[Gender3].[All Gender]} ON COLUMNS
from [Sales]

2014-02-22 13:13:07,913 DEBUG [mondrian.sql] 352: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `the_year`) from `time_by_day`]
2014-02-22 13:13:07,915 DEBUG [mondrian.sql] 352: , exec 2 ms
2014-02-22 13:13:07,916 DEBUG [mondrian.sql] 352: , exec+fetch 3 ms, 1 rows
2014-02-22 13:13:07,917 DEBUG [mondrian.sql] 353: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year`]
2014-02-22 13:13:07,919 DEBUG [mondrian.sql] 353: , exec 0 ms
2014-02-22 13:13:07,920 DEBUG [mondrian.sql] 353: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:07,920 DEBUG [mondrian.mdx] 4182: exec: 11 ms
2014-02-22 13:13:08,084 DEBUG [mondrian.sql] 354: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,085 DEBUG [mondrian.sql] 354: , exec 0 ms
2014-02-22 13:13:08,086 DEBUG [mondrian.sql] 354: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:08,089 DEBUG [mondrian.sql] 355: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,090 DEBUG [mondrian.sql] 355: , exec 0 ms
2014-02-22 13:13:08,090 DEBUG [mondrian.sql] 355: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:08,139 DEBUG [mondrian.sql] 356: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,140 DEBUG [mondrian.sql] 356: , exec 0 ms
2014-02-22 13:13:08,141 DEBUG [mondrian.sql] 356: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:08,142 DEBUG [mondrian.sql] 357: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,143 DEBUG [mondrian.sql] 357: , exec 0 ms
2014-02-22 13:13:08,144 DEBUG [mondrian.sql] 357: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:08,171 DEBUG [mondrian.sql] 358: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,172 DEBUG [mondrian.sql] 358: , exec 0 ms
2014-02-22 13:13:08,173 DEBUG [mondrian.sql] 358: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:08,174 DEBUG [mondrian.sql] 359: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,176 DEBUG [mondrian.sql] 359: , exec 1 ms
2014-02-22 13:13:08,178 DEBUG [mondrian.sql] 359: , exec+fetch 3 ms, 2 rows
2014-02-22 13:13:08,191 DEBUG [mondrian.sql] 360: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:13:08,191 DEBUG [mondrian.sql] 360: , exec 0 ms
2014-02-22 13:13:08,192 DEBUG [mondrian.sql] 360: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:08,192 DEBUG [mondrian.sql] 361: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:13:08,193 DEBUG [mondrian.sql] 361: , exec 0 ms
2014-02-22 13:13:08,193 DEBUG [mondrian.sql] 361: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:08,194 DEBUG [mondrian.sql] 362: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:13:08,195 DEBUG [mondrian.sql] 362: , exec 0 ms
2014-02-22 13:13:08,195 DEBUG [mondrian.sql] 362: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:08,196 DEBUG [mondrian.sql] 363: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:13:08,196 DEBUG [mondrian.sql] 363: , exec 0 ms
2014-02-22 13:13:08,197 DEBUG [mondrian.sql] 363: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:08,197 DEBUG [mondrian.sql] 364: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:13:08,198 DEBUG [mondrian.sql] 364: , exec 0 ms
2014-02-22 13:13:08,198 DEBUG [mondrian.sql] 364: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:08,199 DEBUG [mondrian.sql] 365: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:13:08,199 DEBUG [mondrian.sql] 365: , exec 0 ms
2014-02-22 13:13:08,200 DEBUG [mondrian.sql] 365: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:08,202 DEBUG [mondrian.mdx] 4363: select {[Gender4].[All Gender]} ON COLUMNS
from [Sales]

2014-02-22 13:13:08,204 DEBUG [mondrian.sql] 366: SqlStatisticsProvider.getColumnCardinality: executing sql [select count(distinct `the_year`) from `time_by_day`]
2014-02-22 13:13:08,205 DEBUG [mondrian.sql] 366: , exec 0 ms
2014-02-22 13:13:08,206 DEBUG [mondrian.sql] 366: , exec+fetch 1 ms, 1 rows
2014-02-22 13:13:08,207 DEBUG [mondrian.sql] 367: Segment.load: executing sql [select `time_by_day`.`the_year` as `c0`, sum(`sales_fact_1997`.`unit_sales`) as `m0` from `time_by_day` as `time_by_day`, `sales_fact_1997` as `sales_fact_1997` where `sales_fact_1997`.`time_id` = `time_by_day`.`time_id` and `time_by_day`.`the_year` = 1997 group by `time_by_day`.`the_year`]
2014-02-22 13:13:08,208 DEBUG [mondrian.sql] 367: , exec 0 ms
2014-02-22 13:13:08,209 DEBUG [mondrian.sql] 367: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:08,210 DEBUG [mondrian.mdx] 4363: exec: 8 ms
2014-02-22 13:13:08,346 DEBUG [mondrian.sql] 368: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,347 DEBUG [mondrian.sql] 368: , exec 0 ms
2014-02-22 13:13:08,348 DEBUG [mondrian.sql] 368: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:08,351 DEBUG [mondrian.sql] 369: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,352 DEBUG [mondrian.sql] 369: , exec 0 ms
2014-02-22 13:13:08,352 DEBUG [mondrian.sql] 369: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:08,375 DEBUG [mondrian.sql] 370: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,376 DEBUG [mondrian.sql] 370: , exec 0 ms
2014-02-22 13:13:08,377 DEBUG [mondrian.sql] 370: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:08,381 DEBUG [mondrian.sql] 371: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,383 DEBUG [mondrian.sql] 371: , exec 1 ms
2014-02-22 13:13:08,383 DEBUG [mondrian.sql] 371: , exec+fetch 2 ms, 2 rows
2014-02-22 13:13:08,418 DEBUG [mondrian.sql] 372: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,419 DEBUG [mondrian.sql] 372: , exec 0 ms
2014-02-22 13:13:08,419 DEBUG [mondrian.sql] 372: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:08,420 DEBUG [mondrian.sql] 373: SqlTupleReader.readTuples [[Time].[Year]]: executing sql [select `time_by_day`.`the_year` as `c0` from `time_by_day` as `time_by_day` group by `time_by_day`.`the_year` order by ISNULL(`time_by_day`.`the_year`) ASC, `time_by_day`.`the_year` ASC]
2014-02-22 13:13:08,421 DEBUG [mondrian.sql] 373: , exec 0 ms
2014-02-22 13:13:08,421 DEBUG [mondrian.sql] 373: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:08,432 DEBUG [mondrian.sql] 374: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_country` as `c0` from `store` as `store` where UPPER(`store`.`store_country`) = UPPER('USA') group by `store`.`store_country` order by ISNULL(`store`.`store_country`) ASC, `store`.`store_country` ASC]
2014-02-22 13:13:08,433 DEBUG [mondrian.sql] 374: , exec 0 ms
2014-02-22 13:13:08,434 DEBUG [mondrian.sql] 374: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:08,435 DEBUG [mondrian.sql] 375: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_state` as `c0` from `store` as `store` where (`store`.`store_country` = 'USA') and UPPER(`store`.`store_state`) = UPPER('CA') group by `store`.`store_state` order by ISNULL(`store`.`store_state`) ASC, `store`.`store_state` ASC]
2014-02-22 13:13:08,437 DEBUG [mondrian.sql] 375: , exec 1 ms
2014-02-22 13:13:08,438 DEBUG [mondrian.sql] 375: , exec+fetch 3 ms, 1 rows
2014-02-22 13:13:08,441 DEBUG [mondrian.sql] 376: SqlMemberSource.getMemberChildren: executing sql [select `store`.`store_city` as `c0` from `store` as `store` where (`store`.`store_state` = 'CA') and UPPER(`store`.`store_city`) = UPPER('Los Angeles') group by `store`.`store_city` order by ISNULL(`store`.`store_city`) ASC, `store`.`store_city` ASC]
2014-02-22 13:13:08,443 DEBUG [mondrian.sql] 376: , exec 0 ms
2014-02-22 13:13:08,444 DEBUG [mondrian.sql] 376: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:08,445 DEBUG [mondrian.sql] 377: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`country` as `c0` from `customer` as `customer` where UPPER(`customer`.`country`) = UPPER('USA') group by `customer`.`country` order by ISNULL(`customer`.`country`) ASC, `customer`.`country` ASC]
2014-02-22 13:13:08,446 DEBUG [mondrian.sql] 377: , exec 0 ms
2014-02-22 13:13:08,447 DEBUG [mondrian.sql] 377: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:08,449 DEBUG [mondrian.sql] 378: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`state_province` as `c0` from `customer` as `customer` where (`customer`.`country` = 'USA') and UPPER(`customer`.`state_province`) = UPPER('CA') group by `customer`.`state_province` order by ISNULL(`customer`.`state_province`) ASC, `customer`.`state_province` ASC]
2014-02-22 13:13:08,450 DEBUG [mondrian.sql] 378: , exec 0 ms
2014-02-22 13:13:08,451 DEBUG [mondrian.sql] 378: , exec+fetch 2 ms, 1 rows
2014-02-22 13:13:08,453 DEBUG [mondrian.sql] 379: SqlMemberSource.getMemberChildren: executing sql [select `customer`.`city` as `c0` from `customer` as `customer` where (`customer`.`state_province` = 'CA') and UPPER(`customer`.`city`) = UPPER('Los Angeles') group by `customer`.`city` order by ISNULL(`customer`.`city`) ASC, `customer`.`city` ASC]
2014-02-22 13:13:08,455 DEBUG [mondrian.sql] 379: , exec 1 ms
2014-02-22 13:13:08,456 DEBUG [mondrian.sql] 379: , exec+fetch 3 ms, 1 rows
2014-02-22 13:13:08,458 DEBUG [mondrian.sql] 380: SqlTupleReader.readTuples [[Product].[Product Family]]: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:13:08,459 DEBUG [mondrian.sql] 380: , exec 0 ms
2014-02-22 13:13:08,460 DEBUG [mondrian.sql] 380: , exec+fetch 1 ms, 3 rows
2014-02-22 13:13:08,460 DEBUG [mondrian.sql] 381: SqlTupleReader.readTuples [[Product].[Product Family]]: executing sql [select `product_class`.`product_family` as `c0` from `product` as `product`, `product_class` as `product_class` where `product`.`product_class_id` = `product_class`.`product_class_id` group by `product_class`.`product_family` order by ISNULL(`product_class`.`product_family`) ASC, `product_class`.`product_family` ASC]
2014-02-22 13:13:08,461 DEBUG [mondrian.sql] 381: , exec 0 ms
2014-02-22 13:13:08,462 DEBUG [mondrian.sql] 381: , exec+fetch 2 ms, 3 rows
2014-02-22 13:13:08,462 DEBUG [mondrian.sql] 382: SqlTupleReader.readTuples [[Gender].[Gender]]: executing sql [select `customer`.`gender` as `c0` from `customer` as `customer` group by `customer`.`gender` order by ISNULL(`customer`.`gender`) ASC, `customer`.`gender` ASC]
2014-02-22 13:13:08,463 DEBUG [mondrian.sql] 382: , exec 0 ms
2014-02-22 13:13:08,464 DEBUG [mondrian.sql] 382: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:08,464 DEBUG [mondrian.sql] 383: SqlTupleReader.readTuples [[Gender].[Gender]]: executing sql [select `customer`.`gender` as `c0` from `customer` as `customer` group by `customer`.`gender` order by ISNULL(`customer`.`gender`) ASC, `customer`.`gender` ASC]
2014-02-22 13:13:08,465 DEBUG [mondrian.sql] 383: , exec 0 ms
2014-02-22 13:13:08,466 DEBUG [mondrian.sql] 383: , exec+fetch 1 ms, 2 rows
2014-02-22 13:13:08,467 DEBUG [mondrian.mdx] 4548: with member [Measures].[Foo] as '[Gender].CurrentMember.Name'
select {[Measures].[Foo]} ON COLUMNS
from [Sales_DimWithoutAll]

2014-02-22 13:13:08,473 DEBUG [mondrian.mdx] 4548: exec: 6 ms
2014-02-22 13:13:08,475 DEBUG [mondrian.mdx] 4556: with member [Measures].[Foo] as '[Product].CurrentMember.Name'
select {[Measures].[Foo]} ON COLUMNS
from [Sales_DimWithoutAll]

